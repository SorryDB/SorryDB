{
  "documentation": "deduplicated list of sorries, for each unique goal string the most recent inclusion date is chosen",
  "sorries": [
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "84fdd60d2dc228fa6723931f05d022be3eff3751",
        "lean_version": "v4.24.0-rc1"
      },
      "location": {
        "path": "Compfiles/Imo1988P3.lean",
        "start_line": 38,
        "start_column": 2,
        "end_line": 38,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u2115+ \u2192 \u2115+\nh\u2080 : f 1 = 1\nh\u2081 : f 3 = 3\nh\u2082 : \u2200 (n : \u2115+), f (2 * n) = f n\nh\u2083 : \u2200 (n : \u2115+), f (4 * n + 1) + f n = 2 * f (2 * n + 1)\nh\u2084 : \u2200 (n : \u2115+), f (4 * n + 3) + 2 * f n = 3 * f (2 * n + 1)\nA : Finset \u2191{n | n \u2264 1988 \u2227 f n = n}\n\u22a2 A.card = Imo1988P3.solution",
        "url": "https://github.com/dwrensha/compfiles/blob/84fdd60d2dc228fa6723931f05d022be3eff3751/Compfiles/Imo1988P3.lean#L38"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2025-09-17T12:37:38-04:00",
        "inclusion_date": "2025-10-06T10:31:08.559168+00:00"
      },
      "id": "dcc5cc888afca7b770573ecbfc9d188b437648ae81972c2b7c434e320c373255"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "generalized-trace",
        "commit": "5c479c65ad77d0b6ad82e6622abd2ad85e349c7d",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/Classification/GeneralizedTrace.lean",
        "start_line": 31,
        "start_column": 6,
        "end_line": 31,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case mpr.intro.intro.intro.intro.intro.intro.refine_2\n\u03c6 : Formula \u2115\n\u03c6_letterless : \u03c6.letterless\nM : Model\nr : M.World\nw\u271d\u00b9 : M.IsTree r\nw\u271d : Fintype M.World\nw : M.World\nh : \u00acw \u22a7 \u03c6\n\u22a2 (M\u21bew).finHeight = Frame.World.finHeight w",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/5c479c65ad77d0b6ad82e6622abd2ad85e349c7d/Foundation/ProvabilityLogic/Classification/GeneralizedTrace.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-09-16T20:46:24+09:00",
        "inclusion_date": "2025-09-17T03:36:03.416511+00:00"
      },
      "id": "3524f6c7909a47567132749f0039d75a4b4fe76306d56399c28e81447ddb9446"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "218b6615448da46a5c14a086fa57c197a0a8131a",
        "lean_version": "v4.22.0-rc2"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainTileCount.lean",
        "start_line": 455,
        "start_column": 56,
        "end_line": 455,
        "end_column": 61
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Finset (\ud835\udd13 X)\n\u03d1 : \u0398 X\nN : \u2115\nL : Grid X\nhL : L \u2208 @Antichain.\ud835\udcdb' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N\nt : Finset (\ud835\udd13 X) := {p | \ud835\udcd8 p = L}\n\u22a2 \u2211 p \u2208 @Antichain.\ud835\udd04' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N \u2229 t, volume (E p \u2229 G \u2229 \u2191L) +\n      \u2211 p \u2208 @Antichain.\ud835\udd04' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N \\ t, volume (E p \u2229 G \u2229 \u2191L) \u2264\n    \u2211 p \u2208 @Antichain.\ud835\udd04' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N \u2229 t, volume (E p \u2229 G \u2229 \u2191L) +\n      \u2211 p \u2208 @Antichain.\ud835\udd04' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N \\ t, volume (E p \u2229 G \u2229 \u2191L)",
        "url": "https://github.com/fpvandoorn/carleson/blob/218b6615448da46a5c14a086fa57c197a0a8131a/Carleson/Antichain/AntichainTileCount.lean#L455"
      },
      "metadata": {
        "blame_email_hash": "44a80a4a9c95",
        "blame_date": "2025-07-10T17:55:50+02:00",
        "inclusion_date": "2025-07-11T23:48:31.060328+00:00"
      },
      "id": "8ba650ea6577ef47250f9aa9d829155845a85fd7be54232cdfdd0a40e3d0566d"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-cyclic-base-change",
        "commit": "01017102c09b432e1ae225ba67756f5174a8cd10",
        "lean_version": "v4.24.0-rc1"
      },
      "location": {
        "path": "FLT/GaloisRepresentation/Automorphic.lean",
        "start_line": 98,
        "start_column": 40,
        "end_line": 98,
        "end_column": 45
      },
      "debug_info": {
        "goal": "F : Type u_1\nE : Type u_2\nD : Type u_3\ninst\u271d\u2075 : Field F\ninst\u271d\u2074 : Field E\ninst\u271d\u00b3 : Algebra F E\ninst\u271d\u00b2 : Ring D\ninst\u271d\u00b9 : Algebra F D\ninst\u271d : IsQuaternionAlgebra F D\n\u22a2 IsQuaternionAlgebra E (TensorProduct F E D)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/01017102c09b432e1ae225ba67756f5174a8cd10/FLT/GaloisRepresentation/Automorphic.lean#L98"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-10-03T12:42:31+01:00",
        "inclusion_date": "2025-10-05T11:56:40.408849+00:00"
      },
      "id": "1be796216fcff92b05d85032b32e94980f1d4701ddb7e3e36ea166fadfcae6c2"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/quote4",
        "branch": "master",
        "commit": "2e582a44b0150db152bff1c8484eb557fb5340da",
        "lean_version": "v4.24.0-rc1"
      },
      "location": {
        "path": "examples/introQ.lean",
        "start_line": 16,
        "start_column": 18,
        "end_line": 16,
        "end_column": 23
      },
      "debug_info": {
        "goal": "\u00ab$P\u00bb : \u2200 {n : Nat}, n = 1\n$fst\u271d : Nat\n\u00ab$m\u00bb : $fst\u271d = 1\n\u22a2 $fst\u271d = 1",
        "url": "https://github.com/leanprover-community/quote4/blob/2e582a44b0150db152bff1c8484eb557fb5340da/examples/introQ.lean#L16"
      },
      "metadata": {
        "blame_email_hash": "1c4ac4603b04",
        "blame_date": "2023-07-14T18:25:43-07:00",
        "inclusion_date": "2025-10-05T12:34:59.839749+00:00"
      },
      "id": "7ed02e37f05f11f01ddef0b7bdd775e43f15486e29cbbf7a0bbdb6ddab1cc625"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/duper",
        "branch": "querySMT",
        "commit": "43faa09ee1e52d399fb7f8cf9d5b365343d8919c",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "Duper/Tests/test_continuity.lean",
        "start_line": 18,
        "start_column": 50,
        "end_line": 18,
        "end_column": 55
      },
      "debug_info": {
        "goal": "a : Real\n\u22a2 dist a a = zero",
        "url": "https://github.com/leanprover-community/duper/blob/43faa09ee1e52d399fb7f8cf9d5b365343d8919c/Duper/Tests/test_continuity.lean#L18"
      },
      "metadata": {
        "blame_email_hash": "4ac7eab8a488",
        "blame_date": "2023-06-05T10:39:00+02:00",
        "inclusion_date": "2025-10-05T12:56:17.702007+00:00"
      },
      "id": "75ed5458340cb0e9ac729a128519e559527ae0f30370357d4761da1fdb379c53"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/batteries",
        "branch": "stream-combinators",
        "commit": "7d24d60f47d571888eee04a1f63fa9056aff19e4",
        "lean_version": "v4.24.0-rc1"
      },
      "location": {
        "path": "BatteriesTest/lint_unreachableTactic.lean",
        "start_line": 24,
        "start_column": 2,
        "end_line": 25,
        "end_column": 5
      },
      "debug_info": {
        "goal": "\u22a2 1 = 1",
        "url": "https://github.com/leanprover-community/batteries/blob/7d24d60f47d571888eee04a1f63fa9056aff19e4/BatteriesTest/lint_unreachableTactic.lean#L24"
      },
      "metadata": {
        "blame_email_hash": "45b5ed8e3c8e",
        "blame_date": "2023-08-26T11:27:15+01:00",
        "inclusion_date": "2025-10-06T11:06:31.332111+00:00"
      },
      "id": "e8aa0ee131bd3ad794e2be7a5cf84a509266fada1fc40e4f619fc7952d3f3db3"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "d279b56adead908de8bd086ea46b82895cf4f12c",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "AesopTest/205.lean",
        "start_line": 31,
        "start_column": 2,
        "end_line": 31,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nx y a b : \u03b1\nh\u2082 : R x a\nh\u2083 : R y b\nfwd : R b y\nfwd_1 : R a x\nfwd_2 : R b b\nfwd_3 : R y y\nfwd_4 : R a a\nfwd_5 : R x x\n\u22a2 False",
        "url": "https://github.com/leanprover-community/aesop/blob/d279b56adead908de8bd086ea46b82895cf4f12c/AesopTest/205.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2025-04-29T23:07:06+02:00",
        "inclusion_date": "2025-04-30T23:33:22.583043+00:00"
      },
      "id": "2ed3ed49a5906744d12cce67d1175d136b7f420f696980938c3b66e07db8e8de"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BinomialRandomGraph.lean",
        "start_line": 46,
        "start_column": 75,
        "end_line": 46,
        "end_column": 80
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d : MeasurableSpace \u03a9\nG : \u03a9 \u2192 SimpleGraph \u03b1\np : \u211d\u22650\n\u03bc : Measure \u03a9\nhG : IsBinomialRandomGraph G p \u03bc\n\u22a2 iIndepFun (fun e \u03c9 => e \u2208 (G \u03c9).edgeSet) \u03bc",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BinomialRandomGraph.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-06T17:45:28+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "46b51bb59c19a979862a472d54fe0443db1e06fd4900df7d9725c480a4a05693"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "f4441d7327caa75ae7879ecfda33fc60ab0cf17e",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 7245,
        "start_column": 65,
        "end_line": 7245,
        "end_column": 70
      },
      "debug_info": {
        "goal": "\u03bd : \u211d \u2192 \u211d\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\nc_close : \u211d\nc_close_pos : c_close > 0\nh_close :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 (\u03b5 : \u211d),\n        0 < \u03b5 \u2192 \u03b5 < 1 \u2192 2 < X * \u03b5 \u2192 \u2016SmoothedChebyshev \u03bd \u03b5 X - \u2191(ChebyshevPsi X)\u2016 \u2264 c_close * \u03b5 * X * Real.log X\n\u03b5_main C_main : \u211d\n\u03b5_main_pos : 0 < \u03b5_main\nC_main_pos : 0 < C_main\nh_main : \u2200 \u03b5 \u2208 Ioo 0 \u03b5_main, \u2016MellinTransform (fun x => \u2191(Smooth1 \u03bd \u03b5 x)) 1 - 1\u2016 \u2264 C_main * \u03b5\nA C_bnd : \u211d\nC_bnd_pos : 0 < C_bnd\nA_in_Ioc : A \u2208 Ioc 0 (1 / 2)\nzeta_bnd : LogDerivZetaHasBound A C_bnd\nholo1 :\n  \u2200 (T : \u211d),\n    3 \u2264 T \u2192\n      HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (Icc (1 - A / Real.log T ^ 9) 2 \u00d7\u2102 Icc (-T) T \\ {1})\n\u03c3\u2082' : \u211d\n\u03c3\u2082 : \u211d := max \u03c3\u2082' (1 / 2)\n\u03c3\u2082_pos : 0 < \u03c3\u2082\n\u03c3\u2082_lt_one : \u03c3\u2082 < 1\nholo2 : HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (uIcc \u03c3\u2082 2 \u00d7\u2102 uIcc (-3) 3 \\ {1})\nc\u2081 : \u211d\nc\u2081pos : c\u2081 > 0\nhc\u2081 : \u2200 (\u03b5 : \u211d), 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2081 \u03bd \u03b5 X T\u2016 \u2264 c\u2081 * X * Real.log X / (\u03b5 * T)\nc\u2082 : \u211d\nc\u2082pos : 0 < c\u2082\nhc\u2082 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2082 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2082 * X / (\u03b5 * T)\nc\u2083 : \u211d\nc\u2083pos : 0 < c\u2083\nhc\u2083 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2083 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2083 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2085 : \u211d\nc\u2085pos : 0 < c\u2085\nhc\u2085 : \u2200 (X : \u211d), 3 < X \u2192 \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2016I\u2085 \u03bd \u03b5 X \u03c3\u2082\u2016 \u2264 c\u2085 * X ^ \u03c3\u2082 / \u03b5\nc\u2087 : \u211d\nc\u2087pos : 0 < c\u2087\nhc\u2087 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2087 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2087 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2088 : \u211d\nc\u2088pos : 0 < c\u2088\nhc\u2088 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2088 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2088 * X / (\u03b5 * T)\nc\u2089 : \u211d\nc\u2089pos : c\u2089 > 0\nhc\u2089 : \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2089 \u03bd \u03b5 X T\u2016 \u2264 c\u2089 * X * Real.log X / (\u03b5 * T)\nc\u2084 : \u211d\nc\u2084pos : 0 \u2264 c\u2084\nTlb\u2084 : \u211d\nTlb\u2084bnd : 3 < Tlb\u2084\nhc\u2084 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              Tlb\u2084 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2084 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 \u2264 c\u2084 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2086 : \u211d\nc\u2086pos : 0 \u2264 c\u2086\nTlb\u2086 : \u211d\nTlb\u2086bnd : 3 < Tlb\u2086\nhc\u2086 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              Tlb\u2086 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2086 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 \u2264 c\u2086 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nC' : \u211d := c_close + C_main\nC'' : \u211d := c\u2081 + c\u2082 + c\u2088 + c\u2089\nC''' : \u211d := c\u2083 + c\u2084 + c\u2086 + c\u2087\nc : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\n\u03b5x : \u211d \u2192 \u211d := fun x => Real.exp (-c * Real.log x ^ (1 / 10))\nTx : \u211d \u2192 \u211d := fun x => Real.exp (2 * c * Real.log x ^ (1 / 10))\neventually_\u03b5x_lt_one : \u2200\u1da0 (x : \u211d) in atTop, \u03b5x x < 1\neventually_2_lt : \u2200\u1da0 (x : \u211d) in atTop, 2 < x * \u03b5x x\neventually_T_gt_3 : \u2200\u1da0 (x : \u211d) in atTop, 3 < Tx x\neventually_T_gt_Tlb\u2084 : \u2200\u1da0 (x : \u211d) in atTop, Tlb\u2084 < Tx x\neventually_T_gt_Tlb\u2086 : \u2200\u1da0 (x : \u211d) in atTop, Tlb\u2086 < Tx x\neventually_\u03c3\u2082_lt_\u03c3\u2081 : \u2200\u1da0 (x : \u211d) in atTop, \u03c3\u2082 < 1 - A / Real.log (Tx x) ^ 9\neventually_\u03b5_lt_\u03b5_main : \u2200\u1da0 (x : \u211d) in atTop, \u03b5x x < \u03b5_main\n\u22a2 \u2200\u1da0 (x : \u211d) in atTop, 1 \u2264 Real.log x",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/f4441d7327caa75ae7879ecfda33fc60ab0cf17e/PrimeNumberTheoremAnd/MediumPNT.lean#L7245"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-07-22T12:27:31-04:00",
        "inclusion_date": "2025-07-22T23:05:23.619594+00:00"
      },
      "id": "f8a609d9205c37ab90913b178451bedc7cf4fd7315f026f1668d14a116778cf7"
    }
  ]
}
