{
  "documentation": "deduplicated list of sorries, for each unique goal string the most recent inclusion date is chosen",
  "sorries": [
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "54e2692f53004e900064c6f6e8e5a38b2754b0ad",
        "lean_version": "v4.24.0-rc1"
      },
      "location": {
        "path": "Compfiles/Imo1988P3.lean",
        "start_line": 38,
        "start_column": 2,
        "end_line": 38,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u2115+ \u2192 \u2115+\nh\u2080 : f 1 = 1\nh\u2081 : f 3 = 3\nh\u2082 : \u2200 (n : \u2115+), f (2 * n) = f n\nh\u2083 : \u2200 (n : \u2115+), f (4 * n + 1) + f n = 2 * f (2 * n + 1)\nh\u2084 : \u2200 (n : \u2115+), f (4 * n + 3) + 2 * f n = 3 * f (2 * n + 1)\nA : Finset \u2191{n | n \u2264 1988 \u2227 f n = n}\n\u22a2 A.card = Imo1988P3.solution",
        "url": "https://github.com/dwrensha/compfiles/blob/54e2692f53004e900064c6f6e8e5a38b2754b0ad/Compfiles/Imo1988P3.lean#L38"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2025-09-17T12:37:38-04:00",
        "inclusion_date": "2025-09-19T03:11:14.409941+00:00"
      },
      "id": "d6745befdf5fbb8ce111728e06e7551a46119aef55e0795b5fc835374dba178d"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "generalized-trace",
        "commit": "5c479c65ad77d0b6ad82e6622abd2ad85e349c7d",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/Classification/GeneralizedTrace.lean",
        "start_line": 31,
        "start_column": 6,
        "end_line": 31,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case mpr.intro.intro.intro.intro.intro.intro.refine_2\n\u03c6 : Formula \u2115\n\u03c6_letterless : \u03c6.letterless\nM : Model\nr : M.World\nw\u271d\u00b9 : M.IsTree r\nw\u271d : Fintype M.World\nw : M.World\nh : \u00acw \u22a7 \u03c6\n\u22a2 (M\u21bew).finHeight = Frame.World.finHeight w",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/5c479c65ad77d0b6ad82e6622abd2ad85e349c7d/Foundation/ProvabilityLogic/Classification/GeneralizedTrace.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-09-16T20:46:24+09:00",
        "inclusion_date": "2025-09-17T03:36:03.416511+00:00"
      },
      "id": "3524f6c7909a47567132749f0039d75a4b4fe76306d56399c28e81447ddb9446"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "218b6615448da46a5c14a086fa57c197a0a8131a",
        "lean_version": "v4.22.0-rc2"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainTileCount.lean",
        "start_line": 455,
        "start_column": 56,
        "end_line": 455,
        "end_column": 61
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Finset (\ud835\udd13 X)\n\u03d1 : \u0398 X\nN : \u2115\nL : Grid X\nhL : L \u2208 @Antichain.\ud835\udcdb' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N\nt : Finset (\ud835\udd13 X) := {p | \ud835\udcd8 p = L}\n\u22a2 \u2211 p \u2208 @Antichain.\ud835\udd04' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N \u2229 t, volume (E p \u2229 G \u2229 \u2191L) +\n      \u2211 p \u2208 @Antichain.\ud835\udd04' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N \\ t, volume (E p \u2229 G \u2229 \u2191L) \u2264\n    \u2211 p \u2208 @Antichain.\ud835\udd04' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N \u2229 t, volume (E p \u2229 G \u2229 \u2191L) +\n      \u2211 p \u2208 @Antichain.\ud835\udd04' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N \\ t, volume (E p \u2229 G \u2229 \u2191L)",
        "url": "https://github.com/fpvandoorn/carleson/blob/218b6615448da46a5c14a086fa57c197a0a8131a/Carleson/Antichain/AntichainTileCount.lean#L455"
      },
      "metadata": {
        "blame_email_hash": "44a80a4a9c95",
        "blame_date": "2025-07-10T17:55:50+02:00",
        "inclusion_date": "2025-07-11T23:48:31.060328+00:00"
      },
      "id": "8ba650ea6577ef47250f9aa9d829155845a85fd7be54232cdfdd0a40e3d0566d"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-hardly-ramified",
        "commit": "cca256f8a9c63e51a83aa74a8f07c671e40f21f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FLT/GaloisRepresentation/HardlyRamified.lean",
        "start_line": 113,
        "start_column": 2,
        "end_line": 113,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u2113 : \u2115\nh\u2113 : Nat.Prime \u2113\nhp : Odd \u2113\nR : Type u_1\ninst\u271d\u2077 : CommRing R\ninst\u271d\u2076 : TopologicalSpace R\ninst\u271d\u2075 : IsTopologicalRing R\ninst\u271d\u2074 : IsLocalRing R\nhl : \u2191\u2113 \u2208 IsLocalRing.maximalIdeal R\nV : Type u_2\ninst\u271d\u00b3 : AddCommGroup V\ninst\u271d\u00b2 : Module R V\ninst\u271d\u00b9 : Module.Finite R V\ninst\u271d : Module.Free R V\nhdim : Module.rank R V = 2\n\u03c1 : GaloisRep \u211a R V\n\u03c1\u2082 : GaloisRep (HeightOneSpectrum.adicCompletion \u211a (Nat.Prime.toHeightOneSpectrumRingOfIntegersRat 2 Nat.prime_two)) R\n  V :=\n  \u03c1.toLocal (Nat.Prime.toHeightOneSpectrumRingOfIntegersRat 2 Nat.prime_two)\n\u22a2 False",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/cca256f8a9c63e51a83aa74a8f07c671e40f21f5/FLT/GaloisRepresentation/HardlyRamified.lean#L113"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-09-10T19:11:20+01:00",
        "inclusion_date": "2025-09-13T04:26:41.834573+00:00"
      },
      "id": "f6253bfaf46d7c4259a22493f250c5ddaea18eb5819da6106df2ea81e579336e"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/quote4",
        "branch": "master",
        "commit": "345a958916d27982d4ecb4500fba0ebb21096651",
        "lean_version": "v4.24.0-rc1"
      },
      "location": {
        "path": "examples/introQ.lean",
        "start_line": 16,
        "start_column": 18,
        "end_line": 16,
        "end_column": 23
      },
      "debug_info": {
        "goal": "\u00ab$P\u00bb : \u2200 {n : Nat}, n = 1\n$fst\u271d : Nat\n\u00ab$m\u00bb : $fst\u271d = 1\n\u22a2 $fst\u271d = 1",
        "url": "https://github.com/leanprover-community/quote4/blob/345a958916d27982d4ecb4500fba0ebb21096651/examples/introQ.lean#L16"
      },
      "metadata": {
        "blame_email_hash": "1c4ac4603b04",
        "blame_date": "2023-07-14T18:25:43-07:00",
        "inclusion_date": "2025-09-16T04:18:21.447068+00:00"
      },
      "id": "a0a7022a4ffc23a72dc4c8a32dcf68f45c2ff3d37220f078ca23e442a92aa096"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/duper",
        "branch": "hammer",
        "commit": "df5422589eaaeba41dd92db86155b35961347905",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "Duper/Tests/test_continuity.lean",
        "start_line": 18,
        "start_column": 50,
        "end_line": 18,
        "end_column": 55
      },
      "debug_info": {
        "goal": "a : Real\n\u22a2 dist a a = zero",
        "url": "https://github.com/leanprover-community/duper/blob/df5422589eaaeba41dd92db86155b35961347905/Duper/Tests/test_continuity.lean#L18"
      },
      "metadata": {
        "blame_email_hash": "4ac7eab8a488",
        "blame_date": "2023-06-05T10:39:00+02:00",
        "inclusion_date": "2025-09-15T04:46:20.716201+00:00"
      },
      "id": "8c4b8b3cb3e1c09927d600fe14999d971c0c995a4759388a35fbceaabe3139e6"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/batteries",
        "branch": "docs",
        "commit": "c3553c06247678bde54544e88d21636d16cd0579",
        "lean_version": "v4.24.0-rc1"
      },
      "location": {
        "path": "BatteriesTest/lint_unreachableTactic.lean",
        "start_line": 24,
        "start_column": 2,
        "end_line": 25,
        "end_column": 5
      },
      "debug_info": {
        "goal": "\u22a2 1 = 1",
        "url": "https://github.com/leanprover-community/batteries/blob/c3553c06247678bde54544e88d21636d16cd0579/BatteriesTest/lint_unreachableTactic.lean#L24"
      },
      "metadata": {
        "blame_email_hash": "45b5ed8e3c8e",
        "blame_date": "2023-08-26T11:27:15+01:00",
        "inclusion_date": "2025-09-19T03:33:33.814695+00:00"
      },
      "id": "ded133834c8a1095d05267cda7e94d57d137c48fa33f52b3fe593efb8c740ce1"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "d279b56adead908de8bd086ea46b82895cf4f12c",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "AesopTest/205.lean",
        "start_line": 31,
        "start_column": 2,
        "end_line": 31,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nx y a b : \u03b1\nh\u2082 : R x a\nh\u2083 : R y b\nfwd : R b y\nfwd_1 : R a x\nfwd_2 : R b b\nfwd_3 : R y y\nfwd_4 : R a a\nfwd_5 : R x x\n\u22a2 False",
        "url": "https://github.com/leanprover-community/aesop/blob/d279b56adead908de8bd086ea46b82895cf4f12c/AesopTest/205.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2025-04-29T23:07:06+02:00",
        "inclusion_date": "2025-04-30T23:33:22.583043+00:00"
      },
      "id": "2ed3ed49a5906744d12cce67d1175d136b7f420f696980938c3b66e07db8e8de"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BinomialRandomGraph.lean",
        "start_line": 46,
        "start_column": 75,
        "end_line": 46,
        "end_column": 80
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d : MeasurableSpace \u03a9\nG : \u03a9 \u2192 SimpleGraph \u03b1\np : \u211d\u22650\n\u03bc : Measure \u03a9\nhG : IsBinomialRandomGraph G p \u03bc\n\u22a2 iIndepFun (fun e \u03c9 => e \u2208 (G \u03c9).edgeSet) \u03bc",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BinomialRandomGraph.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-06T17:45:28+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "46b51bb59c19a979862a472d54fe0443db1e06fd4900df7d9725c480a4a05693"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "f4441d7327caa75ae7879ecfda33fc60ab0cf17e",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 7245,
        "start_column": 65,
        "end_line": 7245,
        "end_column": 70
      },
      "debug_info": {
        "goal": "\u03bd : \u211d \u2192 \u211d\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\nc_close : \u211d\nc_close_pos : c_close > 0\nh_close :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 (\u03b5 : \u211d),\n        0 < \u03b5 \u2192 \u03b5 < 1 \u2192 2 < X * \u03b5 \u2192 \u2016SmoothedChebyshev \u03bd \u03b5 X - \u2191(ChebyshevPsi X)\u2016 \u2264 c_close * \u03b5 * X * Real.log X\n\u03b5_main C_main : \u211d\n\u03b5_main_pos : 0 < \u03b5_main\nC_main_pos : 0 < C_main\nh_main : \u2200 \u03b5 \u2208 Ioo 0 \u03b5_main, \u2016MellinTransform (fun x => \u2191(Smooth1 \u03bd \u03b5 x)) 1 - 1\u2016 \u2264 C_main * \u03b5\nA C_bnd : \u211d\nC_bnd_pos : 0 < C_bnd\nA_in_Ioc : A \u2208 Ioc 0 (1 / 2)\nzeta_bnd : LogDerivZetaHasBound A C_bnd\nholo1 :\n  \u2200 (T : \u211d),\n    3 \u2264 T \u2192\n      HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (Icc (1 - A / Real.log T ^ 9) 2 \u00d7\u2102 Icc (-T) T \\ {1})\n\u03c3\u2082' : \u211d\n\u03c3\u2082 : \u211d := max \u03c3\u2082' (1 / 2)\n\u03c3\u2082_pos : 0 < \u03c3\u2082\n\u03c3\u2082_lt_one : \u03c3\u2082 < 1\nholo2 : HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (uIcc \u03c3\u2082 2 \u00d7\u2102 uIcc (-3) 3 \\ {1})\nc\u2081 : \u211d\nc\u2081pos : c\u2081 > 0\nhc\u2081 : \u2200 (\u03b5 : \u211d), 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2081 \u03bd \u03b5 X T\u2016 \u2264 c\u2081 * X * Real.log X / (\u03b5 * T)\nc\u2082 : \u211d\nc\u2082pos : 0 < c\u2082\nhc\u2082 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2082 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2082 * X / (\u03b5 * T)\nc\u2083 : \u211d\nc\u2083pos : 0 < c\u2083\nhc\u2083 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2083 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2083 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2085 : \u211d\nc\u2085pos : 0 < c\u2085\nhc\u2085 : \u2200 (X : \u211d), 3 < X \u2192 \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2016I\u2085 \u03bd \u03b5 X \u03c3\u2082\u2016 \u2264 c\u2085 * X ^ \u03c3\u2082 / \u03b5\nc\u2087 : \u211d\nc\u2087pos : 0 < c\u2087\nhc\u2087 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2087 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2087 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2088 : \u211d\nc\u2088pos : 0 < c\u2088\nhc\u2088 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2088 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2088 * X / (\u03b5 * T)\nc\u2089 : \u211d\nc\u2089pos : c\u2089 > 0\nhc\u2089 : \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2089 \u03bd \u03b5 X T\u2016 \u2264 c\u2089 * X * Real.log X / (\u03b5 * T)\nc\u2084 : \u211d\nc\u2084pos : 0 \u2264 c\u2084\nTlb\u2084 : \u211d\nTlb\u2084bnd : 3 < Tlb\u2084\nhc\u2084 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              Tlb\u2084 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2084 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 \u2264 c\u2084 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2086 : \u211d\nc\u2086pos : 0 \u2264 c\u2086\nTlb\u2086 : \u211d\nTlb\u2086bnd : 3 < Tlb\u2086\nhc\u2086 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              Tlb\u2086 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2086 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 \u2264 c\u2086 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nC' : \u211d := c_close + C_main\nC'' : \u211d := c\u2081 + c\u2082 + c\u2088 + c\u2089\nC''' : \u211d := c\u2083 + c\u2084 + c\u2086 + c\u2087\nc : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\n\u03b5x : \u211d \u2192 \u211d := fun x => Real.exp (-c * Real.log x ^ (1 / 10))\nTx : \u211d \u2192 \u211d := fun x => Real.exp (2 * c * Real.log x ^ (1 / 10))\neventually_\u03b5x_lt_one : \u2200\u1da0 (x : \u211d) in atTop, \u03b5x x < 1\neventually_2_lt : \u2200\u1da0 (x : \u211d) in atTop, 2 < x * \u03b5x x\neventually_T_gt_3 : \u2200\u1da0 (x : \u211d) in atTop, 3 < Tx x\neventually_T_gt_Tlb\u2084 : \u2200\u1da0 (x : \u211d) in atTop, Tlb\u2084 < Tx x\neventually_T_gt_Tlb\u2086 : \u2200\u1da0 (x : \u211d) in atTop, Tlb\u2086 < Tx x\neventually_\u03c3\u2082_lt_\u03c3\u2081 : \u2200\u1da0 (x : \u211d) in atTop, \u03c3\u2082 < 1 - A / Real.log (Tx x) ^ 9\neventually_\u03b5_lt_\u03b5_main : \u2200\u1da0 (x : \u211d) in atTop, \u03b5x x < \u03b5_main\n\u22a2 \u2200\u1da0 (x : \u211d) in atTop, 1 \u2264 Real.log x",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/f4441d7327caa75ae7879ecfda33fc60ab0cf17e/PrimeNumberTheoremAnd/MediumPNT.lean#L7245"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-07-22T12:27:31-04:00",
        "inclusion_date": "2025-07-22T23:05:23.619594+00:00"
      },
      "id": "f8a609d9205c37ab90913b178451bedc7cf4fd7315f026f1668d14a116778cf7"
    },
    {
      "repo": {
        "remote": "https://github.com/emilyriehl/infinity-cosmos",
        "branch": "main",
        "commit": "18c7658a8e6fd4d8c6d0015a7a933818314adc0e",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "InfinityCosmos/ForMathlib/InfinityCosmos/Goals.lean",
        "start_line": 66,
        "start_column": 20,
        "end_line": 66,
        "end_column": 25
      },
      "debug_info": {
        "goal": "K\u271d : Functor (Discrete WalkingPair) SSet\n\u22a2 PreservesLimit K\u271d hoFunctor",
        "url": "https://github.com/emilyriehl/infinity-cosmos/blob/18c7658a8e6fd4d8c6d0015a7a933818314adc0e/InfinityCosmos/ForMathlib/InfinityCosmos/Goals.lean#L66"
      },
      "metadata": {
        "blame_email_hash": "eaaeec08515d",
        "blame_date": "2025-05-27T17:31:10-04:00",
        "inclusion_date": "2025-09-08T15:00:12.195855+00:00"
      },
      "id": "56e63b09883e85459311397059daa49f2b497b5c2295f203f39c0b09ffdf5ff2"
    },
    {
      "repo": {
        "remote": "https://github.com/frenzymath/jixia",
        "branch": "main",
        "commit": "d171b92cfcc808c3fcfa73b4f41c792648c9d48f",
        "lean_version": "v4.16.0"
      },
      "location": {
        "path": "Example.lean",
        "start_line": 82,
        "start_column": 55,
        "end_line": 82,
        "end_column": 60
      },
      "debug_info": {
        "goal": "\u03b1 : Type u\n\u22a2 \u00acnone.IsSome",
        "url": "https://github.com/frenzymath/jixia/blob/d171b92cfcc808c3fcfa73b4f41c792648c9d48f/Example.lean#L82"
      },
      "metadata": {
        "blame_email_hash": "aa8cba96a488",
        "blame_date": "2024-06-20T19:17:07+08:00",
        "inclusion_date": "2025-05-01T23:43:58.830638+00:00"
      },
      "id": "dda6eca1c24f3d179409b6135dea8b03fa033226aef1a1f3e8df49fa215ab69b"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "8dc6868e6d5a673620c1d9759b66f3c01d9543d7",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Playground/Arai60/P001/FP.lean",
        "start_line": 39,
        "start_column": 12,
        "end_line": 39,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case zero\ntarget : Int\nxs : List Int\nk : Nat\nseen : HashMap Int Nat\ni j : Nat\n\u22a2 twoSum.loop target xs k seen = some (i, j) \u2192 i < j",
        "url": "https://github.com/lean-ja/lean-by-example/blob/8dc6868e6d5a673620c1d9759b66f3c01d9543d7/Playground/Arai60/P001/FP.lean#L39"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2025-07-23T19:03:47+09:00",
        "inclusion_date": "2025-07-30T23:19:43.539577+00:00"
      },
      "id": "156c3a431e8294c9571b2b4fd59304397c2c5acebbbf98ff12ee6220dadf6178"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "edb386dbe041ce9e19ad76d90c5e7fa14608a181",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/MoreRuzsaDist.lean",
        "start_line": 857,
        "start_column": 106,
        "end_line": 857,
        "end_column": 111
      },
      "debug_info": {
        "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\nhm : m \u2265 2\n\u03a9 : Fin m \u2192 Type u_9\nh\u03a9 : (i : Fin m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin m) \u2192 \u03a9 i \u2192 G\n\u22a2 (\u2211 j, \u2211 k, if j = k then 0 else d[X j # -X k]) \u2264 \u2191m * (\u2191m - 1) * @multiDist G hG inst\u271d\u00b2 m \u03a9 h\u03a9 X",
        "url": "https://github.com/teorth/pfr/blob/edb386dbe041ce9e19ad76d90c5e7fa14608a181/PFR/MoreRuzsaDist.lean#L857"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2025-05-02T00:15:47-07:00",
        "inclusion_date": "2025-05-03T00:49:01.282024+00:00"
      },
      "id": "2be0150aa78fedfb57d79b8a6097182c5778adf8bbc131f71c5c788fcd941297"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "yu-yama/GroupExtension-Abelian",
        "commit": "11a36226ae8d2c46af1b0bea801b1830c7ab1a07",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/GroupTheory/GroupExtension/Abelian.lean",
        "start_line": 590,
        "start_column": 8,
        "end_line": 590,
        "end_column": 13
      },
      "debug_info": {
        "goal": "N G : Type\ninst\u271d\u00b2 : CommGroup N\ninst\u271d\u00b9 : Group G\ninst\u271d : MulDistribMulAction G N\nS : @GroupExtension.ofMulDistribMulActionWithSection N G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d\nS' : @GroupExtension.ofMulDistribMulActionWithSection N G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d\nequiv :\n  @GroupExtension.ofMulDistribMulAction.Equiv N G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d\n    (@GroupExtension.ofMulDistribMulActionWithSection.toofMulDistribMulAction N G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d S)\n    (@GroupExtension.ofMulDistribMulActionWithSection.toofMulDistribMulAction N G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d S')\ng\u2081 g\u2082 : G\n\u22a2 failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/11a36226ae8d2c46af1b0bea801b1830c7ab1a07/Mathlib/GroupTheory/GroupExtension/Abelian.lean#L590"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-06-28T08:54:55+00:00",
        "inclusion_date": "2025-06-29T03:10:27.666727+00:00"
      },
      "id": "6f2b1a6d877b00990486ed7a8be5e10b9aa37597e21e5bd7fc6714697acec182"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
        "start_line": 123,
        "start_column": 4,
        "end_line": 123,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case pos\n\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure volume\nA B : Set \u03a9\nhB : volume B \u2260 0\nh : volume A = 0\n\u22a2 condProb \u03a9 inst\u271d\u00b9 A B = volume A * condProb \u03a9 inst\u271d\u00b9 B A / volume B",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Topics/Probability.lean#L123"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T19:47:14+02:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "cdc66311bab29deaea3437f194990b1580dba6cfa2f9ecf5d018870d3744ad59"
    },
    {
      "repo": {
        "remote": "https://github.com/nomeata/loogle",
        "branch": "master",
        "commit": "15beac7f2a5913571cba016e4b87fed907c54f7d",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "Tests.lean",
        "start_line": 102,
        "start_column": 2,
        "end_line": 102,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n m : Nat\n\u22a2 List.replicate (2 * n) () = List.replicate n () ++ List.replicate n ()",
        "url": "https://github.com/nomeata/loogle/blob/15beac7f2a5913571cba016e4b87fed907c54f7d/Tests.lean#L102"
      },
      "metadata": {
        "blame_email_hash": "1e9dd229978a",
        "blame_date": "2023-11-11T14:02:18+01:00",
        "inclusion_date": "2025-09-17T04:17:32.820406+00:00"
      },
      "id": "5980bd155afd8d6034e9ee2c322a2aaaa4c31f1359f8eb7337ae62570d89f2f3"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "duplex-sponge-fs",
        "commit": "0fc5523909130c6100b03cf4a7afb3566f27e485",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/NonBinaryField/KoalaBear.lean",
        "start_line": 124,
        "start_column": 2,
        "end_line": 124,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a : KoalaBear.Field\nha : a \u2260 0\n\u22a2 a\u207b\u00b9 = a ^ (KoalaBear.fieldSize - 2)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0fc5523909130c6100b03cf4a7afb3566f27e485/ArkLib/Data/FieldTheory/NonBinaryField/KoalaBear.lean#L124"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-09-12T02:34:43-04:00",
        "inclusion_date": "2025-09-18T04:30:57.445731+00:00"
      },
      "id": "cb26c3326987132fc4cd580501647a9ed51f6259876dae0daf34bccacbe18b50"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "StringsCharges",
        "commit": "25c552a2c25a922bf5dbdb120a212ea73b365f5b",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "PhysLean/ClassicalMechanics/HarmonicOscillator/Solution.lean",
        "start_line": 328,
        "start_column": 30,
        "end_line": 328,
        "end_column": 35
      },
      "debug_info": {
        "goal": "S : HarmonicOscillator\nIC : ClassicalMechanics.HarmonicOscillator.InitialConditions\nx : Time \u2192 Space 1\n\u22a2 S.EquationOfMotion x \u2227\n      x 0 = ClassicalMechanics.HarmonicOscillator.InitialConditions.x\u2080 IC \u2227\n        Time.deriv x 0 = ClassicalMechanics.HarmonicOscillator.InitialConditions.v\u2080 IC \u2192\n    x = ClassicalMechanics.HarmonicOscillator.InitialConditions.trajectory S IC",
        "url": "https://github.com/HEPLean/PhysLean/blob/25c552a2c25a922bf5dbdb120a212ea73b365f5b/PhysLean/ClassicalMechanics/HarmonicOscillator/Solution.lean#L328"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-09-14T18:48:30+01:00",
        "inclusion_date": "2025-09-17T03:53:50.079672+00:00"
      },
      "id": "d2b61c41de8664677093cd6de9e2d6b227cbbb3bf93254095c9db8086aad9f89"
    },
    {
      "repo": {
        "remote": "https://github.com/ufmg-smite/lean-smt",
        "branch": "main",
        "commit": "98b12d984f8c21a99abfb8b69f12fe243beaf7c6",
        "lean_version": "v4.16.0"
      },
      "location": {
        "path": "Smt/Reconstruct/Rat/Core.lean",
        "start_line": 626,
        "start_column": 2,
        "end_line": 626,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : Rat\n\u22a2 0 \u2264 a \u2192 0 \u2264 b \u2192 0 \u2264 a * b",
        "url": "https://github.com/ufmg-smite/lean-smt/blob/98b12d984f8c21a99abfb8b69f12fe243beaf7c6/Smt/Reconstruct/Rat/Core.lean#L626"
      },
      "metadata": {
        "blame_email_hash": "a29bc6f92c6c",
        "blame_date": "2025-05-03T21:48:26-07:00",
        "inclusion_date": "2025-05-05T00:05:16.483689+00:00"
      },
      "id": "a9b895e369e7d35f6fc14cac0d071cf8fec58988fd8e694faf7ebffe81035ae4"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 590,
        "start_column": 0,
        "end_line": 590,
        "end_column": 5
      },
      "debug_info": {
        "goal": "f : \u2115 \u2192 \u2115 \u2192 \u2115\ng : \u2115 \u2192 \u2115\nh\u2080 : \u2200 (y : \u2115), f 0 y = y + 1\nh\u2081 : \u2200 (x : \u2115), f (x + 1) 0 = f x 1\nh\u2082 : \u2200 (x y : \u2115), f (x + 1) (y + 1) = f x (f (x + 1) y)\nh\u2083 : g 0 = 2\nh\u2084 : \u2200 (n : \u2115), g (n + 1) = 2 ^ g n\n\u22a2 f 4 1981 = g 1983 - 3",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L590"
      },
      "metadata": {
        "blame_email_hash": "e7ac978c7a81",
        "blame_date": "2025-04-24T19:32:39+08:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "d0823d57721e5569b38be92e1def7d57013fdfeb0040e515447e3d82ffd673a5"
    },
    {
      "repo": {
        "remote": "https://github.com/lecopivo/SciLean",
        "branch": "bump-v4.19.0-rc2",
        "commit": "612daaaa9f63016cd8d06df8e634e4d858d26d8e",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "examples/FloatTest.lean",
        "start_line": 13,
        "start_column": 82,
        "end_line": 13,
        "end_column": 87
      },
      "debug_info": {
        "goal": "x\u271d\u00b3 x\u271d\u00b2 x\u271d\u00b9 x\u271d : PUnit.{1}\n\u22a2 { data := #[1.0, 2.0, 3.0, 4.0, 3.0] }.toByteArray.size % 8 = 0",
        "url": "https://github.com/lecopivo/SciLean/blob/612daaaa9f63016cd8d06df8e634e4d858d26d8e/examples/FloatTest.lean#L13"
      },
      "metadata": {
        "blame_email_hash": "c7c59fe619b9",
        "blame_date": "2025-01-07T15:43:19-05:00",
        "inclusion_date": "2025-05-29T03:10:06.182872+00:00"
      },
      "id": "e93dd22e7de6d89815d8ae7f4892b134cc27172d51d5b4fb7baa4430a35c18f3"
    },
    {
      "repo": {
        "remote": "https://github.com/cmu-l3/llmlean",
        "branch": "kimina-pr",
        "commit": "126a6b2af37727c4d81bb49f6af6b354a380145e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LLMleanTest/Examples.lean",
        "start_line": 5,
        "start_column": 2,
        "end_line": 5,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nr s t : Set \u03b1\n\u22a2 r \u2286 s \u2192 s \u2286 t \u2192 r \u2286 t",
        "url": "https://github.com/cmu-l3/llmlean/blob/126a6b2af37727c4d81bb49f6af6b354a380145e/LLMleanTest/Examples.lean#L5"
      },
      "metadata": {
        "blame_email_hash": "3ab0971ac342",
        "blame_date": "2025-06-10T09:47:05-04:00",
        "inclusion_date": "2025-06-11T03:39:01.065377+00:00"
      },
      "id": "591efd953e6e3ffb6858efdb2810638629423c24297050ad15780e5a796f12b9"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/NNG4",
        "branch": "main",
        "commit": "3558f5bfb6c7ec5528498c498ed097c7f772d24f",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "test/induction.lean",
        "start_line": 12,
        "start_column": 4,
        "end_line": 12,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case zero\na : \u2115\n\u22a2 a + 0 = a \u2192 0 = 0",
        "url": "https://github.com/leanprover-community/NNG4/blob/3558f5bfb6c7ec5528498c498ed097c7f772d24f/test/induction.lean#L12"
      },
      "metadata": {
        "blame_email_hash": "56c7f595c669",
        "blame_date": "2024-02-29T17:19:01+01:00",
        "inclusion_date": "2025-09-08T18:41:12.023523+00:00"
      },
      "id": "67b8836845a210ece68f76c8f8a910aa8bb3c25c4c2375fc759fc21d58af92f9"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_28.lean",
        "start_line": 64,
        "start_column": 65,
        "end_line": 64,
        "end_column": 70
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\ninst\u271d\u00b2 : Fintype \u03b1\ninst\u271d\u00b9 : DecidableEq \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\ne : Sym2 \u03b1\nhe : e \u2208 G.edgeFinset\n\u22a2 {v | v \u2208 e}.card = 2",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_28.lean#L64"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2025-08-30T22:59:32+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "eebddd5c259be65659da5842ab7eabfc1396463fd0164b49d495b395bd839f81"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/10FunctionsAndOperators.lean",
        "start_line": 296,
        "start_column": 20,
        "end_line": 296,
        "end_column": 25
      },
      "debug_info": {
        "goal": "m : Type u_4\nn : Type u_5\ninst\u271d\u00b3 : Fintype m\ninst\u271d\u00b2 : Fintype n\ninst\u271d\u00b9 : DecidableEq m\ninst\u271d : DecidableEq n\nA : Matrix m n \u211d\n\u22a2 \u2016A\u2016 \u2264 sorry A",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/10FunctionsAndOperators.lean#L296"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2025-08-06T00:45:33+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "b6f20af8b9c187edf162ac37a633abcb7bf9aa5780fb8b825c36feb541d54d31"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "54e2692f53004e900064c6f6e8e5a38b2754b0ad",
        "lean_version": "v4.24.0-rc1"
      },
      "location": {
        "path": "Compfiles/Imo1971P3.lean",
        "start_line": 26,
        "start_column": 2,
        "end_line": 26,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 \u2203 s, s.Infinite \u2227 s.Pairwise fun m n => (2 ^ \u2191n - 3).Coprime (2 ^ \u2191m - 3)",
        "url": "https://github.com/dwrensha/compfiles/blob/54e2692f53004e900064c6f6e8e5a38b2754b0ad/Compfiles/Imo1971P3.lean#L26"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2025-09-15T13:37:52-04:00",
        "inclusion_date": "2025-09-19T03:11:14.409941+00:00"
      },
      "id": "a368ae85c5fb72e9fa2e69e31d4e9acb654e0f1d8856235a6dff34dde8082c8f"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "generalized-trace",
        "commit": "5c479c65ad77d0b6ad82e6622abd2ad85e349c7d",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/Classification/GeneralizedTrace.lean",
        "start_line": 467,
        "start_column": 4,
        "end_line": 467,
        "end_column": 9
      },
      "debug_info": {
        "goal": "T U : ArithmeticTheory\ninst\u271d\u00b2 : Theory.\u0394\u2081 T\ninst\u271d\u00b9 : \ud835\udddc\ud835\udeba\u2081 \u2aaf T\ninst\u271d : T \u2aaf U\nthis\u271d : \ud835\udddc\ud835\udeba\u2081 \u2aaf U\nA : Modal.Formula \u2115\nM : Model\nr : M.World\nw\u271d\u00b9 : M.IsTree r\nw\u271d : Fintype M.World\nh\u2082 : \u00acr \u22a7 A\nh : M.finHeight \u2208 LO.Modal.Logic.trace (T.ProvabilityLogic U)\nhA\u2081 : \u2200 (f : T.StandardRealization), U \u22a2!. \u2191f A\nM\u2080 : Model := M.extendRoot 1\nr\u2080 : M\u2080.World := Frame.extendRoot.root\nRr\u2080 : \u2200 {x : M.World}, r\u2080 \u227a \u2191x\nthis : M\u2080.IsFiniteTree r\u2080\nS : SolovaySentences (Theory.standardProvability T) M\u2080.toFrame r\u2080 := SolovaySentences.standard T M\u2080.toFrame\nx : M\u2080.World\nhA : Satisfies M\u2080 x A\n\u22a2 Satisfies M\u2080 x (TBB M.finHeight)",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/5c479c65ad77d0b6ad82e6622abd2ad85e349c7d/Foundation/ProvabilityLogic/Classification/GeneralizedTrace.lean#L467"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-09-16T18:11:24+09:00",
        "inclusion_date": "2025-09-17T03:36:03.416511+00:00"
      },
      "id": "158d86393a9a05ea365bca9133e6c188167cee51f1a3dcd6b6b8031e7820fdf7"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "218b6615448da46a5c14a086fa57c197a0a8131a",
        "lean_version": "v4.22.0-rc2"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainTileCount.lean",
        "start_line": 459,
        "start_column": 74,
        "end_line": 459,
        "end_column": 79
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Finset (\ud835\udd13 X)\n\u03d1 : \u0398 X\nN : \u2115\nL : Grid X\nhL : L \u2208 @Antichain.\ud835\udcdb' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N\nt : Finset (\ud835\udd13 X) := {p | \ud835\udcd8 p = L}\n\u22a2 \u2211 p \u2208 @Antichain.\ud835\udd04' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N \u2229 t, volume (E p \u2229 G \u2229 \u2191L) +\n      \u2211 p \u2208 @Antichain.\ud835\udd04' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N \\ t, volume (E p \u2229 G \u2229 \u2191L) \u2264\n    \u2191(Antichain.C6_3_4 a N) * dens\u2081 \u2191\ud835\udd04 * volume \u2191L",
        "url": "https://github.com/fpvandoorn/carleson/blob/218b6615448da46a5c14a086fa57c197a0a8131a/Carleson/Antichain/AntichainTileCount.lean#L459"
      },
      "metadata": {
        "blame_email_hash": "44a80a4a9c95",
        "blame_date": "2025-07-10T17:55:50+02:00",
        "inclusion_date": "2025-07-11T23:48:31.060328+00:00"
      },
      "id": "eed43aaeda8ee97032ed3839c27f3d50363cee294ba4924e77e2400b83f6e2e6"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-hardly-ramified",
        "commit": "60be88a841fa232b563ea16600befe5efbfb3d07",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FLT/DedekindDomain/FiniteAdeleRing/TensorRestrictedProduct.lean",
        "start_line": 114,
        "start_column": 2,
        "end_line": 114,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\nM : Type u_2\ninst\u271d\u2076 : CommRing R\ninst\u271d\u2075 : AddCommGroup M\ninst\u271d\u2074 : Module R M\n\u03b9 : Type u_3\nN : \u03b9 \u2192 Type u_4\ninst\u271d\u00b3 : (i : \u03b9) \u2192 AddCommGroup (N i)\ninst\u271d\u00b2 : (i : \u03b9) \u2192 Module R (N i)\n\u2131 : Filter \u03b9\nL : (i : \u03b9) \u2192 Submodule R (N i)\ninst\u271d\u00b9 : Module.FinitePresentation R M\ninst\u271d : Module.Flat R M\n\u22a2 Function.Bijective \u21d1(@RestrictedProduct.lTensor R M inst\u271d\u2076 inst\u271d\u2075 inst\u271d\u2074 \u03b9 N inst\u271d\u00b3 inst\u271d\u00b2 \u2131 L)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/60be88a841fa232b563ea16600befe5efbfb3d07/FLT/DedekindDomain/FiniteAdeleRing/TensorRestrictedProduct.lean#L114"
      },
      "metadata": {
        "blame_email_hash": "ef2b4f3cac6f",
        "blame_date": "2025-09-01T12:02:29+01:00",
        "inclusion_date": "2025-09-18T04:05:26.332171+00:00"
      },
      "id": "3db4c6fb505d0ea8467f00e383e8fca0424a3b4190f756a746d9acce0b228cd1"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/duper",
        "branch": "dev",
        "commit": "43be1bece7ff58a0168022c39aa223b8e730eca5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Duper/Tests/test_continuity.lean",
        "start_line": 20,
        "start_column": 48,
        "end_line": 20,
        "end_column": 53
      },
      "debug_info": {
        "goal": "a : Real\n\u22a2 lt zero one",
        "url": "https://github.com/leanprover-community/duper/blob/43be1bece7ff58a0168022c39aa223b8e730eca5/Duper/Tests/test_continuity.lean#L20"
      },
      "metadata": {
        "blame_email_hash": "4ac7eab8a488",
        "blame_date": "2023-06-05T10:39:00+02:00",
        "inclusion_date": "2025-05-08T23:57:49.858741+00:00"
      },
      "id": "8c1874bf12cff9affa2b3b733c13b2c8770b167d348c91f3c51a3dce6cf572bc"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/batteries",
        "branch": "docs",
        "commit": "c3553c06247678bde54544e88d21636d16cd0579",
        "lean_version": "v4.24.0-rc1"
      },
      "location": {
        "path": "BatteriesTest/lint_unreachableTactic.lean",
        "start_line": 32,
        "start_column": 33,
        "end_line": 32,
        "end_column": 38
      },
      "debug_info": {
        "goal": "aa : Nat\n\u22a2 aa = 0 \u2192 t aa = 0",
        "url": "https://github.com/leanprover-community/batteries/blob/c3553c06247678bde54544e88d21636d16cd0579/BatteriesTest/lint_unreachableTactic.lean#L32"
      },
      "metadata": {
        "blame_email_hash": "45b5ed8e3c8e",
        "blame_date": "2023-08-26T11:27:15+01:00",
        "inclusion_date": "2025-09-19T03:33:33.814695+00:00"
      },
      "id": "af711159e9bbd7198f6403845af2310c7821f981492c33b049d665a699c04814"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "9e8de5716b162ec8983a89711a186d13ff871c22",
        "lean_version": "v4.24.0-rc1"
      },
      "location": {
        "path": "AesopTest/205.lean",
        "start_line": 32,
        "start_column": 2,
        "end_line": 32,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nx y a b : \u03b1\nh\u2082 : @R \u03b1 x a\nh\u2083 : @R \u03b1 y b\nfwd : @R \u03b1 b y\nfwd_1 : @R \u03b1 a x\nfwd_2 : @R \u03b1 b b\nfwd_3 : @R \u03b1 y y\nfwd_4 : @R \u03b1 a a\nfwd_5 : @R \u03b1 x x\n\u22a2 False",
        "url": "https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/AesopTest/205.lean#L32"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2025-04-29T23:07:06+02:00",
        "inclusion_date": "2025-09-16T04:23:04.307662+00:00"
      },
      "id": "9ca8b473386108875f9b137d93bdd0abb66132593ccc830999e616dee792e775"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "99a77d19845fb8083456331fd1256bf35a48f60c",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BinomialRandomGraph.lean",
        "start_line": 46,
        "start_column": 75,
        "end_line": 46,
        "end_column": 80
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d : MeasurableSpace \u03a9\nG : \u03a9 \u2192 SimpleGraph \u03b1\np : NNReal\n\u03bc : Measure \u03a9\nhG : @IsBinomialRandomGraph \u03b1 \u03a9 inst\u271d G p \u03bc\n\u22a2 iIndepFun (fun e \u03c9 => e \u2208 (G \u03c9).edgeSet) \u03bc",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/99a77d19845fb8083456331fd1256bf35a48f60c/LeanCamCombi/ExtrProbCombi/BinomialRandomGraph.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-06T17:45:28+00:00",
        "inclusion_date": "2025-09-08T22:03:06.847248+00:00"
      },
      "id": "080fea1eeb495013ba59e8f00a45c2e05e8a9c21996be580aeb301b4101c9013"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "f4441d7327caa75ae7879ecfda33fc60ab0cf17e",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 7243,
        "start_column": 73,
        "end_line": 7243,
        "end_column": 78
      },
      "debug_info": {
        "goal": "\u03bd : \u211d \u2192 \u211d\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\nc_close : \u211d\nc_close_pos : c_close > 0\nh_close :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 (\u03b5 : \u211d),\n        0 < \u03b5 \u2192 \u03b5 < 1 \u2192 2 < X * \u03b5 \u2192 \u2016SmoothedChebyshev \u03bd \u03b5 X - \u2191(ChebyshevPsi X)\u2016 \u2264 c_close * \u03b5 * X * Real.log X\n\u03b5_main C_main : \u211d\n\u03b5_main_pos : 0 < \u03b5_main\nC_main_pos : 0 < C_main\nh_main : \u2200 \u03b5 \u2208 Ioo 0 \u03b5_main, \u2016MellinTransform (fun x => \u2191(Smooth1 \u03bd \u03b5 x)) 1 - 1\u2016 \u2264 C_main * \u03b5\nA C_bnd : \u211d\nC_bnd_pos : 0 < C_bnd\nA_in_Ioc : A \u2208 Ioc 0 (1 / 2)\nzeta_bnd : LogDerivZetaHasBound A C_bnd\nholo1 :\n  \u2200 (T : \u211d),\n    3 \u2264 T \u2192\n      HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (Icc (1 - A / Real.log T ^ 9) 2 \u00d7\u2102 Icc (-T) T \\ {1})\n\u03c3\u2082' : \u211d\n\u03c3\u2082 : \u211d := max \u03c3\u2082' (1 / 2)\n\u03c3\u2082_pos : 0 < \u03c3\u2082\n\u03c3\u2082_lt_one : \u03c3\u2082 < 1\nholo2 : HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (uIcc \u03c3\u2082 2 \u00d7\u2102 uIcc (-3) 3 \\ {1})\nc\u2081 : \u211d\nc\u2081pos : c\u2081 > 0\nhc\u2081 : \u2200 (\u03b5 : \u211d), 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2081 \u03bd \u03b5 X T\u2016 \u2264 c\u2081 * X * Real.log X / (\u03b5 * T)\nc\u2082 : \u211d\nc\u2082pos : 0 < c\u2082\nhc\u2082 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2082 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2082 * X / (\u03b5 * T)\nc\u2083 : \u211d\nc\u2083pos : 0 < c\u2083\nhc\u2083 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2083 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2083 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2085 : \u211d\nc\u2085pos : 0 < c\u2085\nhc\u2085 : \u2200 (X : \u211d), 3 < X \u2192 \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2016I\u2085 \u03bd \u03b5 X \u03c3\u2082\u2016 \u2264 c\u2085 * X ^ \u03c3\u2082 / \u03b5\nc\u2087 : \u211d\nc\u2087pos : 0 < c\u2087\nhc\u2087 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2087 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2087 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2088 : \u211d\nc\u2088pos : 0 < c\u2088\nhc\u2088 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2088 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2088 * X / (\u03b5 * T)\nc\u2089 : \u211d\nc\u2089pos : c\u2089 > 0\nhc\u2089 : \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2089 \u03bd \u03b5 X T\u2016 \u2264 c\u2089 * X * Real.log X / (\u03b5 * T)\nc\u2084 : \u211d\nc\u2084pos : 0 \u2264 c\u2084\nTlb\u2084 : \u211d\nTlb\u2084bnd : 3 < Tlb\u2084\nhc\u2084 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              Tlb\u2084 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2084 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 \u2264 c\u2084 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2086 : \u211d\nc\u2086pos : 0 \u2264 c\u2086\nTlb\u2086 : \u211d\nTlb\u2086bnd : 3 < Tlb\u2086\nhc\u2086 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              Tlb\u2086 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2086 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 \u2264 c\u2086 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nC' : \u211d := c_close + C_main\nC'' : \u211d := c\u2081 + c\u2082 + c\u2088 + c\u2089\nC''' : \u211d := c\u2083 + c\u2084 + c\u2086 + c\u2087\nc : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\n\u03b5x : \u211d \u2192 \u211d := fun x => Real.exp (-c * Real.log x ^ (1 / 10))\nTx : \u211d \u2192 \u211d := fun x => Real.exp (2 * c * Real.log x ^ (1 / 10))\neventually_\u03b5x_lt_one : \u2200\u1da0 (x : \u211d) in atTop, \u03b5x x < 1\neventually_2_lt : \u2200\u1da0 (x : \u211d) in atTop, 2 < x * \u03b5x x\neventually_T_gt_3 : \u2200\u1da0 (x : \u211d) in atTop, 3 < Tx x\neventually_T_gt_Tlb\u2084 : \u2200\u1da0 (x : \u211d) in atTop, Tlb\u2084 < Tx x\neventually_T_gt_Tlb\u2086 : \u2200\u1da0 (x : \u211d) in atTop, Tlb\u2086 < Tx x\neventually_\u03c3\u2082_lt_\u03c3\u2081 : \u2200\u1da0 (x : \u211d) in atTop, \u03c3\u2082 < 1 - A / Real.log (Tx x) ^ 9\n\u22a2 \u2200\u1da0 (x : \u211d) in atTop, \u03b5x x < \u03b5_main",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/f4441d7327caa75ae7879ecfda33fc60ab0cf17e/PrimeNumberTheoremAnd/MediumPNT.lean#L7243"
      },
      "metadata": {
        "blame_email_hash": "bee09f470e62",
        "blame_date": "2025-07-22T14:25:33+01:00",
        "inclusion_date": "2025-07-22T23:05:23.619594+00:00"
      },
      "id": "bc830a4aab4331161c9e73cc2c5839405265cd1f46e97a73c51980dc3e685923"
    },
    {
      "repo": {
        "remote": "https://github.com/emilyriehl/infinity-cosmos",
        "branch": "main",
        "commit": "8edc65d468b3ed2e4933c7969ec53bd4d904e753",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean",
        "start_line": 133,
        "start_column": 50,
        "end_line": 133,
        "end_column": 55
      },
      "debug_info": {
        "goal": "A : SSet\nf\u271d g\u271d f g h : A _\u298b1\u298c\nH\u2081 : HomotopyL f g\nH\u2082 : HomotopyL f h\n\u03c3 : Subpresheaf.toPresheaf \u039b[3, 1] \u27f6 A := sorry\n\u03c4 : A _\u298b3\u298c := sorry\n\u22a2 SimplicialObject.\u03b4 A 0 \u03c4 = (SimplicialObject.\u03b4 A 0 \u226b SimplicialObject.\u03c3 A 0 \u226b SimplicialObject.\u03c3 A 0) g",
        "url": "https://github.com/emilyriehl/infinity-cosmos/blob/8edc65d468b3ed2e4933c7969ec53bd4d904e753/InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean#L133"
      },
      "metadata": {
        "blame_email_hash": "f0d6831918ab",
        "blame_date": "2024-12-17T23:14:43+01:00",
        "inclusion_date": "2025-05-05T23:23:15.244940+00:00"
      },
      "id": "e145769b3210c6f1a055e23e8bf0b1fc4ea2ace94285c386366305707117b87a"
    },
    {
      "repo": {
        "remote": "https://github.com/frenzymath/jixia",
        "branch": "main",
        "commit": "b5ec1a4ebd714c7e7bda25f64f19beabc212049e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Example.lean",
        "start_line": 82,
        "start_column": 55,
        "end_line": 82,
        "end_column": 60
      },
      "debug_info": {
        "goal": "\u03b1 : Type u\n\u22a2 \u00ac@Option.IsSome \u03b1 none",
        "url": "https://github.com/frenzymath/jixia/blob/b5ec1a4ebd714c7e7bda25f64f19beabc212049e/Example.lean#L82"
      },
      "metadata": {
        "blame_email_hash": "aa8cba96a488",
        "blame_date": "2024-06-20T19:17:07+08:00",
        "inclusion_date": "2025-07-15T23:02:22.160379+00:00"
      },
      "id": "b545d703b0f4de231105460dc97e5b7bb4579dea92090c690395192558fc2654"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "8dc6868e6d5a673620c1d9759b66f3c01d9543d7",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Playground/Arai60/P001/FP.lean",
        "start_line": 40,
        "start_column": 17,
        "end_line": 40,
        "end_column": 22
      },
      "debug_info": {
        "goal": "case succ\ntarget : Int\nxs : List Int\nk : Nat\nseen : HashMap Int Nat\ni j n : Nat\nih : twoSum.loop target xs k seen = some (i, j) \u2192 i < j\n\u22a2 twoSum.loop target xs k seen = some (i, j) \u2192 i < j",
        "url": "https://github.com/lean-ja/lean-by-example/blob/8dc6868e6d5a673620c1d9759b66f3c01d9543d7/Playground/Arai60/P001/FP.lean#L40"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2025-07-23T19:03:47+09:00",
        "inclusion_date": "2025-07-30T23:19:43.539577+00:00"
      },
      "id": "78a2087fb13178d57e773816a75f792144e8e0ff77dda6f1faa24ed269922af0"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/ApproxHomPFR.lean",
        "start_line": 181,
        "start_column": 65,
        "end_line": 181,
        "end_column": 70
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : Fintype G\ninst\u271d : Module (ZMod 2) G\n\u22a2 Nat.card (G \u2192+ ZMod 2) = Nat.card G",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/ApproxHomPFR.lean#L181"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2025-05-01T23:21:54-07:00",
        "inclusion_date": "2025-06-01T03:03:10.481677+00:00"
      },
      "id": "0b0a333097173f6020e721a4295e35b9b92d2dec9e21abe2d182fd2bd4db8136"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "SG_riem",
        "commit": "d19460d77edefdce8aa98e75a75967e384dfc034",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/Riemannian/Basic.lean",
        "start_line": 397,
        "start_column": 2,
        "end_line": 397,
        "end_column": 7
      },
      "debug_info": {
        "goal": "E : Type u_1\ninst\u271d\u2076 : NormedAddCommGroup E\ninst\u271d\u2075 : NormedSpace \u211d E\nH : Type u_2\ninst\u271d\u2074 : TopologicalSpace H\nI : ModelWithCorners \u211d E H\nM : Type u_3\ninst\u271d\u00b3 : TopologicalSpace M\ninst\u271d\u00b2 : ChartedSpace H M\ninst\u271d\u00b9 : (x : M) \u2192 ENorm (TangentSpace I x)\ninst\u271d : \u2200 (x : M), ENormSMulClass \u211d (TangentSpace I x)\nx y : M\nr : ENNReal\na b : \u211d\nhr : @Manifold.riemannianEDist E inst\u271d\u2076 inst\u271d\u2075 H inst\u271d\u2074 I M inst\u271d\u00b3 inst\u271d\u00b2 inst\u271d\u00b9 x y < r\n\u22a2 \u2203 \u03b3,\n    \u03b3 a = x \u2227\n      \u03b3 b = y \u2227\n        ContMDiff (modelWithCornersSelf \u211d \u211d) I 1 \u03b3 \u2227\n          (\u03b3 =\u1da0[nhds a] fun x_1 => x) \u2227\n            (\u03b3 =\u1da0[nhds b] fun x => y) \u2227\n              @Manifold.pathELength E inst\u271d\u2076 inst\u271d\u2075 H inst\u271d\u2074 I M inst\u271d\u00b3 inst\u271d\u00b2 inst\u271d\u00b9 \u03b3 a b < r",
        "url": "https://github.com/leanprover-community/mathlib4/blob/d19460d77edefdce8aa98e75a75967e384dfc034/Mathlib/Geometry/Manifold/Riemannian/Basic.lean#L397"
      },
      "metadata": {
        "blame_email_hash": "7d87c0724495",
        "blame_date": "2025-06-20T21:03:11+02:00",
        "inclusion_date": "2025-06-22T03:00:50.978825+00:00"
      },
      "id": "ef6472a8f581bb55c4b07fa4cd1843a60b6436bf4f4dfe0e378a252d2eb3f3a3"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 68,
        "start_column": 4,
        "end_line": 68,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type u_1\nS : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : CommRing S\nT : Type u_3\ninst\u271d : CommRing T\ng : S \u2192+* T\nf : R \u2192+* S\n\u22a2 g (f 1) = 1",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L68"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "ff784b4dab4378957cc641748c3eec575ae14a5abca48e92b82553170e3dbe4f"
    },
    {
      "repo": {
        "remote": "https://github.com/nomeata/loogle",
        "branch": "master",
        "commit": "15beac7f2a5913571cba016e4b87fed907c54f7d",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "Tests.lean",
        "start_line": 108,
        "start_column": 2,
        "end_line": 108,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n m : Nat\n\u22a2 List.replicate n () ++ List.replicate m () = List.replicate (n + m) ()",
        "url": "https://github.com/nomeata/loogle/blob/15beac7f2a5913571cba016e4b87fed907c54f7d/Tests.lean#L108"
      },
      "metadata": {
        "blame_email_hash": "1e9dd229978a",
        "blame_date": "2023-11-11T14:02:18+01:00",
        "inclusion_date": "2025-09-17T04:17:32.820406+00:00"
      },
      "id": "f728aea819f6b080be395266f57618e73dbf932bec43b28040f1aa252967d82b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "duplex-sponge-fs",
        "commit": "0fc5523909130c6100b03cf4a7afb3566f27e485",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/NonBinaryField/KoalaBear.lean",
        "start_line": 129,
        "start_column": 2,
        "end_line": 129,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 Function.Bijective fun x => x ^ 3",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0fc5523909130c6100b03cf4a7afb3566f27e485/ArkLib/Data/FieldTheory/NonBinaryField/KoalaBear.lean#L129"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-09-12T02:34:43-04:00",
        "inclusion_date": "2025-09-18T04:30:57.445731+00:00"
      },
      "id": "484050389ccabb3440e2d5b81aca5821085de728221173f9ae5e1987770a32a4"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "StringsCharges",
        "commit": "25c552a2c25a922bf5dbdb120a212ea73b365f5b",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "PhysLean/ClassicalMechanics/HarmonicOscillator/Solution.lean",
        "start_line": 451,
        "start_column": 2,
        "end_line": 451,
        "end_column": 7
      },
      "debug_info": {
        "goal": "S : HarmonicOscillator\nIC : ClassicalMechanics.HarmonicOscillator.InitialConditions\nt : Time\nhx :\n  ClassicalMechanics.HarmonicOscillator.InitialConditions.x\u2080 IC \u2260 0 \u2228\n    ClassicalMechanics.HarmonicOscillator.InitialConditions.v\u2080 IC \u2260 0\n\u22a2 Time.deriv (ClassicalMechanics.HarmonicOscillator.InitialConditions.trajectory S IC) t = 0 \u2194\n    \u2016ClassicalMechanics.HarmonicOscillator.InitialConditions.trajectory S IC t\u2016 =\n      \u221a(\u2016ClassicalMechanics.HarmonicOscillator.InitialConditions.x\u2080 IC\u2016 ^ 2 +\n          (\u2016ClassicalMechanics.HarmonicOscillator.InitialConditions.v\u2080 IC\u2016 / S.\u03c9) ^ 2)",
        "url": "https://github.com/HEPLean/PhysLean/blob/25c552a2c25a922bf5dbdb120a212ea73b365f5b/PhysLean/ClassicalMechanics/HarmonicOscillator/Solution.lean#L451"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-09-14T18:48:30+01:00",
        "inclusion_date": "2025-09-17T03:53:50.079672+00:00"
      },
      "id": "072e2e0b349ec3e34dff706b11e7eeacc37a7740f4b166426087f16a53a9921f"
    },
    {
      "repo": {
        "remote": "https://github.com/ufmg-smite/lean-smt",
        "branch": "main",
        "commit": "98b12d984f8c21a99abfb8b69f12fe243beaf7c6",
        "lean_version": "v4.16.0"
      },
      "location": {
        "path": "Smt/Reconstruct/Rat/Core.lean",
        "start_line": 629,
        "start_column": 2,
        "end_line": 629,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : Rat\nhb : 0 \u2264 b\n\u22a2 a.abs = b \u2194 a = b \u2228 a = -b",
        "url": "https://github.com/ufmg-smite/lean-smt/blob/98b12d984f8c21a99abfb8b69f12fe243beaf7c6/Smt/Reconstruct/Rat/Core.lean#L629"
      },
      "metadata": {
        "blame_email_hash": "a29bc6f92c6c",
        "blame_date": "2025-05-03T21:48:26-07:00",
        "inclusion_date": "2025-05-05T00:05:16.483689+00:00"
      },
      "id": "53d7e28ad1b040684d8c870889a949396e63ce04cc8bca6fa9340fe20f17e60d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 963,
        "start_column": 35,
        "end_line": 963,
        "end_column": 40
      },
      "debug_info": {
        "goal": "a b : \u2102\nh\u2080 : a ^ 3 - 8 = 0\nh\u2081 : b ^ 3 - 8 * b ^ 2 - 8 * b + 64 = 0\n\u22a2 \u2016a - b\u2016 \u2264 2 * \u221a21",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L963"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:45:32+01:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "a918ba84e307e030f6968145ecaa9c61be47e9e942af14552e78f9b0a5fd130d"
    },
    {
      "repo": {
        "remote": "https://github.com/lecopivo/SciLean",
        "branch": "bump-v4.19.0-rc2",
        "commit": "612daaaa9f63016cd8d06df8e634e4d858d26d8e",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Test/realToFloat.lean",
        "start_line": 23,
        "start_column": 2,
        "end_line": 23,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 (fun x => x.1.exp + isomorph `RealToFloat (fun x => x.2 0) x) = fun p => p.1.exp + p.2 0",
        "url": "https://github.com/lecopivo/SciLean/blob/612daaaa9f63016cd8d06df8e634e4d858d26d8e/Test/realToFloat.lean#L23"
      },
      "metadata": {
        "blame_email_hash": "c7c59fe619b9",
        "blame_date": "2024-11-19T16:57:30-05:00",
        "inclusion_date": "2025-05-29T03:10:06.182872+00:00"
      },
      "id": "c0d54bfa60547c746dc115d30556d3fd78b550ff3be63d063386c3bbc6a7e3a3"
    },
    {
      "repo": {
        "remote": "https://github.com/cmu-l3/llmlean",
        "branch": "kimina-pr",
        "commit": "126a6b2af37727c4d81bb49f6af6b354a380145e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LLMleanTest/Examples.lean",
        "start_line": 8,
        "start_column": 2,
        "end_line": 8,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : \u2115\n\u22a2 x + y = y + x",
        "url": "https://github.com/cmu-l3/llmlean/blob/126a6b2af37727c4d81bb49f6af6b354a380145e/LLMleanTest/Examples.lean#L8"
      },
      "metadata": {
        "blame_email_hash": "3ab0971ac342",
        "blame_date": "2025-06-10T09:47:05-04:00",
        "inclusion_date": "2025-06-11T03:39:01.065377+00:00"
      },
      "id": "ba9403b374fcff31618ae37b367f084ae098a717671e1713f8ca1d55b949b5ea"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/NNG4",
        "branch": "main",
        "commit": "3558f5bfb6c7ec5528498c498ed097c7f772d24f",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "test/induction.lean",
        "start_line": 13,
        "start_column": 4,
        "end_line": 13,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case succ\na d : \u2115\nhd : a + d = a \u2192 d = 0\n\u22a2 a + d.succ = a \u2192 d.succ = 0",
        "url": "https://github.com/leanprover-community/NNG4/blob/3558f5bfb6c7ec5528498c498ed097c7f772d24f/test/induction.lean#L13"
      },
      "metadata": {
        "blame_email_hash": "56c7f595c669",
        "blame_date": "2024-02-29T17:19:01+01:00",
        "inclusion_date": "2025-09-08T18:41:12.023523+00:00"
      },
      "id": "81bdb0baeff0a50eddd17b7b5e6f7afce5b72230d60ca1fd651d6d77af10ff4e"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_06.lean",
        "start_line": 77,
        "start_column": 29,
        "end_line": 77,
        "end_column": 34
      },
      "debug_info": {
        "goal": "q n : \u2115\nlamb : \u2102\na : \u211d := lamb.re\nb : \u211d := lamb.im\nh : lamb \u2208 primitiveRoots n \u2102\nh_lamb : lamb \u2260 1\nh_a_lt_one : \u2016a\u2016 < 1\n\u22a2 \u2016eval (\u2191q) (X - C lamb)\u2016 ^ 2 = \u2016\u2191q - lamb\u2016 ^ 2",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_06.lean#L77"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2025-08-30T22:59:32+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "65afab71b841038f639e6ccf781c987564640618f8f5a694d9bd04e253e26f7c"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/10FunctionsAndOperators.lean",
        "start_line": 296,
        "start_column": 27,
        "end_line": 296,
        "end_column": 32
      },
      "debug_info": {
        "goal": "m : Type u_4\nn : Type u_5\ninst\u271d\u00b3 : Fintype m\ninst\u271d\u00b2 : Fintype n\ninst\u271d\u00b9 : DecidableEq m\ninst\u271d : DecidableEq n\nA : Matrix m n \u211d\n\u22a2 \u2016A\u2016 \u2264 \u2016A\u2016",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/10FunctionsAndOperators.lean#L296"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2025-08-06T00:45:33+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "9f2d2578844adcc0d59d4ecac9a59e6085b0e0374152d727dc38657bd4319a00"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "54e2692f53004e900064c6f6e8e5a38b2754b0ad",
        "lean_version": "v4.24.0-rc1"
      },
      "location": {
        "path": "Compfiles/Imo2025P3.lean",
        "start_line": 37,
        "start_column": 2,
        "end_line": 37,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 IsLeast {c | is_valid_c c} answer",
        "url": "https://github.com/dwrensha/compfiles/blob/54e2692f53004e900064c6f6e8e5a38b2754b0ad/Compfiles/Imo2025P3.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "a8cae0732ec0",
        "blame_date": "2025-09-14T14:53:31+03:00",
        "inclusion_date": "2025-09-19T03:11:14.409941+00:00"
      },
      "id": "7798e4c308068e19a48867e705281155e8a961f88bae1a0d2f2bf05caa356e50"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "generalized-trace",
        "commit": "5c479c65ad77d0b6ad82e6622abd2ad85e349c7d",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/Classification/GeneralizedTrace.lean",
        "start_line": 517,
        "start_column": 4,
        "end_line": 517,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case refine_2\nT U : ArithmeticTheory\ninst\u271d\u00b2 : Theory.\u0394\u2081 T\ninst\u271d\u00b9 : \ud835\udddc\ud835\udeba\u2081 \u2aaf T\ninst\u271d : T \u2aaf U\nh : \u00acT.ProvabilityLogic U \u2286 Modal.S\n\u22a2 T.ProvabilityLogic U =\n    Modal.GL\u03b2Minus (LO.Modal.Logic.trace (T.ProvabilityLogic U))\n      (LO.ProvabilityLogic.eq_provabilityLogic_GL\u03b2Minus_of_not_subset_S._proof_1 T U inst\u271d\u00b2\n        (Mathlib.Tactic.Contrapose.mtr (\u00acT.ProvabilityLogic U \u2286 Modal.S)\n          (@Set.Cofinite \u2115 (LO.Modal.Logic.trace (T.ProvabilityLogic U))) \u22ef h))",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/5c479c65ad77d0b6ad82e6622abd2ad85e349c7d/Foundation/ProvabilityLogic/Classification/GeneralizedTrace.lean#L517"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-09-16T18:11:24+09:00",
        "inclusion_date": "2025-09-17T03:36:03.416511+00:00"
      },
      "id": "5d1a84d2e53a6531f21b167631320c33606840f06310a77f5d300877514998ff"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "ineq_6_3_30",
        "commit": "a11d007aa69834cdf5b6b203a05898acb98d4605",
        "lean_version": "v4.22.0-rc2"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainTileCount.lean",
        "start_line": 612,
        "start_column": 4,
        "end_line": 612,
        "end_column": 9
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Set (\ud835\udd13 X)\n\u03d1 : \u0398 X\nN : \u2115\nL : Grid X\nhL : L \u2208 @Antichain.\ud835\udcdb' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N\n\u22a2 \u03d1 \u2208 range \u21d1Q",
        "url": "https://github.com/fpvandoorn/carleson/blob/a11d007aa69834cdf5b6b203a05898acb98d4605/Carleson/Antichain/AntichainTileCount.lean#L612"
      },
      "metadata": {
        "blame_email_hash": "b2f50b2f722a",
        "blame_date": "2025-07-08T20:14:42+02:00",
        "inclusion_date": "2025-07-11T03:02:12.360312+00:00"
      },
      "id": "03343724b628ea0bd4065436e2fd6a1bf642dd3706e72e0c698b7e0027d03084"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-hardly-ramified",
        "commit": "60be88a841fa232b563ea16600befe5efbfb3d07",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FLT/EllipticCurve/Torsion.lean",
        "start_line": 50,
        "start_column": 68,
        "end_line": 50,
        "end_column": 73
      },
      "debug_info": {
        "goal": "A : Type u_1\ninst\u271d : AddCommGroup A\nn : \u2115\nhn : 0 < n\nr : \u2115\nh : \u2200 (d : \u2115), d \u2223 n \u2192 Nat.card \u21a5(Submodule.torsionBy \u2124 A \u2191d) = d ^ r\n\u22a2 Nonempty (\u21a5(Submodule.torsionBy \u2124 A \u2191n) \u2243+ (Fin r \u2192 ZMod n))",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/60be88a841fa232b563ea16600befe5efbfb3d07/FLT/EllipticCurve/Torsion.lean#L50"
      },
      "metadata": {
        "blame_email_hash": "2bd6560e713c",
        "blame_date": "2025-09-01T06:13:01-04:00",
        "inclusion_date": "2025-09-18T04:05:26.332171+00:00"
      },
      "id": "dbf585f19651f6de18c71e00fd0e8920b67ef9d8e51bf2b8cd642fde147a3a9f"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/duper",
        "branch": "dev",
        "commit": "43be1bece7ff58a0168022c39aa223b8e730eca5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Duper/Tests/lastAsylum.lean",
        "start_line": 35,
        "start_column": 13,
        "end_line": 35,
        "end_column": 18
      },
      "debug_info": {
        "goal": "ax1 : \u2200 (x : Inhab), Peculiar x \u2194 (Sane x \u2194 \u00acDoctor x)\nax2 : \u2200 (x : Inhab), Special x \u2194 \u2200 (y : Inhab), \u00acDoctor y \u2194 (Sane y \u2194 Peculiar x)\nax3 : \u2200 (x y : Inhab), (Sane x \u2194 Special y) \u2192 (Sane (bf x) \u2194 \u00acDoctor y)\nax4 : Sane Tarr \u2194 \u2200 (x : Inhab), Doctor x \u2192 Sane x\nax5 : Sane Fether \u2194 \u2200 (x : Inhab), \u00acDoctor x \u2192 \u00acSane x\nax6 : Sane Fether \u2194 Sane Tarr\n\u22a2 False",
        "url": "https://github.com/leanprover-community/duper/blob/43be1bece7ff58a0168022c39aa223b8e730eca5/Duper/Tests/lastAsylum.lean#L35"
      },
      "metadata": {
        "blame_email_hash": "d9c480704efb",
        "blame_date": "2022-08-01T22:37:02-04:00",
        "inclusion_date": "2025-05-08T23:57:49.858741+00:00"
      },
      "id": "1a84b4382e896315779fe88e608c4ab68099e1c382302ed640d38e38c297f72c"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/batteries",
        "branch": "docs",
        "commit": "c3553c06247678bde54544e88d21636d16cd0579",
        "lean_version": "v4.24.0-rc1"
      },
      "location": {
        "path": "BatteriesTest/conv_equals.lean",
        "start_line": 22,
        "start_column": 2,
        "end_line": 22,
        "end_column": 7
      },
      "debug_info": {
        "goal": "P : (Nat \u2192 Nat) \u2192 Prop\n\u22a2 P fun n => 0",
        "url": "https://github.com/leanprover-community/batteries/blob/c3553c06247678bde54544e88d21636d16cd0579/BatteriesTest/conv_equals.lean#L22"
      },
      "metadata": {
        "blame_email_hash": "1e9dd229978a",
        "blame_date": "2023-08-19T05:19:41+02:00",
        "inclusion_date": "2025-09-19T03:33:33.814695+00:00"
      },
      "id": "a60f4f18ea2aba86819204ffe3d754c0438e4d356da9761a22b5f585b85f1967"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "9e8de5716b162ec8983a89711a186d13ff871c22",
        "lean_version": "v4.24.0-rc1"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 108,
        "start_column": 12,
        "end_line": 108,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case a\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\nx y : T\n\u22a2 u = v",
        "url": "https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/AesopTest/ExtScript.lean#L108"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-09-10T21:14:20+02:00",
        "inclusion_date": "2025-09-16T04:23:04.307662+00:00"
      },
      "id": "d57bed0dc82a97bfbea21c68597be1d68eaa16f625e3315ce7d999d2abbc3105"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 117,
        "start_column": 8,
        "end_line": 117,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case refine_1.refine_1\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ni : \u03b1\n\u22a2 MeasurableSet fun \u03c9 => X \u03c9 i",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L117"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "c06097e51866c5822f2ad5c1f1270bafce0377529b89ed6cb91d59de11397399"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "b5313cfd2308dfb6b98d7321bf26243984e4d291",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 7238,
        "start_column": 73,
        "end_line": 7238,
        "end_column": 78
      },
      "debug_info": {
        "goal": "\u03bd : \u211d \u2192 \u211d\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\nc_close : \u211d\nc_close_pos : c_close > 0\nh_close :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 (\u03b5 : \u211d),\n        0 < \u03b5 \u2192 \u03b5 < 1 \u2192 2 < X * \u03b5 \u2192 \u2016SmoothedChebyshev \u03bd \u03b5 X - \u2191(ChebyshevPsi X)\u2016 \u2264 c_close * \u03b5 * X * Real.log X\n\u03b5_main C_main : \u211d\n\u03b5_main_pos : 0 < \u03b5_main\nC_main_pos : 0 < C_main\nh_main : \u2200 \u03b5 \u2208 Ioo 0 \u03b5_main, \u2016MellinTransform (fun x => \u2191(Smooth1 \u03bd \u03b5 x)) 1 - 1\u2016 \u2264 C_main * \u03b5\nA C_bnd : \u211d\nC_bnd_pos : 0 < C_bnd\nA_in_Ioc : A \u2208 Ioc 0 (1 / 2)\nzeta_bnd : LogDerivZetaHasBound A C_bnd\nholo1 :\n  \u2200 (T : \u211d),\n    3 \u2264 T \u2192\n      HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (Icc (1 - A / Real.log T ^ 9) 2 \u00d7\u2102 Icc (-T) T \\ {1})\n\u03c3\u2082' : \u211d\n\u03c3\u2082 : \u211d := max \u03c3\u2082' (1 / 2)\n\u03c3\u2082_pos : 0 < \u03c3\u2082\n\u03c3\u2082_lt_one : \u03c3\u2082 < 1\nholo2 : HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (uIcc \u03c3\u2082 2 \u00d7\u2102 uIcc (-3) 3 \\ {1})\nc\u2081 : \u211d\nc\u2081pos : c\u2081 > 0\nhc\u2081 : \u2200 (\u03b5 : \u211d), 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2081 \u03bd \u03b5 X T\u2016 \u2264 c\u2081 * X * Real.log X / (\u03b5 * T)\nc\u2082 : \u211d\nc\u2082pos : 0 < c\u2082\nhc\u2082 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2082 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2082 * X / (\u03b5 * T)\nc\u2083 : \u211d\nc\u2083pos : 0 < c\u2083\nhc\u2083 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2083 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2083 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2085 : \u211d\nc\u2085pos : 0 < c\u2085\nhc\u2085 : \u2200 (X : \u211d), 3 < X \u2192 \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2016I\u2085 \u03bd \u03b5 X \u03c3\u2082\u2016 \u2264 c\u2085 * X ^ \u03c3\u2082 / \u03b5\nc\u2087 : \u211d\nc\u2087pos : 0 < c\u2087\nhc\u2087 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2087 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2087 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2088 : \u211d\nc\u2088pos : 0 < c\u2088\nhc\u2088 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2088 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2088 * X / (\u03b5 * T)\nc\u2089 : \u211d\nc\u2089pos : c\u2089 > 0\nhc\u2089 : \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2089 \u03bd \u03b5 X T\u2016 \u2264 c\u2089 * X * Real.log X / (\u03b5 * T)\nc\u2084 : \u211d\nc\u2084pos : 0 \u2264 c\u2084\nTlb\u2084 : \u211d\nTlb\u2084bnd : 3 < Tlb\u2084\nhc\u2084 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              Tlb\u2084 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2084 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 \u2264 c\u2084 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2086 : \u211d\nc\u2086pos : 0 \u2264 c\u2086\nTlb\u2086 : \u211d\nTlb\u2086bnd : 3 < Tlb\u2086\nhc\u2086 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              Tlb\u2086 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2086 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 \u2264 c\u2086 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\n\u03b5x : \u211d \u2192 \u211d := fun x => Real.exp (-c * Real.log x ^ (1 / 10))\nTx : \u211d \u2192 \u211d := fun x => Real.exp (2 * c * Real.log x ^ (1 / 10))\neventually_\u03b5x_lt_one : \u2200\u1da0 (x : \u211d) in atTop, \u03b5x x < 1\neventually_2_lt : \u2200\u1da0 (x : \u211d) in atTop, 2 < x * \u03b5x x\neventually_T_gt_3 : \u2200\u1da0 (x : \u211d) in atTop, 3 < Tx x\neventually_T_gt_Tlb\u2084 : \u2200\u1da0 (x : \u211d) in atTop, Tlb\u2084 < Tx x\neventually_T_gt_Tlb\u2086 : \u2200\u1da0 (x : \u211d) in atTop, Tlb\u2086 < Tx x\neventually_\u03c3\u2082_lt_\u03c3\u2081 : \u2200\u1da0 (x : \u211d) in atTop, \u03c3\u2082 < 1 - A / Real.log (Tx x) ^ 9\n\u22a2 \u2200\u1da0 (x : \u211d) in atTop, \u03b5x x < \u03b5_main",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/b5313cfd2308dfb6b98d7321bf26243984e4d291/PrimeNumberTheoremAnd/MediumPNT.lean#L7238"
      },
      "metadata": {
        "blame_email_hash": "bee09f470e62",
        "blame_date": "2025-07-22T14:25:33+01:00",
        "inclusion_date": "2025-07-22T23:27:42.532828+00:00"
      },
      "id": "8600f41c7f4bd10d3b4989c01493c27d6d7df0b32e836bf1e7b75d54634b0465"
    },
    {
      "repo": {
        "remote": "https://github.com/emilyriehl/infinity-cosmos",
        "branch": "main",
        "commit": "8edc65d468b3ed2e4933c7969ec53bd4d904e753",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean",
        "start_line": 134,
        "start_column": 36,
        "end_line": 134,
        "end_column": 41
      },
      "debug_info": {
        "goal": "A : SSet\nf\u271d g\u271d f g h : A _\u298b1\u298c\nH\u2081 : HomotopyL f g\nH\u2082 : HomotopyL f h\n\u03c3 : Subpresheaf.toPresheaf \u039b[3, 1] \u27f6 A := sorry\n\u03c4 : A _\u298b3\u298c := sorry\n\u03c4\u2080 : SimplicialObject.\u03b4 A 0 \u03c4 = (SimplicialObject.\u03b4 A 0 \u226b SimplicialObject.\u03c3 A 0 \u226b SimplicialObject.\u03c3 A 0) g\n\u22a2 SimplicialObject.\u03b4 A 2 \u03c4 = H\u2082.simplex",
        "url": "https://github.com/emilyriehl/infinity-cosmos/blob/8edc65d468b3ed2e4933c7969ec53bd4d904e753/InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean#L134"
      },
      "metadata": {
        "blame_email_hash": "f0d6831918ab",
        "blame_date": "2024-12-17T23:14:43+01:00",
        "inclusion_date": "2025-05-05T23:23:15.244940+00:00"
      },
      "id": "4f7d5896175e711b887c3aec607b8fcba17340ee713df4bf19a92ed8e3eb5680"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "8dc6868e6d5a673620c1d9759b66f3c01d9543d7",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Playground/Arai60/P001/FP.lean",
        "start_line": 49,
        "start_column": 4,
        "end_line": 49,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case cons\nnums : List Int\ntarget : Int\ni j : Nat\nn : Int\nrest : List Int\nih : twoSum rest target = some (i, j) \u2192 i < j\nh : twoSum.loop target rest 1 (\u2205.insert n 0) = some (i, j)\n\u22a2 i < j",
        "url": "https://github.com/lean-ja/lean-by-example/blob/8dc6868e6d5a673620c1d9759b66f3c01d9543d7/Playground/Arai60/P001/FP.lean#L49"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2025-07-23T19:03:47+09:00",
        "inclusion_date": "2025-07-30T23:19:43.539577+00:00"
      },
      "id": "164db11d7e1701fb1306ecc0123190bbdd6313f7eaddff1289f7bd29f997e217"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/ApproxHomPFR.lean",
        "start_line": 183,
        "start_column": 114,
        "end_line": 183,
        "end_column": 119
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : Fintype G\ninst\u271d : Module (ZMod 2) G\nx : G\nhx : x \u2260 0\n\u22a2 Nat.card \u2191{\u03c6 | \u03c6 x = 1} = Nat.card G / 2",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/ApproxHomPFR.lean#L183"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2025-05-01T23:21:54-07:00",
        "inclusion_date": "2025-06-01T03:03:10.481677+00:00"
      },
      "id": "6ae7f947eec4b094d53ce34549c2a563d41d7fbd8a79fae4df113fdc5cce1795"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "ocfnash/concrete_g2",
        "commit": "df98409817547fdb6b54dab7643a9557437c0462",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/LinearAlgebra/RootSystem/Finite/G2.lean",
        "start_line": 600,
        "start_column": 4,
        "end_line": 600,
        "end_column": 9
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\nR : Type u_2\nM : Type u_3\nN : Type u_4\ninst\u271d\u2075 : CommRing R\ninst\u271d\u2074 : AddCommGroup M\ninst\u271d\u00b3 : Module R M\ninst\u271d\u00b2 : AddCommGroup N\ninst\u271d\u00b9 : Module R N\nP : RootPairing \u03b9 R M N\ninst\u271d : CharZero R\n\u22a2 Submodule.span R\n      (Set.range\n        \u21d1({ toFun := List.get RootPairing.EmbeddedG2.allCoeffs, inj' := \u22ef }.trans\n            { toFun := fun x => Int.cast \u2218 x, inj' := \u22ef })) =\n    \u22a4",
        "url": "https://github.com/leanprover-community/mathlib4/blob/df98409817547fdb6b54dab7643a9557437c0462/Mathlib/LinearAlgebra/RootSystem/Finite/G2.lean#L600"
      },
      "metadata": {
        "blame_email_hash": "1b004c50e78f",
        "blame_date": "2025-06-18T13:01:58+01:00",
        "inclusion_date": "2025-06-19T03:05:54.574593+00:00"
      },
      "id": "5fa7dbf9891f06a811113a4c400beb6455bc61900c24d1d17805701c6ce03e6c"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 70,
        "start_column": 4,
        "end_line": 70,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type u_1\nS : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : CommRing S\nT : Type u_3\ninst\u271d : CommRing T\ng : S \u2192+* T\nf : R \u2192+* S\n\u22a2 \u2200 (x y : R), g (f (x * y)) = g (f x) * g (f y)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L70"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "c8ed1983817689d7cac50801fa871734f5016d942bcbb3b84b5783242fdfd7bc"
    },
    {
      "repo": {
        "remote": "https://github.com/nomeata/loogle",
        "branch": "master",
        "commit": "b340a5b73a68fd54d624ac1f9c025c11f638bb53",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Tests.lean",
        "start_line": 169,
        "start_column": 82,
        "end_line": 169,
        "end_column": 87
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : Mul R\ninst\u271d : Star R\nx : R\n\u22a2 star x * x = x * star x",
        "url": "https://github.com/nomeata/loogle/blob/b340a5b73a68fd54d624ac1f9c025c11f638bb53/Tests.lean#L169"
      },
      "metadata": {
        "blame_email_hash": "1e9dd229978a",
        "blame_date": "2023-11-11T14:02:18+01:00",
        "inclusion_date": "2025-04-14T00:17:19.239440+00:00"
      },
      "id": "b8e6a617e0cd645aeb14c4d11910d7b306f6b4356a8ac700d9b76dcbed5d1792"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "duplex-sponge-fs",
        "commit": "0fc5523909130c6100b03cf4a7afb3566f27e485",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/NonBinaryField/KoalaBear.lean",
        "start_line": 149,
        "start_column": 2,
        "end_line": 149,
        "end_column": 7
      },
      "debug_info": {
        "goal": "bits : Fin (KoalaBear.twoAdicity + 1)\n\u22a2 IsPrimitiveRoot KoalaBear.twoAdicGenerators[bits] (2 ^ \u2191bits)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0fc5523909130c6100b03cf4a7afb3566f27e485/ArkLib/Data/FieldTheory/NonBinaryField/KoalaBear.lean#L149"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-09-12T02:34:43-04:00",
        "inclusion_date": "2025-09-18T04:30:57.445731+00:00"
      },
      "id": "7bfd773ba5ddc773cbf047a48545ff6f73f6bb2ca46bac76845da22728ed2d19"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "Inertia",
        "commit": "1597a1afa1c8c9794baad65270a05523d232cfa9",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "PhysLean/ClassicalMechanics/HarmonicOscillator/Solution.lean",
        "start_line": 265,
        "start_column": 2,
        "end_line": 265,
        "end_column": 7
      },
      "debug_info": {
        "goal": "S : HarmonicOscillator\nIC : ClassicalMechanics.HarmonicOscillator.InitialConditions\nt : Time\nhx :\n  ClassicalMechanics.HarmonicOscillator.InitialConditions.x\u2080 IC \u2260 0 \u2228\n    ClassicalMechanics.HarmonicOscillator.InitialConditions.v\u2080 IC \u2260 0\n\u22a2 Time.deriv (ClassicalMechanics.HarmonicOscillator.sol S IC) t = 0 \u2194\n    ClassicalMechanics.HarmonicOscillator.sol S IC t =\n      \u221a(\u2016ClassicalMechanics.HarmonicOscillator.InitialConditions.x\u2080 IC\u2016 ^ 2 +\n            (\u2016ClassicalMechanics.HarmonicOscillator.InitialConditions.v\u2080 IC\u2016 / S.\u03c9) ^ 2) \u2022\n        Space.basis 0",
        "url": "https://github.com/HEPLean/PhysLean/blob/1597a1afa1c8c9794baad65270a05523d232cfa9/PhysLean/ClassicalMechanics/HarmonicOscillator/Solution.lean#L265"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-09-11T15:35:52+01:00",
        "inclusion_date": "2025-09-12T04:22:08.671672+00:00"
      },
      "id": "2628adb62537eebafda954123c62583855957dac9ee1fcb53a8aa7fd0e29b992"
    },
    {
      "repo": {
        "remote": "https://github.com/ufmg-smite/lean-smt",
        "branch": "main",
        "commit": "98b12d984f8c21a99abfb8b69f12fe243beaf7c6",
        "lean_version": "v4.16.0"
      },
      "location": {
        "path": "Smt/Reconstruct/Rat/Core.lean",
        "start_line": 632,
        "start_column": 2,
        "end_line": 632,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : Rat\n\u22a2 0 \u2264 x.abs",
        "url": "https://github.com/ufmg-smite/lean-smt/blob/98b12d984f8c21a99abfb8b69f12fe243beaf7c6/Smt/Reconstruct/Rat/Core.lean#L632"
      },
      "metadata": {
        "blame_email_hash": "a29bc6f92c6c",
        "blame_date": "2025-05-03T21:48:26-07:00",
        "inclusion_date": "2025-05-05T00:05:16.483689+00:00"
      },
      "id": "b38f5b0dafcde2cac1b1d9d70f0102f7aac726d9b58a4b1855b5051060d9298c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 39,
        "start_column": 54,
        "end_line": 39,
        "end_column": 59
      },
      "debug_info": {
        "goal": "\u22a2 (\u2211 x \u2208 Finset.range 10, (x + 1) ^ 2) % 10 = 5",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L39"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "53d94ef36afb6c215852b3ef8191501d3eac388c1a08d6cf0f18dea7e5a20f0d"
    },
    {
      "repo": {
        "remote": "https://github.com/lecopivo/SciLean",
        "branch": "bump-v4.19.0-rc2",
        "commit": "612daaaa9f63016cd8d06df8e634e4d858d26d8e",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Test/realToFloat.lean",
        "start_line": 34,
        "start_column": 2,
        "end_line": 34,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 (fun x =>\n      x.1.exp + isomorph `RealToFloat (fun x => x.2 0) x \u2264 0 \u2227 x.1.exp + isomorph `RealToFloat (fun x => x.2 1) x \u2264 0) =\n    fun p => p.1.exp + p.2 0 \u2264 0 \u2227 p.1.exp + p.2 1 \u2264 0",
        "url": "https://github.com/lecopivo/SciLean/blob/612daaaa9f63016cd8d06df8e634e4d858d26d8e/Test/realToFloat.lean#L34"
      },
      "metadata": {
        "blame_email_hash": "c7c59fe619b9",
        "blame_date": "2024-11-19T16:57:30-05:00",
        "inclusion_date": "2025-05-29T03:10:06.182872+00:00"
      },
      "id": "7b123661af1232e4b825d524f4b14b91d10feeed79958b038212934ea4eff3f4"
    },
    {
      "repo": {
        "remote": "https://github.com/cmu-l3/llmlean",
        "branch": "kimina-pr",
        "commit": "126a6b2af37727c4d81bb49f6af6b354a380145e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LLMleanTest/Examples2.lean",
        "start_line": 21,
        "start_column": 2,
        "end_line": 21,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\nf : \u03b1 \u2192 \u03b2\ns t : Set \u03b1\nu v : Set \u03b2\n\u22a2 f '' (s \u222a t) = f '' s \u222a f '' t",
        "url": "https://github.com/cmu-l3/llmlean/blob/126a6b2af37727c4d81bb49f6af6b354a380145e/LLMleanTest/Examples2.lean#L21"
      },
      "metadata": {
        "blame_email_hash": "3ab0971ac342",
        "blame_date": "2024-07-23T21:27:45-04:00",
        "inclusion_date": "2025-06-11T03:39:01.065377+00:00"
      },
      "id": "71e9f2f47b4100660b47a7af3ebf19aa4f131afcd478ad1f00bbc1a3ff6bc93a"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/NNG4",
        "branch": "main",
        "commit": "3558f5bfb6c7ec5528498c498ed097c7f772d24f",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "test/induction.lean",
        "start_line": 24,
        "start_column": 4,
        "end_line": 24,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case zero\na c : \u2115\ng : c = 0\nh : a + 0 = a\n\u22a2 0 = 0",
        "url": "https://github.com/leanprover-community/NNG4/blob/3558f5bfb6c7ec5528498c498ed097c7f772d24f/test/induction.lean#L24"
      },
      "metadata": {
        "blame_email_hash": "56c7f595c669",
        "blame_date": "2024-02-29T17:19:01+01:00",
        "inclusion_date": "2025-09-08T18:41:12.023523+00:00"
      },
      "id": "8815eff2a3f7168f298e72b4ace815fc3282bdfa63a6529b9fb4777c4c29b50d"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_06.lean",
        "start_line": 89,
        "start_column": 4,
        "end_line": 89,
        "end_column": 9
      },
      "debug_info": {
        "goal": "q n : \u2115\nlamb : \u2102\na : \u211d := \u22ef\nb : \u211d := \u22ef\nh : lamb \u2208 primitiveRoots n \u2102\nh_lamb : lamb \u2260 1\nh_a_lt_one : \u2016a\u2016 < 1\nh_ineq : \u2016eval (\u2191q) (X - C lamb)\u2016 ^ 2 > (\u2191q - 1) ^ 2\nthis\u271d : 0 \u2264 (\u2191q - 1) ^ 2\ng : \u2191q - 1 < \u221a(\u2016eval (\u2191q) (X - C lamb)\u2016 ^ 2)\nthis : \u221a((\u2191q - 1) ^ 2) = \u2191q - 1\n\u22a2 0 \u2264 \u2016eval (\u2191q) (X - C lamb)\u2016",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_06.lean#L89"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2025-08-30T22:59:32+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "cab1b39719f7095bccefddff5a9bd9b536cf84b21dc4b57145602685d328103a"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/10FunctionsAndOperators.lean",
        "start_line": 297,
        "start_column": 12,
        "end_line": 297,
        "end_column": 17
      },
      "debug_info": {
        "goal": "m : Type u_4\nn : Type u_5\ninst\u271d\u00b3 : Fintype m\ninst\u271d\u00b2 : Fintype n\ninst\u271d\u00b9 : DecidableEq m\ninst\u271d : DecidableEq n\nA : Matrix m n \u211d\n\u22a2 sorry A \u2264 \u2191(Fintype.card m) * \u2016A\u2016",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/10FunctionsAndOperators.lean#L297"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2025-08-06T00:45:33+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "8856cdee966e62729ab93363c9a47ec165b4714d75175c0efd6bf8e88d5e554c"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "54e2692f53004e900064c6f6e8e5a38b2754b0ad",
        "lean_version": "v4.24.0-rc1"
      },
      "location": {
        "path": "Compfiles/Imo1966P5.lean",
        "start_line": 46,
        "start_column": 2,
        "end_line": 46,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x a : Fin 4 \u2192 \u211d\nh\u2080 : Function.Injective a\nh\u2081 : \u2200 (i : Fin 4), \u2211 j, |a i - a j| * x j = 1\n\u22a2 (x 0, x 1, x 2, x 3) = Imo1966P5.solution_fun (a 0, a 1, a 2, a 3)",
        "url": "https://github.com/dwrensha/compfiles/blob/54e2692f53004e900064c6f6e8e5a38b2754b0ad/Compfiles/Imo1966P5.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "62a0bba6d3ac",
        "blame_date": "2025-07-23T20:52:05+08:00",
        "inclusion_date": "2025-09-19T03:11:14.409941+00:00"
      },
      "id": "88e68c9fcfd945117073c4ed172babbb7fc8dd319ebbcb48a25e07e7498a4934"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "generalized-trace",
        "commit": "5c479c65ad77d0b6ad82e6622abd2ad85e349c7d",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/Classification/GeneralizedTrace.lean",
        "start_line": 187,
        "start_column": 2,
        "end_line": 187,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03c6 : Formula \u2115\n\u22a2 Set.Finite (LO.Modal.Formula.gTrace \u03c6) \u2228 @Set.Cofinite \u2115 (LO.Modal.Formula.gTrace \u03c6)",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/5c479c65ad77d0b6ad82e6622abd2ad85e349c7d/Foundation/ProvabilityLogic/Classification/GeneralizedTrace.lean#L187"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-09-16T04:05:37+09:00",
        "inclusion_date": "2025-09-17T03:36:03.416511+00:00"
      },
      "id": "fd3bc92fe917375783dbcbdd11dcf3f4eee49977c08dd91ee4b2efb4c923becb"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "a0242db40daf0c3a31d08fc70ebba2952165de6c",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "Carleson/Classical/CarlesonHunt.lean",
        "start_line": 16,
        "start_column": 81,
        "end_line": 16,
        "end_column": 86
      },
      "debug_info": {
        "goal": "T : \u211d\nhT : Fact (0 < T)\nf : AddCircle T \u2192 \u2102\np : ENNReal\nhp : 1 < p\nhf : MemLp f p AddCircle.haarAddCircle\n\u22a2 \u2200\u1d50 (x : AddCircle T), Filter.Tendsto (fun x_1 => (partialFourierSum' x_1 f) x) Filter.atTop (nhds (f x))",
        "url": "https://github.com/fpvandoorn/carleson/blob/a0242db40daf0c3a31d08fc70ebba2952165de6c/Carleson/Classical/CarlesonHunt.lean#L16"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-07-08T17:45:26+02:00",
        "inclusion_date": "2025-09-08T16:13:18.779687+00:00"
      },
      "id": "2e2db0a3e2917628a78cf7fb2e7b0ddba0dd20451741b1c3177a3b72487bed04"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-hardly-ramified",
        "commit": "60be88a841fa232b563ea16600befe5efbfb3d07",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FLT/Basic/Reductions.lean",
        "start_line": 370,
        "start_column": 93,
        "end_line": 370,
        "end_column": 98
      },
      "debug_info": {
        "goal": "P : FLT.FreyPackage\n\u22a2 IsSimpleModule (ZMod (FLT.FreyPackage.p P))\n    (torsionGaloisRepresentation (FLT.FreyPackage.freyCurve P) (FLT.FreyPackage.p P) FLT.Qbar).asModule",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/60be88a841fa232b563ea16600befe5efbfb3d07/FLT/Basic/Reductions.lean#L370"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-08-21T11:29:27+01:00",
        "inclusion_date": "2025-09-18T04:05:26.332171+00:00"
      },
      "id": "6a8521de0bd0b1654956d5fd33acb5a461bd1e6dc9227f92aabaf4efce69035b"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/duper",
        "branch": "hammer",
        "commit": "df5422589eaaeba41dd92db86155b35961347905",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "Duper/Tests/lastAsylum.lean",
        "start_line": 35,
        "start_column": 13,
        "end_line": 35,
        "end_column": 18
      },
      "debug_info": {
        "goal": "ax1 : \u2200 (x : Inhab), Peculiar x \u2194 (Sane x \u2194 \u00acDoctor x)\nax2 : \u2200 (x : Inhab), Special x \u2194 \u2200 (y : Inhab), \u00acDoctor y \u2194 (Sane y \u2194 Peculiar x)\nax3 : \u2200 (x y : Inhab), (Sane x \u2194 Special y) \u2192 (Sane (bf x) \u2194 \u00acDoctor y)\nax4 : Sane Tarr \u2194 (x : Inhab) \u2192 Doctor x \u2192 Sane x\nax5 : Sane Fether \u2194 \u2200 (x : Inhab), \u00acDoctor x \u2192 \u00acSane x\nax6 : Sane Fether \u2194 Sane Tarr\n\u22a2 False",
        "url": "https://github.com/leanprover-community/duper/blob/df5422589eaaeba41dd92db86155b35961347905/Duper/Tests/lastAsylum.lean#L35"
      },
      "metadata": {
        "blame_email_hash": "d9c480704efb",
        "blame_date": "2022-08-01T22:37:02-04:00",
        "inclusion_date": "2025-09-15T04:46:20.716201+00:00"
      },
      "id": "b10f399c1be308c0af9caeb5a732c473d5d963f46bc8b670c7cd03858b482d5e"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/batteries",
        "branch": "docs",
        "commit": "c3553c06247678bde54544e88d21636d16cd0579",
        "lean_version": "v4.24.0-rc1"
      },
      "location": {
        "path": "BatteriesTest/lintunused.lean",
        "start_line": 7,
        "start_column": 2,
        "end_line": 7,
        "end_column": 7
      },
      "debug_info": {
        "goal": "h : 1 = 1\n\u22a2 True",
        "url": "https://github.com/leanprover-community/batteries/blob/c3553c06247678bde54544e88d21636d16cd0579/BatteriesTest/lintunused.lean#L7"
      },
      "metadata": {
        "blame_email_hash": "45b5ed8e3c8e",
        "blame_date": "2023-08-08T02:17:31+02:00",
        "inclusion_date": "2025-09-19T03:33:33.814695+00:00"
      },
      "id": "4814fe1db1cad5806a4ebdf557e7fa844b8022678599d870bf5764471664720f"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "9e8de5716b162ec8983a89711a186d13ff871c22",
        "lean_version": "v4.24.0-rc1"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 108,
        "start_column": 12,
        "end_line": 108,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case a\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\nx y : T\nu v : U\n\u22a2 u = v",
        "url": "https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/AesopTest/ExtScript.lean#L108"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-09-10T21:14:20+02:00",
        "inclusion_date": "2025-09-16T04:23:04.307662+00:00"
      },
      "id": "1e8ce90f3fa0da1dec4a09f67fac7341a23f3a94ca268312bedd785bee051f86"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 118,
        "start_column": 8,
        "end_line": 118,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case refine_1.refine_2\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ni : \u03b1\n\u22a2 MeasurableSet fun \u03c9 => Y \u03c9 i",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L118"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "c5663979c4e4160eb9e17548e7362b1b6a1e30575570fc12969c59fdaf579ebc"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "f4441d7327caa75ae7879ecfda33fc60ab0cf17e",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 7239,
        "start_column": 69,
        "end_line": 7239,
        "end_column": 74
      },
      "debug_info": {
        "goal": "\u03bd : \u211d \u2192 \u211d\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\nc_close : \u211d\nc_close_pos : c_close > 0\nh_close :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 (\u03b5 : \u211d),\n        0 < \u03b5 \u2192 \u03b5 < 1 \u2192 2 < X * \u03b5 \u2192 \u2016SmoothedChebyshev \u03bd \u03b5 X - \u2191(ChebyshevPsi X)\u2016 \u2264 c_close * \u03b5 * X * Real.log X\n\u03b5_main C_main : \u211d\n\u03b5_main_pos : 0 < \u03b5_main\nC_main_pos : 0 < C_main\nh_main : \u2200 \u03b5 \u2208 Ioo 0 \u03b5_main, \u2016MellinTransform (fun x => \u2191(Smooth1 \u03bd \u03b5 x)) 1 - 1\u2016 \u2264 C_main * \u03b5\nA C_bnd : \u211d\nC_bnd_pos : 0 < C_bnd\nA_in_Ioc : A \u2208 Ioc 0 (1 / 2)\nzeta_bnd : LogDerivZetaHasBound A C_bnd\nholo1 :\n  \u2200 (T : \u211d),\n    3 \u2264 T \u2192\n      HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (Icc (1 - A / Real.log T ^ 9) 2 \u00d7\u2102 Icc (-T) T \\ {1})\n\u03c3\u2082' : \u211d\n\u03c3\u2082 : \u211d := max \u03c3\u2082' (1 / 2)\n\u03c3\u2082_pos : 0 < \u03c3\u2082\n\u03c3\u2082_lt_one : \u03c3\u2082 < 1\nholo2 : HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (uIcc \u03c3\u2082 2 \u00d7\u2102 uIcc (-3) 3 \\ {1})\nc\u2081 : \u211d\nc\u2081pos : c\u2081 > 0\nhc\u2081 : \u2200 (\u03b5 : \u211d), 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2081 \u03bd \u03b5 X T\u2016 \u2264 c\u2081 * X * Real.log X / (\u03b5 * T)\nc\u2082 : \u211d\nc\u2082pos : 0 < c\u2082\nhc\u2082 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2082 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2082 * X / (\u03b5 * T)\nc\u2083 : \u211d\nc\u2083pos : 0 < c\u2083\nhc\u2083 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2083 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2083 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2085 : \u211d\nc\u2085pos : 0 < c\u2085\nhc\u2085 : \u2200 (X : \u211d), 3 < X \u2192 \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2016I\u2085 \u03bd \u03b5 X \u03c3\u2082\u2016 \u2264 c\u2085 * X ^ \u03c3\u2082 / \u03b5\nc\u2087 : \u211d\nc\u2087pos : 0 < c\u2087\nhc\u2087 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2087 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2087 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2088 : \u211d\nc\u2088pos : 0 < c\u2088\nhc\u2088 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2088 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2088 * X / (\u03b5 * T)\nc\u2089 : \u211d\nc\u2089pos : c\u2089 > 0\nhc\u2089 : \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2089 \u03bd \u03b5 X T\u2016 \u2264 c\u2089 * X * Real.log X / (\u03b5 * T)\nc\u2084 : \u211d\nc\u2084pos : 0 \u2264 c\u2084\nTlb\u2084 : \u211d\nTlb\u2084bnd : 3 < Tlb\u2084\nhc\u2084 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              Tlb\u2084 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2084 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 \u2264 c\u2084 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2086 : \u211d\nc\u2086pos : 0 \u2264 c\u2086\nTlb\u2086 : \u211d\nTlb\u2086bnd : 3 < Tlb\u2086\nhc\u2086 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              Tlb\u2086 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2086 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 \u2264 c\u2086 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nC' : \u211d := c_close + C_main\nC'' : \u211d := c\u2081 + c\u2082 + c\u2088 + c\u2089\nC''' : \u211d := c\u2083 + c\u2084 + c\u2086 + c\u2087\nc : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\n\u03b5x : \u211d \u2192 \u211d := fun x => Real.exp (-c * Real.log x ^ (1 / 10))\nTx : \u211d \u2192 \u211d := fun x => Real.exp (2 * c * Real.log x ^ (1 / 10))\neventually_\u03b5x_lt_one : \u2200\u1da0 (x : \u211d) in atTop, \u03b5x x < 1\neventually_2_lt : \u2200\u1da0 (x : \u211d) in atTop, 2 < x * \u03b5x x\neventually_T_gt_3 : \u2200\u1da0 (x : \u211d) in atTop, 3 < Tx x\n\u22a2 \u2200\u1da0 (x : \u211d) in atTop, Tlb\u2084 < Tx x",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/f4441d7327caa75ae7879ecfda33fc60ab0cf17e/PrimeNumberTheoremAnd/MediumPNT.lean#L7239"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-07-21T22:55:17-04:00",
        "inclusion_date": "2025-07-22T23:05:23.619594+00:00"
      },
      "id": "ab45db011ff579439802d97650575f51cff241868f6ff05100641ebf1113414d"
    },
    {
      "repo": {
        "remote": "https://github.com/emilyriehl/infinity-cosmos",
        "branch": "main",
        "commit": "8edc65d468b3ed2e4933c7969ec53bd4d904e753",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean",
        "start_line": 135,
        "start_column": 36,
        "end_line": 135,
        "end_column": 41
      },
      "debug_info": {
        "goal": "A : SSet\nf\u271d g\u271d f g h : A _\u298b1\u298c\nH\u2081 : HomotopyL f g\nH\u2082 : HomotopyL f h\n\u03c3 : Subpresheaf.toPresheaf \u039b[3, 1] \u27f6 A := sorry\n\u03c4 : A _\u298b3\u298c := sorry\n\u03c4\u2080 : SimplicialObject.\u03b4 A 0 \u03c4 = (SimplicialObject.\u03b4 A 0 \u226b SimplicialObject.\u03c3 A 0 \u226b SimplicialObject.\u03c3 A 0) g\n\u03c4\u2082 : SimplicialObject.\u03b4 A 2 \u03c4 = H\u2082.simplex\n\u22a2 SimplicialObject.\u03b4 A 3 \u03c4 = H\u2081.simplex",
        "url": "https://github.com/emilyriehl/infinity-cosmos/blob/8edc65d468b3ed2e4933c7969ec53bd4d904e753/InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean#L135"
      },
      "metadata": {
        "blame_email_hash": "f0d6831918ab",
        "blame_date": "2024-12-17T23:14:43+01:00",
        "inclusion_date": "2025-05-05T23:23:15.244940+00:00"
      },
      "id": "74b2f697370a4a9bddd820434ad83e677b9b29e13abf89b3e889097d2c59a6cc"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "3d8e1994e2522b249c36b71db17765a779eaa787",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "LeanByExample/Tactic/Induction.lean",
        "start_line": 228,
        "start_column": 6,
        "end_line": 228,
        "end_column": 11
      },
      "debug_info": {
        "goal": "n\u271d n : \u2115\n\u22a2 sum (n + 1) = \u2191(n + 1) * (\u2191(n + 1) + 1) / 2",
        "url": "https://github.com/lean-ja/lean-by-example/blob/3d8e1994e2522b249c36b71db17765a779eaa787/LeanByExample/Tactic/Induction.lean#L228"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2025-07-20T16:48:19+09:00",
        "inclusion_date": "2025-09-15T04:41:33.921583+00:00"
      },
      "id": "ba1971ee87303ab91319bb1d9e7d2b27ec5b99e55f2e7dcdebe2b6d7aa881c77"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "58ff9ddb3f6bc3860fb0316cc210fca5d488ba62",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PFR/ApproxHomPFR.lean",
        "start_line": 234,
        "start_column": 114,
        "end_line": 234,
        "end_column": 119
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : Fintype G\ninst\u271d : Module (ZMod 2) G\nA : Set G\n\u22a2 \u2203 \u03c6, Nat.card \u2191{x | x \u2208 A \u2227 \u03c6 x = 1} \u2265 (Nat.card \u2191A - 1) / 2",
        "url": "https://github.com/teorth/pfr/blob/58ff9ddb3f6bc3860fb0316cc210fca5d488ba62/PFR/ApproxHomPFR.lean#L234"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2025-05-01T23:21:54-07:00",
        "inclusion_date": "2025-07-05T05:06:27.171280+00:00"
      },
      "id": "52b37f4e82e5289a2e316f09e097e70ba88ff156bc0b7f3d75122cdcb1fb29c5"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "ocfnash/concrete_g2",
        "commit": "df98409817547fdb6b54dab7643a9557437c0462",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/LinearAlgebra/RootSystem/Finite/G2.lean",
        "start_line": 602,
        "start_column": 4,
        "end_line": 602,
        "end_column": 9
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\nR : Type u_2\nM : Type u_3\nN : Type u_4\ninst\u271d\u2075 : CommRing R\ninst\u271d\u2074 : AddCommGroup M\ninst\u271d\u00b3 : Module R M\ninst\u271d\u00b2 : AddCommGroup N\ninst\u271d\u00b9 : Module R N\nP : RootPairing \u03b9 R M N\ninst\u271d : CharZero R\n\u22a2 Submodule.span R\n      (Set.range\n        \u21d1({ toFun := List.get RootPairing.EmbeddedG2.allCocoeffs, inj' := \u22ef }.trans\n            { toFun := fun x => Int.cast \u2218 x, inj' := \u22ef })) =\n    \u22a4",
        "url": "https://github.com/leanprover-community/mathlib4/blob/df98409817547fdb6b54dab7643a9557437c0462/Mathlib/LinearAlgebra/RootSystem/Finite/G2.lean#L602"
      },
      "metadata": {
        "blame_email_hash": "1b004c50e78f",
        "blame_date": "2025-06-18T13:01:58+01:00",
        "inclusion_date": "2025-06-19T03:05:54.574593+00:00"
      },
      "id": "ad2f31798fdc1b330ef7f966012fde2917ddc630c1f5e9aa1c316ecd8c298365"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 72,
        "start_column": 4,
        "end_line": 72,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type u_1\nS : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : CommRing S\nT : Type u_3\ninst\u271d : CommRing T\ng : S \u2192+* T\nf : R \u2192+* S\n\u22a2 g (f 0) = 0",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L72"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "f77ab73602da42ca0b99a99beeb159c650a7b2442ed47923ca7d71f438aa5235"
    },
    {
      "repo": {
        "remote": "https://github.com/nomeata/loogle",
        "branch": "master",
        "commit": "15beac7f2a5913571cba016e4b87fed907c54f7d",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "Tests.lean",
        "start_line": 227,
        "start_column": 78,
        "end_line": 227,
        "end_column": 83
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\ninst\u271d\u00b2 : Zero \u03b1\ninst\u271d\u00b9 : HMul \u03b1 \u03b1 \u03b1\ninst\u271d : LE \u03b1\na : \u03b1\n\u22a2 0 \u2264 a * a",
        "url": "https://github.com/nomeata/loogle/blob/15beac7f2a5913571cba016e4b87fed907c54f7d/Tests.lean#L227"
      },
      "metadata": {
        "blame_email_hash": "1e9dd229978a",
        "blame_date": "2023-11-11T14:02:18+01:00",
        "inclusion_date": "2025-09-17T04:17:32.820406+00:00"
      },
      "id": "6e6fe559e40694f894e6fae86581862b0f3621ca1143341c4a04248ae76124a1"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "duplex-sponge-fs",
        "commit": "0fc5523909130c6100b03cf4a7afb3566f27e485",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/NonBinaryField/KoalaBear.lean",
        "start_line": 155,
        "start_column": 2,
        "end_line": 155,
        "end_column": 7
      },
      "debug_info": {
        "goal": "bits : Fin (KoalaBear.twoAdicity + 1)\nh : KoalaBear.twoAdicGenerators[bits] \u2260 0\n\u22a2 Units.mk0 KoalaBear.twoAdicGenerators[bits] h \u2208 rootsOfUnity (2 ^ \u2191bits) KoalaBear.Field",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0fc5523909130c6100b03cf4a7afb3566f27e485/ArkLib/Data/FieldTheory/NonBinaryField/KoalaBear.lean#L155"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-09-12T02:34:43-04:00",
        "inclusion_date": "2025-09-18T04:30:57.445731+00:00"
      },
      "id": "90fc78612318e8a0b323facb5491137c3092f5955e113f242beb739123999983"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "Inertia",
        "commit": "1597a1afa1c8c9794baad65270a05523d232cfa9",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "PhysLean/ClassicalMechanics/HarmonicOscillator/Solution.lean",
        "start_line": 276,
        "start_column": 2,
        "end_line": 276,
        "end_column": 7
      },
      "debug_info": {
        "goal": "S : HarmonicOscillator\nIC : ClassicalMechanics.HarmonicOscillator.InitialConditions\n\u22a2 S.energy (ClassicalMechanics.HarmonicOscillator.sol S IC) = fun x =>\n    1 / 2 *\n      (S.m * \u2016ClassicalMechanics.HarmonicOscillator.InitialConditions.v\u2080 IC\u2016 ^ 2 +\n        S.k * \u2016ClassicalMechanics.HarmonicOscillator.InitialConditions.x\u2080 IC\u2016 ^ 2)",
        "url": "https://github.com/HEPLean/PhysLean/blob/1597a1afa1c8c9794baad65270a05523d232cfa9/PhysLean/ClassicalMechanics/HarmonicOscillator/Solution.lean#L276"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-09-11T15:35:52+01:00",
        "inclusion_date": "2025-09-12T04:22:08.671672+00:00"
      },
      "id": "f9329999159fb0dad47a5d594f75c7ffff3eb24c1248d456cdb1d183be46271d"
    },
    {
      "repo": {
        "remote": "https://github.com/ufmg-smite/lean-smt",
        "branch": "main",
        "commit": "98b12d984f8c21a99abfb8b69f12fe243beaf7c6",
        "lean_version": "v4.16.0"
      },
      "location": {
        "path": "Smt/Reconstruct/Rat/Core.lean",
        "start_line": 635,
        "start_column": 2,
        "end_line": 635,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a : Rat\nh : a \u2264 0\n\u22a2 a.abs = -a",
        "url": "https://github.com/ufmg-smite/lean-smt/blob/98b12d984f8c21a99abfb8b69f12fe243beaf7c6/Smt/Reconstruct/Rat/Core.lean#L635"
      },
      "metadata": {
        "blame_email_hash": "a29bc6f92c6c",
        "blame_date": "2025-05-03T21:48:26-07:00",
        "inclusion_date": "2025-05-05T00:05:16.483689+00:00"
      },
      "id": "7a709f0c9989019b9a5de1dda3304164c454fa35d3661d334da648f0a996c47e"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 80,
        "start_column": 46,
        "end_line": 80,
        "end_column": 51
      },
      "debug_info": {
        "goal": "\u22a2 (\u2211 k \u2208 Finset.range 101, k) % 6 = 4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L80"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "5cabb254eaddb73ef3da71cf28d814ef5d90b633de89a9445ae620157c7d53a9"
    },
    {
      "repo": {
        "remote": "https://github.com/lecopivo/SciLean",
        "branch": "bump-v4.19.0-rc2",
        "commit": "612daaaa9f63016cd8d06df8e634e4d858d26d8e",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "SciLean/Modules/Prob/DerivUnderIntegralSign.lean",
        "start_line": 32,
        "start_column": 41,
        "end_line": 32,
        "end_column": 46
      },
      "debug_info": {
        "goal": "X : Type u_2\ninst\u271d\u00b3 : NormedAddCommGroup X\ninst\u271d\u00b2 : NormedSpace \u211d X\nY : Type u_1\nx\u271d : MeasurableSpace Y\nZ : Type u_3\ninst\u271d\u00b9 : NormedAddCommGroup Z\ninst\u271d : NormedSpace \u211d Z\n\u03bc : X \u2192 Measure Y\nf : X \u2192 Y \u2192 Z\nx dx : X\nh : DifferentiableUnderIntegralAt f \u03bc x\n\u22a2 (fderiv \u211d (fun x => \u222b (y : Y), f x y \u2202\u03bc x) x) dx =\n    (fderiv \u211d (fun x' => \u222b (y : Y), f x y \u2202\u03bc x') x) dx + \u222b (y : Y), (fderiv \u211d (fun x => f x y) x) dx \u2202\u03bc x",
        "url": "https://github.com/lecopivo/SciLean/blob/612daaaa9f63016cd8d06df8e634e4d858d26d8e/SciLean/Modules/Prob/DerivUnderIntegralSign.lean#L32"
      },
      "metadata": {
        "blame_email_hash": "c7c59fe619b9",
        "blame_date": "2024-02-12T01:13:42+01:00",
        "inclusion_date": "2025-05-29T03:10:06.182872+00:00"
      },
      "id": "e66469233f8695318fb5a7795a86667299fdda620175d88571bb47deba716703"
    },
    {
      "repo": {
        "remote": "https://github.com/cmu-l3/llmlean",
        "branch": "kimina-pr",
        "commit": "126a6b2af37727c4d81bb49f6af6b354a380145e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LLMleanTest/Examples2.lean",
        "start_line": 98,
        "start_column": 2,
        "end_line": 98,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 InjOn log {x | x > 0}",
        "url": "https://github.com/cmu-l3/llmlean/blob/126a6b2af37727c4d81bb49f6af6b354a380145e/LLMleanTest/Examples2.lean#L98"
      },
      "metadata": {
        "blame_email_hash": "3ab0971ac342",
        "blame_date": "2024-07-23T21:27:45-04:00",
        "inclusion_date": "2025-06-11T03:39:01.065377+00:00"
      },
      "id": "27e78229d1b07b4b504fc73f42e70495c0c17c27b79c15150454987ed610f504"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/NNG4",
        "branch": "main",
        "commit": "3558f5bfb6c7ec5528498c498ed097c7f772d24f",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "test/induction.lean",
        "start_line": 33,
        "start_column": 4,
        "end_line": 33,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case succ\na c d : \u2115\nhd : c = 0 \u2192 a + d = a \u2192 d = 0\ng : c = 0\nh : a + d.succ = a\n\u22a2 d.succ = 0",
        "url": "https://github.com/leanprover-community/NNG4/blob/3558f5bfb6c7ec5528498c498ed097c7f772d24f/test/induction.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "56c7f595c669",
        "blame_date": "2024-02-29T17:19:01+01:00",
        "inclusion_date": "2025-09-08T18:41:12.023523+00:00"
      },
      "id": "f75d50b20ded4233132438a62291a5fbbf446f334fd25a6f4e378595e5dd8fe6"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_01.lean",
        "start_line": 184,
        "start_column": 50,
        "end_line": 184,
        "end_column": 55
      },
      "debug_info": {
        "goal": "n : \u2115\nx : \u211d\nhxge : x \u2265 \u2191n\nhxlt : x < \u2191n + 1\n\u22a2 Real.log x \u2264 \u2211 k \u2208 Icc 1 n, (\u2191k)\u207b\u00b9",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_01.lean#L184"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2025-08-30T22:25:38+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "0809d97d3740c3891c53998ce9c34ff6eab7a9b39f5b527a07e89b9d8eaddd1a"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/10FunctionsAndOperators.lean",
        "start_line": 297,
        "start_column": 34,
        "end_line": 297,
        "end_column": 39
      },
      "debug_info": {
        "goal": "m : Type u_4\nn : Type u_5\ninst\u271d\u00b3 : Fintype m\ninst\u271d\u00b2 : Fintype n\ninst\u271d\u00b9 : DecidableEq m\ninst\u271d : DecidableEq n\nA : Matrix m n \u211d\n\u22a2 sorry A \u2264 \u221a\u2191(Fintype.card m) * \u2016A\u2016",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/10FunctionsAndOperators.lean#L297"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2025-08-06T00:45:33+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "f235e4faaff3d446bea39c57ad68cad3213a8c1d1d62aa819e9066ceb02b9a47"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "4fadf20b58f84ebd2332c904cc7298c13bfbe5f7",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Compfiles/Usa1993P3.lean",
        "start_line": 110,
        "start_column": 25,
        "end_line": 110,
        "end_column": 30
      },
      "debug_info": {
        "goal": "f : \u2191(Set.Icc 0 1) \u2192 \u211d\nx\u271d : \u211d\nhx : 0 \u2264 x\u271d \u2227 x\u271d \u2264 1\nh1 : \u2200 (x : \u2191(Set.Icc 0 1)), 0 \u2264 f x\nh2 : f 1 = 1\nh3 : \u2200 (x y : \u2191(Set.Icc 0 1)) (h : \u2191x + \u2191y \u2208 Set.Icc 0 1), f x + f y \u2264 f \u27e8\u2191x + \u2191y, h\u27e9\nh4 : \u2200 (x : \u2191(Set.Icc 0 1)), 1 - \u2191x \u2208 Set.Icc 0 1\nh5 : \u2200 (x : \u2191(Set.Icc 0 1)), f x + f \u27e81 - \u2191x, \u22ef\u27e9 \u2264 1\nh6 : \u2200 (x : \u2191(Set.Icc 0 1)), f x \u2264 1\nh8 : \u2200 (n : \u2115) (x : \u2191(Set.Icc 0 (1 / 2 ^ n))), 2 ^ n * \u2191x \u2208 Set.Icc 0 1\nn : \u2115\nx : \u2191(Set.Icc 0 (1 / 2 ^ n))\n\u22a2 \u2191x \u2208 Set.Icc 0 1",
        "url": "https://github.com/dwrensha/compfiles/blob/4fadf20b58f84ebd2332c904cc7298c13bfbe5f7/Compfiles/Usa1993P3.lean#L110"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2025-07-12T11:07:23-04:00",
        "inclusion_date": "2025-07-30T19:16:21.692704+00:00"
      },
      "id": "c857bbbdfd38b5b6b82e483c76b3d97becae9bc9585e096a8d864f419b374a93"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "generalized-trace",
        "commit": "5c479c65ad77d0b6ad82e6622abd2ad85e349c7d",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/Classification/GeneralizedTrace.lean",
        "start_line": 198,
        "start_column": 51,
        "end_line": 198,
        "end_column": 56
      },
      "debug_info": {
        "goal": "\u22a2 Function.Injective TBB",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/5c479c65ad77d0b6ad82e6622abd2ad85e349c7d/Foundation/ProvabilityLogic/Classification/GeneralizedTrace.lean#L198"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-09-16T04:05:37+09:00",
        "inclusion_date": "2025-09-17T03:36:03.416511+00:00"
      },
      "id": "daf0d40a0e2a9101ee8886e105ac47b5fb83ca2f726b0380f2f6ac26f4b7f840"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "a0242db40daf0c3a31d08fc70ebba2952165de6c",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/RestrictedWeakType.lean",
        "start_line": 26,
        "start_column": 85,
        "end_line": 26,
        "end_column": 90
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nq q' : NNReal\nF : Set X\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhq : q \u2208 Ioc 1 2\nhqq' : q.HolderConjugate q'\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts a)\nf : X \u2192 \u2102\nhmf : Measurable f\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\n\u22a2 HasRestrictedWeakType (carlesonOperator K) (\u2191q) (\u2191q') volume volume \u2191(C10_0_1 a q)",
        "url": "https://github.com/fpvandoorn/carleson/blob/a0242db40daf0c3a31d08fc70ebba2952165de6c/Carleson/TwoSidedCarleson/RestrictedWeakType.lean#L26"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-07-08T17:45:26+02:00",
        "inclusion_date": "2025-09-08T16:13:18.779687+00:00"
      },
      "id": "ef814ab307a31bf6cb25e9e4a2bc0bd933bdf6327612bf39648c0382c8489740"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-hardly-ramified",
        "commit": "60be88a841fa232b563ea16600befe5efbfb3d07",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FLT/Basic/Reductions.lean",
        "start_line": 380,
        "start_column": 95,
        "end_line": 380,
        "end_column": 100
      },
      "debug_info": {
        "goal": "P : FLT.FreyPackage\n\u22a2 \u00acIsSimpleModule (ZMod (FLT.FreyPackage.p P))\n      (torsionGaloisRepresentation (FLT.FreyPackage.freyCurve P) (FLT.FreyPackage.p P) FLT.Qbar).asModule",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/60be88a841fa232b563ea16600befe5efbfb3d07/FLT/Basic/Reductions.lean#L380"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-08-21T11:29:27+01:00",
        "inclusion_date": "2025-09-18T04:05:26.332171+00:00"
      },
      "id": "3a7634fb801e26489325d5014416255c5724cc8354b12d30fc99f8e37afc87a5"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/batteries",
        "branch": "docs",
        "commit": "514c6039d70f6e63fb7bc3ab853adeb71bc56305",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "BatteriesTest/lintsimp.lean",
        "start_line": 37,
        "start_column": 64,
        "end_line": 37,
        "end_column": 69
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\ninst\u271d : Mul \u03b1\na x y : \u03b1\u1d50\u1d52\u1d56\n\u22a2 SemiconjBy a.unop y.unop x.unop \u2194 SemiconjBy a x y",
        "url": "https://github.com/leanprover-community/batteries/blob/514c6039d70f6e63fb7bc3ab853adeb71bc56305/BatteriesTest/lintsimp.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "8a7dcd08b95f",
        "blame_date": "2022-12-18T15:51:52-05:00",
        "inclusion_date": "2025-05-01T23:47:48.985035+00:00"
      },
      "id": "8b612b64eaaca2b8994fc9fc4c141fc33150ec5b80b48fbc6853e07f286e62ff"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "d279b56adead908de8bd086ea46b82895cf4f12c",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 30,
        "start_column": 12,
        "end_line": 30,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case fst\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : MyProd \u03b1 \u03b2\n\u22a2 p.fst = q.fst",
        "url": "https://github.com/leanprover-community/aesop/blob/d279b56adead908de8bd086ea46b82895cf4f12c/AesopTest/ExtScript.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-04-30T23:33:22.583043+00:00"
      },
      "id": "a51721b91b0b2117510c4cc666527c8e120c12b15fa99e03efab91ba8013b48e"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 126,
        "start_column": 8,
        "end_line": 126,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case refine_2.refine_1\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\ni : \u03b1\nhi : i \u2208 s\n\u22a2 MeasurableSet {\u03c9 | X \u03c9 i}",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L126"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "2d1ba1571cdeea5db20afd81a9e33e81b25c72235079eeeba0fbfcd78bcbaede"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "f4441d7327caa75ae7879ecfda33fc60ab0cf17e",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 7240,
        "start_column": 69,
        "end_line": 7240,
        "end_column": 74
      },
      "debug_info": {
        "goal": "\u03bd : \u211d \u2192 \u211d\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\nc_close : \u211d\nc_close_pos : c_close > 0\nh_close :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 (\u03b5 : \u211d),\n        0 < \u03b5 \u2192 \u03b5 < 1 \u2192 2 < X * \u03b5 \u2192 \u2016SmoothedChebyshev \u03bd \u03b5 X - \u2191(ChebyshevPsi X)\u2016 \u2264 c_close * \u03b5 * X * Real.log X\n\u03b5_main C_main : \u211d\n\u03b5_main_pos : 0 < \u03b5_main\nC_main_pos : 0 < C_main\nh_main : \u2200 \u03b5 \u2208 Ioo 0 \u03b5_main, \u2016MellinTransform (fun x => \u2191(Smooth1 \u03bd \u03b5 x)) 1 - 1\u2016 \u2264 C_main * \u03b5\nA C_bnd : \u211d\nC_bnd_pos : 0 < C_bnd\nA_in_Ioc : A \u2208 Ioc 0 (1 / 2)\nzeta_bnd : LogDerivZetaHasBound A C_bnd\nholo1 :\n  \u2200 (T : \u211d),\n    3 \u2264 T \u2192\n      HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (Icc (1 - A / Real.log T ^ 9) 2 \u00d7\u2102 Icc (-T) T \\ {1})\n\u03c3\u2082' : \u211d\n\u03c3\u2082 : \u211d := max \u03c3\u2082' (1 / 2)\n\u03c3\u2082_pos : 0 < \u03c3\u2082\n\u03c3\u2082_lt_one : \u03c3\u2082 < 1\nholo2 : HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (uIcc \u03c3\u2082 2 \u00d7\u2102 uIcc (-3) 3 \\ {1})\nc\u2081 : \u211d\nc\u2081pos : c\u2081 > 0\nhc\u2081 : \u2200 (\u03b5 : \u211d), 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2081 \u03bd \u03b5 X T\u2016 \u2264 c\u2081 * X * Real.log X / (\u03b5 * T)\nc\u2082 : \u211d\nc\u2082pos : 0 < c\u2082\nhc\u2082 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2082 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2082 * X / (\u03b5 * T)\nc\u2083 : \u211d\nc\u2083pos : 0 < c\u2083\nhc\u2083 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2083 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2083 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2085 : \u211d\nc\u2085pos : 0 < c\u2085\nhc\u2085 : \u2200 (X : \u211d), 3 < X \u2192 \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2016I\u2085 \u03bd \u03b5 X \u03c3\u2082\u2016 \u2264 c\u2085 * X ^ \u03c3\u2082 / \u03b5\nc\u2087 : \u211d\nc\u2087pos : 0 < c\u2087\nhc\u2087 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2087 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2087 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2088 : \u211d\nc\u2088pos : 0 < c\u2088\nhc\u2088 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2088 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2088 * X / (\u03b5 * T)\nc\u2089 : \u211d\nc\u2089pos : c\u2089 > 0\nhc\u2089 : \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2089 \u03bd \u03b5 X T\u2016 \u2264 c\u2089 * X * Real.log X / (\u03b5 * T)\nc\u2084 : \u211d\nc\u2084pos : 0 \u2264 c\u2084\nTlb\u2084 : \u211d\nTlb\u2084bnd : 3 < Tlb\u2084\nhc\u2084 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              Tlb\u2084 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2084 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 \u2264 c\u2084 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2086 : \u211d\nc\u2086pos : 0 \u2264 c\u2086\nTlb\u2086 : \u211d\nTlb\u2086bnd : 3 < Tlb\u2086\nhc\u2086 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              Tlb\u2086 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2086 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 \u2264 c\u2086 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nC' : \u211d := c_close + C_main\nC'' : \u211d := c\u2081 + c\u2082 + c\u2088 + c\u2089\nC''' : \u211d := c\u2083 + c\u2084 + c\u2086 + c\u2087\nc : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\n\u03b5x : \u211d \u2192 \u211d := fun x => Real.exp (-c * Real.log x ^ (1 / 10))\nTx : \u211d \u2192 \u211d := fun x => Real.exp (2 * c * Real.log x ^ (1 / 10))\neventually_\u03b5x_lt_one : \u2200\u1da0 (x : \u211d) in atTop, \u03b5x x < 1\neventually_2_lt : \u2200\u1da0 (x : \u211d) in atTop, 2 < x * \u03b5x x\neventually_T_gt_3 : \u2200\u1da0 (x : \u211d) in atTop, 3 < Tx x\neventually_T_gt_Tlb\u2084 : \u2200\u1da0 (x : \u211d) in atTop, Tlb\u2084 < Tx x\n\u22a2 \u2200\u1da0 (x : \u211d) in atTop, Tlb\u2086 < Tx x",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/f4441d7327caa75ae7879ecfda33fc60ab0cf17e/PrimeNumberTheoremAnd/MediumPNT.lean#L7240"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-07-21T22:55:17-04:00",
        "inclusion_date": "2025-07-22T23:05:23.619594+00:00"
      },
      "id": "195edcaec32ed729770cbb7a39c7d2c6e7f68e7b7114f5cf205835e3fbf0fd93"
    },
    {
      "repo": {
        "remote": "https://github.com/emilyriehl/infinity-cosmos",
        "branch": "main",
        "commit": "7fa2a3a7a86ac59ac1199ef98e16b09eda86bd8a",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean",
        "start_line": 133,
        "start_column": 50,
        "end_line": 133,
        "end_column": 55
      },
      "debug_info": {
        "goal": "A : SSet\nf\u271d g\u271d f g h : A.obj (Opposite.op (SimplexCategory.mk 1))\nH\u2081 : @SSet.HomotopyL A f g\nH\u2082 : @SSet.HomotopyL A f h\n\u03c3 : (horn 3 1).toSSet \u27f6 A := \u22ef\n\u03c4 : A.obj (Opposite.op (SimplexCategory.mk 3)) := \u22ef\n\u22a2 SimplicialObject.\u03b4 A 0 \u03c4 =\n    CategoryStruct.comp (SimplicialObject.\u03b4 A 0) (CategoryStruct.comp (SimplicialObject.\u03c3 A 0) (SimplicialObject.\u03c3 A 0))\n      g",
        "url": "https://github.com/emilyriehl/infinity-cosmos/blob/7fa2a3a7a86ac59ac1199ef98e16b09eda86bd8a/InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean#L133"
      },
      "metadata": {
        "blame_email_hash": "f0d6831918ab",
        "blame_date": "2024-12-17T23:14:43+01:00",
        "inclusion_date": "2025-06-28T03:14:00.578727+00:00"
      },
      "id": "8dbbf5e9cba1c4206de60f0df1de4edce2398d69be380937fc271f438e5fa587"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "8dc6868e6d5a673620c1d9759b66f3c01d9543d7",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Playground/PIH/Ch05/LawfulS5.lean",
        "start_line": 88,
        "start_column": 6,
        "end_line": 88,
        "end_column": 11
      },
      "debug_info": {
        "goal": "n : Nat\nhn : 97 \u2264 n \u2227 n \u2264 122\nu : UInt32 := UInt32.ofNatLT n \u22ef\n\u22a2 97 \u2264 UInt32.ofNatLT n \u22ef \u2227 UInt32.ofNatLT n \u22ef \u2264 122",
        "url": "https://github.com/lean-ja/lean-by-example/blob/8dc6868e6d5a673620c1d9759b66f3c01d9543d7/Playground/PIH/Ch05/LawfulS5.lean#L88"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2025-07-18T13:45:25+09:00",
        "inclusion_date": "2025-07-30T23:19:43.539577+00:00"
      },
      "id": "36f451831ec9d8c4d68c5ac9b4c63e8dec0a20625003f6c213570e3874e33c54"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "58ff9ddb3f6bc3860fb0316cc210fca5d488ba62",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PFR/ApproxHomPFR.lean",
        "start_line": 238,
        "start_column": 99,
        "end_line": 238,
        "end_column": 104
      },
      "debug_info": {
        "goal": "G : Type u_1\nG' : Type u_2\ninst\u271d\u2075 : AddCommGroup G\ninst\u271d\u2074 : Fintype G\ninst\u271d\u00b3 : AddCommGroup G'\ninst\u271d\u00b2 : Fintype G'\ninst\u271d\u00b9 : Module (ZMod 2) G\ninst\u271d : Module (ZMod 2) G'\nf : G \u2192 G'\nK : \u211d\nhK : K > 0\nhf : \u2191(Nat.card G) ^ 2 / K \u2264 \u2191(Nat.card \u2191{x | f (x.1 + x.2) = f x.1 + f x.2})\n\u22a2 \u2203 \u03c6'', \u2191(Nat.card \u2191{x | f x = \u03c6'' x}) \u2265 (\u2191(Nat.card G) / (2 ^ 144 * K ^ 122) - 1) / 2",
        "url": "https://github.com/teorth/pfr/blob/58ff9ddb3f6bc3860fb0316cc210fca5d488ba62/PFR/ApproxHomPFR.lean#L238"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2025-05-01T23:21:54-07:00",
        "inclusion_date": "2025-07-05T05:06:27.171280+00:00"
      },
      "id": "65cdcc51dc88ab952ee449da24a70e257b20f4d80fb4ca079760f80f7173f7e0"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "ocfnash/concrete_g2",
        "commit": "df98409817547fdb6b54dab7643a9557437c0462",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/LinearAlgebra/RootSystem/Finite/G2.lean",
        "start_line": 613,
        "start_column": 4,
        "end_line": 613,
        "end_column": 9
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\nR : Type u_2\nM : Type u_3\nN : Type u_4\ninst\u271d\u2075 : CommRing R\ninst\u271d\u2074 : AddCommGroup M\ninst\u271d\u00b3 : Module R M\ninst\u271d\u00b2 : AddCommGroup N\ninst\u271d\u00b9 : Module R N\nP : RootPairing \u03b9 R M N\ninst\u271d : CharZero R\ni j : Fin 12\nhij : failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)\n\u22a2 failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/df98409817547fdb6b54dab7643a9557437c0462/Mathlib/LinearAlgebra/RootSystem/Finite/G2.lean#L613"
      },
      "metadata": {
        "blame_email_hash": "1b004c50e78f",
        "blame_date": "2025-06-18T13:01:58+01:00",
        "inclusion_date": "2025-06-19T03:05:54.574593+00:00"
      },
      "id": "e9641285519925f214841e6a4dde522f219cb2afbe3e95a6d0425772e3aa245b"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 74,
        "start_column": 4,
        "end_line": 74,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type u_1\nS : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : CommRing S\nT : Type u_3\ninst\u271d : CommRing T\ng : S \u2192+* T\nf : R \u2192+* S\n\u22a2 \u2200 (x y : R), g (f (x + y)) = g (f x) + g (f y)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L74"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "24dc415389c197fd911331612d71f623742b9852b697fe3238f731e6ad543d44"
    },
    {
      "repo": {
        "remote": "https://github.com/nomeata/loogle",
        "branch": "master",
        "commit": "15beac7f2a5913571cba016e4b87fed907c54f7d",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "Tests.lean",
        "start_line": 169,
        "start_column": 82,
        "end_line": 169,
        "end_column": 87
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : Mul R\ninst\u271d : @LinearPatternTest.Star R\nx : R\n\u22a2 @LinearPatternTest.Star.star R inst\u271d x * x = x * @LinearPatternTest.Star.star R inst\u271d x",
        "url": "https://github.com/nomeata/loogle/blob/15beac7f2a5913571cba016e4b87fed907c54f7d/Tests.lean#L169"
      },
      "metadata": {
        "blame_email_hash": "1e9dd229978a",
        "blame_date": "2023-11-11T14:02:18+01:00",
        "inclusion_date": "2025-09-17T04:17:32.820406+00:00"
      },
      "id": "3b0671de680c782e6e405919f77d37f38a4b0c3297c7972ebe5a76eac456f9ee"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "duplex-sponge-fs",
        "commit": "0fc5523909130c6100b03cf4a7afb3566f27e485",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/NonBinaryField/KoalaBear.lean",
        "start_line": 160,
        "start_column": 2,
        "end_line": 160,
        "end_column": 7
      },
      "debug_info": {
        "goal": "bits : Fin (KoalaBear.twoAdicity + 1)\n\u22a2 KoalaBear.twoAdicGenerators[bits] ^ 2 ^ \u2191bits = 1",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0fc5523909130c6100b03cf4a7afb3566f27e485/ArkLib/Data/FieldTheory/NonBinaryField/KoalaBear.lean#L160"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-09-12T02:34:43-04:00",
        "inclusion_date": "2025-09-18T04:30:57.445731+00:00"
      },
      "id": "b5cf422aae029ac4e6cd459907342957cb041d7e1964800b85eb6ed7b49b2996"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "StringsCharges",
        "commit": "25c552a2c25a922bf5dbdb120a212ea73b365f5b",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "PhysLean/ClassicalMechanics/RigidBody/SolidSphere.lean",
        "start_line": 66,
        "start_column": 2,
        "end_line": 66,
        "end_column": 7
      },
      "debug_info": {
        "goal": "d : \u2115\nm R : NNReal\nhr : R \u2260 0\n\u22a2 centerOfMass (RigidBody.solidSphere d.succ m R) = 0",
        "url": "https://github.com/HEPLean/PhysLean/blob/25c552a2c25a922bf5dbdb120a212ea73b365f5b/PhysLean/ClassicalMechanics/RigidBody/SolidSphere.lean#L66"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-09-11T08:59:23+01:00",
        "inclusion_date": "2025-09-17T03:53:50.079672+00:00"
      },
      "id": "3f9f44bdb1ca388bb20a250c0ebc87e00877c844da18c92caf3221fc069e6049"
    },
    {
      "repo": {
        "remote": "https://github.com/ufmg-smite/lean-smt",
        "branch": "main",
        "commit": "98b12d984f8c21a99abfb8b69f12fe243beaf7c6",
        "lean_version": "v4.16.0"
      },
      "location": {
        "path": "Smt/Reconstruct/Rat/Core.lean",
        "start_line": 638,
        "start_column": 2,
        "end_line": 638,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a : Rat\nh : 0 \u2264 a\n\u22a2 a.abs = a",
        "url": "https://github.com/ufmg-smite/lean-smt/blob/98b12d984f8c21a99abfb8b69f12fe243beaf7c6/Smt/Reconstruct/Rat/Core.lean#L638"
      },
      "metadata": {
        "blame_email_hash": "a29bc6f92c6c",
        "blame_date": "2025-05-03T21:48:26-07:00",
        "inclusion_date": "2025-05-05T00:05:16.483689+00:00"
      },
      "id": "91357f31ec4ecdaef28d166db2e123b2398377f8b29fb39f3341ab6f8cb72287"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 134,
        "start_column": 74,
        "end_line": 134,
        "end_column": 79
      },
      "debug_info": {
        "goal": "a : \u2115\nh\u2080 : a = \u2211 k \u2208 divisors 500, k\n\u22a2 \u2211 k \u2208 {x \u2208 a.divisors | Nat.Prime x}, k = 25",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L134"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-05T03:31:37.797708+00:00"
      },
      "id": "c64e8ae41ee8d7d3c9ff86869731d6020e224b1273035eeb4f30300da75e69f1"
    },
    {
      "repo": {
        "remote": "https://github.com/lecopivo/SciLean",
        "branch": "bump-v4.19.0-rc2",
        "commit": "612daaaa9f63016cd8d06df8e634e4d858d26d8e",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "SciLean/Modules/Prob/Erased.lean",
        "start_line": 18,
        "start_column": 63,
        "end_line": 18,
        "end_column": 68
      },
      "debug_info": {
        "goal": "\u03b1 : Type\nx y : Erased \u03b1\n\u22a2 \u2191x = \u2191y \u2192 x = y",
        "url": "https://github.com/lecopivo/SciLean/blob/612daaaa9f63016cd8d06df8e634e4d858d26d8e/SciLean/Modules/Prob/Erased.lean#L18"
      },
      "metadata": {
        "blame_email_hash": "c7c59fe619b9",
        "blame_date": "2024-02-08T10:58:37-05:00",
        "inclusion_date": "2025-05-29T03:10:06.182872+00:00"
      },
      "id": "d95d2b28923d5acab74c10e0cd02c67d503d88c285e1d739c64a6d33a604fe2a"
    },
    {
      "repo": {
        "remote": "https://github.com/cmu-l3/llmlean",
        "branch": "kimina-pr",
        "commit": "126a6b2af37727c4d81bb49f6af6b354a380145e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LLMleanTest/Examples2.lean",
        "start_line": 101,
        "start_column": 2,
        "end_line": 101,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 range exp = {y | y > 0}",
        "url": "https://github.com/cmu-l3/llmlean/blob/126a6b2af37727c4d81bb49f6af6b354a380145e/LLMleanTest/Examples2.lean#L101"
      },
      "metadata": {
        "blame_email_hash": "3ab0971ac342",
        "blame_date": "2024-07-23T21:27:45-04:00",
        "inclusion_date": "2025-06-11T03:39:01.065377+00:00"
      },
      "id": "7a2823df5995ac6388718b829d36043142fb6962f9524a665daf219556c44255"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/NNG4",
        "branch": "main",
        "commit": "3558f5bfb6c7ec5528498c498ed097c7f772d24f",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "Game/Levels/Addition/L02succ_add.lean",
        "start_line": 35,
        "start_column": 4,
        "end_line": 35,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case zero\nb : \u2115\n\u22a2 succ 0 + b = (0 + b).succ",
        "url": "https://github.com/leanprover-community/NNG4/blob/3558f5bfb6c7ec5528498c498ed097c7f772d24f/Game/Levels/Addition/L02succ_add.lean#L35"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2023-09-25T06:36:24+01:00",
        "inclusion_date": "2025-09-08T18:41:12.023523+00:00"
      },
      "id": "8f1494538312a46bcabc0084fc4c856e30e0d6b865bbfc33994b2d257cdc80af"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_01.lean",
        "start_line": 186,
        "start_column": 74,
        "end_line": 186,
        "end_column": 79
      },
      "debug_info": {
        "goal": "n : \u2115\nx : \u211d\nhxge : x \u2265 \u2191n\nhxlt : x < \u2191n + 1\n\u22a2 \u2211' (m : \u2191(S\u2081 x)), (\u2191\u2191m)\u207b\u00b9 \u2264 \u220f p \u2208 \u230ax\u230b.natAbs.primesBelow, \u2211' (k : \u2115), (\u2191p ^ k)\u207b\u00b9",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_01.lean#L186"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2025-08-30T22:25:38+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "74e91209cd4b841556b18e7382851a8e3bc8ea7a98e63a5c419b0f51be289e1d"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/10FunctionsAndOperators.lean",
        "start_line": 297,
        "start_column": 48,
        "end_line": 297,
        "end_column": 53
      },
      "debug_info": {
        "goal": "m : Type u_4\nn : Type u_5\ninst\u271d\u00b3 : Fintype m\ninst\u271d\u00b2 : Fintype n\ninst\u271d\u00b9 : DecidableEq m\ninst\u271d : DecidableEq n\nA : Matrix m n \u211d\n\u22a2 sorry A \u2264 \u221a\u2191(Fintype.card m) * sorry A",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/10FunctionsAndOperators.lean#L297"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2025-08-06T00:45:33+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "141128477f1875f99790aca1995b4574e821540e95012f828992ce56b735e016"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "4fadf20b58f84ebd2332c904cc7298c13bfbe5f7",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Compfiles/Usa1993P3.lean",
        "start_line": 116,
        "start_column": 8,
        "end_line": 116,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case succ\nf : \u2191(Set.Icc 0 1) \u2192 \u211d\nx\u271d : \u211d\nhx : 0 \u2264 x\u271d \u2227 x\u271d \u2264 1\nh1 : \u2200 (x : \u2191(Set.Icc 0 1)), 0 \u2264 f x\nh2 : f 1 = 1\nh3 : \u2200 (x y : \u2191(Set.Icc 0 1)) (h : \u2191x + \u2191y \u2208 Set.Icc 0 1), f x + f y \u2264 f \u27e8\u2191x + \u2191y, h\u27e9\nh4 : \u2200 (x : \u2191(Set.Icc 0 1)), 1 - \u2191x \u2208 Set.Icc 0 1\nh5 : \u2200 (x : \u2191(Set.Icc 0 1)), f x + f \u27e81 - \u2191x, \u22ef\u27e9 \u2264 1\nh6 : \u2200 (x : \u2191(Set.Icc 0 1)), f x \u2264 1\nh8 : \u2200 (n : \u2115) (x : \u2191(Set.Icc 0 (1 / 2 ^ n))), 2 ^ n * \u2191x \u2208 Set.Icc 0 1\nn : \u2115\nih : \u2200 (x : \u2191(Set.Icc 0 (1 / 2 ^ n))), 2 ^ n * f \u27e8\u2191x, \u22ef\u27e9 \u2264 f \u27e82 ^ n * \u2191x, \u22ef\u27e9\nx : \u2191(Set.Icc 0 (1 / 2 ^ (n + 1)))\n\u22a2 2 ^ (n + 1) * f \u27e8\u2191x, \u22ef\u27e9 \u2264 f \u27e82 ^ (n + 1) * \u2191x, \u22ef\u27e9",
        "url": "https://github.com/dwrensha/compfiles/blob/4fadf20b58f84ebd2332c904cc7298c13bfbe5f7/Compfiles/Usa1993P3.lean#L116"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2025-07-12T11:07:23-04:00",
        "inclusion_date": "2025-07-30T19:16:21.692704+00:00"
      },
      "id": "24ed096af551fe66c3fedabdf73a11240e3850ca94f285c83d98b402f6f84f3f"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "generalized-trace",
        "commit": "5c479c65ad77d0b6ad82e6622abd2ad85e349c7d",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/Classification/GeneralizedTrace.lean",
        "start_line": 234,
        "start_column": 2,
        "end_line": 234,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nM : Model\nw : M.World\nX : Finset \u03b1\n\u03b9 : \u03b1 \u2192 Formula \u2115\n\u22a2 (w \u22a7 \u2a55 i \u2208 X, \u03b9 i) \u2194 \u2200 i \u2208 X, w \u22a7 \u03b9 i",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/5c479c65ad77d0b6ad82e6622abd2ad85e349c7d/Foundation/ProvabilityLogic/Classification/GeneralizedTrace.lean#L234"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-09-16T04:05:37+09:00",
        "inclusion_date": "2025-09-17T03:36:03.416511+00:00"
      },
      "id": "cd7b797f0f16d3c2ff750a3f9d36f3b393fb558d58c4358c95fe7d46b75c791f"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "a0242db40daf0c3a31d08fc70ebba2952165de6c",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/RestrictedWeakType.lean",
        "start_line": 39,
        "start_column": 2,
        "end_line": 39,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nq q' : NNReal\nF : Set X\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhq : q \u2208 Ioo 1 2\nhqq' : q.HolderConjugate q'\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts a)\nf : X \u2192 \u2102\nhmf : Measurable f\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\n\u22a2 HasStrongType (carlesonOperator K) (\u2191q) (\u2191q') volume volume \u2191(C10_0_1 a q)",
        "url": "https://github.com/fpvandoorn/carleson/blob/a0242db40daf0c3a31d08fc70ebba2952165de6c/Carleson/TwoSidedCarleson/RestrictedWeakType.lean#L39"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-07-08T17:45:26+02:00",
        "inclusion_date": "2025-09-08T16:13:18.779687+00:00"
      },
      "id": "25a5dba11db667253c1615225d58cf91287caafb14316ad8a5662a3a5324f357"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-hardly-ramified",
        "commit": "60be88a841fa232b563ea16600befe5efbfb3d07",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FLT/GlobalLanglandsConjectures/GLzero.lean",
        "start_line": 63,
        "start_column": 8,
        "end_line": 63,
        "end_column": 13
      },
      "debug_info": {
        "goal": "\u03c1 : Weight 0\nc : \u2102\n\u22a2 \u2200 (y : GL (Fin 0) \u211d) (s : Set \u2102), IsOpen ((fun x => c) \u207b\u00b9' s)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/60be88a841fa232b563ea16600befe5efbfb3d07/FLT/GlobalLanglandsConjectures/GLzero.lean#L63"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-08-02T17:00:19+01:00",
        "inclusion_date": "2025-09-18T04:05:26.332171+00:00"
      },
      "id": "49e78bef2a21c566b65b40ed38aad3edfeb01ae927fabf145e821decc81aac37"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/batteries",
        "branch": "docs",
        "commit": "c3553c06247678bde54544e88d21636d16cd0579",
        "lean_version": "v4.24.0-rc1"
      },
      "location": {
        "path": "BatteriesTest/lintsimp.lean",
        "start_line": 37,
        "start_column": 64,
        "end_line": 37,
        "end_column": 69
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\ninst\u271d : Mul \u03b1\na x y : @MulOpposite \u03b1\n\u22a2 @SemiconjBy \u03b1 inst\u271d (@MulOpposite.unop \u03b1 a) (@MulOpposite.unop \u03b1 y) (@MulOpposite.unop \u03b1 x) \u2194\n    @SemiconjBy (@MulOpposite \u03b1) (@MulOpposite.instMul \u03b1 inst\u271d) a x y",
        "url": "https://github.com/leanprover-community/batteries/blob/c3553c06247678bde54544e88d21636d16cd0579/BatteriesTest/lintsimp.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "8a7dcd08b95f",
        "blame_date": "2022-12-18T15:51:52-05:00",
        "inclusion_date": "2025-09-19T03:33:33.814695+00:00"
      },
      "id": "a1b55a2d33ffdc334354a81b472ac7e11bb1ac17413aa9ac8f5df844e2dac20a"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "d279b56adead908de8bd086ea46b82895cf4f12c",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 30,
        "start_column": 12,
        "end_line": 30,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case snd\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : MyProd \u03b1 \u03b2\n\u22a2 p.snd = q.snd",
        "url": "https://github.com/leanprover-community/aesop/blob/d279b56adead908de8bd086ea46b82895cf4f12c/AesopTest/ExtScript.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-04-30T23:33:22.583043+00:00"
      },
      "id": "e7c40d7381ef8a3bf20eb5f2ad02ec504ba7d996b43e400e5a0182d0667e53aa"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 127,
        "start_column": 8,
        "end_line": 127,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case refine_2.refine_2\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\ni : \u03b1\nhi : i \u2208 s\n\u22a2 MeasurableSet {\u03c9 | Y \u03c9 i}",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L127"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "bc51c379889ca30374c7178ae2623e99043d06fd3c005f816ba5bebedcd3509a"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "b5313cfd2308dfb6b98d7321bf26243984e4d291",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 7234,
        "start_column": 69,
        "end_line": 7234,
        "end_column": 74
      },
      "debug_info": {
        "goal": "\u03bd : \u211d \u2192 \u211d\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\nc_close : \u211d\nc_close_pos : c_close > 0\nh_close :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 (\u03b5 : \u211d),\n        0 < \u03b5 \u2192 \u03b5 < 1 \u2192 2 < X * \u03b5 \u2192 \u2016SmoothedChebyshev \u03bd \u03b5 X - \u2191(ChebyshevPsi X)\u2016 \u2264 c_close * \u03b5 * X * Real.log X\n\u03b5_main C_main : \u211d\n\u03b5_main_pos : 0 < \u03b5_main\nC_main_pos : 0 < C_main\nh_main : \u2200 \u03b5 \u2208 Ioo 0 \u03b5_main, \u2016MellinTransform (fun x => \u2191(Smooth1 \u03bd \u03b5 x)) 1 - 1\u2016 \u2264 C_main * \u03b5\nA C_bnd : \u211d\nC_bnd_pos : 0 < C_bnd\nA_in_Ioc : A \u2208 Ioc 0 (1 / 2)\nzeta_bnd : LogDerivZetaHasBound A C_bnd\nholo1 :\n  \u2200 (T : \u211d),\n    3 \u2264 T \u2192\n      HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (Icc (1 - A / Real.log T ^ 9) 2 \u00d7\u2102 Icc (-T) T \\ {1})\n\u03c3\u2082' : \u211d\n\u03c3\u2082 : \u211d := max \u03c3\u2082' (1 / 2)\n\u03c3\u2082_pos : 0 < \u03c3\u2082\n\u03c3\u2082_lt_one : \u03c3\u2082 < 1\nholo2 : HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (uIcc \u03c3\u2082 2 \u00d7\u2102 uIcc (-3) 3 \\ {1})\nc\u2081 : \u211d\nc\u2081pos : c\u2081 > 0\nhc\u2081 : \u2200 (\u03b5 : \u211d), 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2081 \u03bd \u03b5 X T\u2016 \u2264 c\u2081 * X * Real.log X / (\u03b5 * T)\nc\u2082 : \u211d\nc\u2082pos : 0 < c\u2082\nhc\u2082 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2082 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2082 * X / (\u03b5 * T)\nc\u2083 : \u211d\nc\u2083pos : 0 < c\u2083\nhc\u2083 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2083 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2083 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2085 : \u211d\nc\u2085pos : 0 < c\u2085\nhc\u2085 : \u2200 (X : \u211d), 3 < X \u2192 \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2016I\u2085 \u03bd \u03b5 X \u03c3\u2082\u2016 \u2264 c\u2085 * X ^ \u03c3\u2082 / \u03b5\nc\u2087 : \u211d\nc\u2087pos : 0 < c\u2087\nhc\u2087 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2087 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2087 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2088 : \u211d\nc\u2088pos : 0 < c\u2088\nhc\u2088 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2088 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2088 * X / (\u03b5 * T)\nc\u2089 : \u211d\nc\u2089pos : c\u2089 > 0\nhc\u2089 : \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2089 \u03bd \u03b5 X T\u2016 \u2264 c\u2089 * X * Real.log X / (\u03b5 * T)\nc\u2084 : \u211d\nc\u2084pos : 0 \u2264 c\u2084\nTlb\u2084 : \u211d\nTlb\u2084bnd : 3 < Tlb\u2084\nhc\u2084 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              Tlb\u2084 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2084 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 \u2264 c\u2084 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2086 : \u211d\nc\u2086pos : 0 \u2264 c\u2086\nTlb\u2086 : \u211d\nTlb\u2086bnd : 3 < Tlb\u2086\nhc\u2086 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              Tlb\u2086 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2086 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 \u2264 c\u2086 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\n\u03b5x : \u211d \u2192 \u211d := fun x => Real.exp (-c * Real.log x ^ (1 / 10))\nTx : \u211d \u2192 \u211d := fun x => Real.exp (2 * c * Real.log x ^ (1 / 10))\neventually_\u03b5x_lt_one : \u2200\u1da0 (x : \u211d) in atTop, \u03b5x x < 1\neventually_2_lt : \u2200\u1da0 (x : \u211d) in atTop, 2 < x * \u03b5x x\neventually_T_gt_3 : \u2200\u1da0 (x : \u211d) in atTop, 3 < Tx x\n\u22a2 \u2200\u1da0 (x : \u211d) in atTop, Tlb\u2084 < Tx x",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/b5313cfd2308dfb6b98d7321bf26243984e4d291/PrimeNumberTheoremAnd/MediumPNT.lean#L7234"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-07-21T22:55:17-04:00",
        "inclusion_date": "2025-07-22T23:27:42.532828+00:00"
      },
      "id": "605fbaf2e2a2670a17116327ca788d0f8803594bfc79d1b85423f0187c816dac"
    },
    {
      "repo": {
        "remote": "https://github.com/emilyriehl/infinity-cosmos",
        "branch": "main",
        "commit": "7fa2a3a7a86ac59ac1199ef98e16b09eda86bd8a",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean",
        "start_line": 134,
        "start_column": 36,
        "end_line": 134,
        "end_column": 41
      },
      "debug_info": {
        "goal": "A : SSet\nf\u271d g\u271d f g h : A.obj (Opposite.op (SimplexCategory.mk 1))\nH\u2081 : @SSet.HomotopyL A f g\nH\u2082 : @SSet.HomotopyL A f h\n\u03c3 : (horn 3 1).toSSet \u27f6 A := \u22ef\n\u03c4 : A.obj (Opposite.op (SimplexCategory.mk 3)) := \u22ef\n\u03c4\u2080 :\n  SimplicialObject.\u03b4 A 0 \u03c4 =\n    CategoryStruct.comp (SimplicialObject.\u03b4 A 0) (CategoryStruct.comp (SimplicialObject.\u03c3 A 0) (SimplicialObject.\u03c3 A 0))\n      g\n\u22a2 SimplicialObject.\u03b4 A 2 \u03c4 = @SSet.HomotopyL.simplex A f h H\u2082",
        "url": "https://github.com/emilyriehl/infinity-cosmos/blob/7fa2a3a7a86ac59ac1199ef98e16b09eda86bd8a/InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean#L134"
      },
      "metadata": {
        "blame_email_hash": "f0d6831918ab",
        "blame_date": "2024-12-17T23:14:43+01:00",
        "inclusion_date": "2025-06-28T03:14:00.578727+00:00"
      },
      "id": "78818eb65dd516b83ac2837c19bfb5151ad3bc5f92042fb2d19aa5db144bdc25"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "3d8e1994e2522b249c36b71db17765a779eaa787",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "LeanByExample/Attribute/Irreducible.lean",
        "start_line": 27,
        "start_column": 2,
        "end_line": 27,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 factorial 5 = 120",
        "url": "https://github.com/lean-ja/lean-by-example/blob/3d8e1994e2522b249c36b71db17765a779eaa787/LeanByExample/Attribute/Irreducible.lean#L27"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2025-07-06T11:35:44+09:00",
        "inclusion_date": "2025-09-15T04:41:33.921583+00:00"
      },
      "id": "5757cee2ffdf1dc544dbfafc7b7383e7ba09349586d63e52e2acffe631c41dbd"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "58ff9ddb3f6bc3860fb0316cc210fca5d488ba62",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 79,
        "start_column": 398,
        "end_line": 79,
        "end_column": 403
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b9 : MeasureableFinGroup G\n\u03a9 : Type u_2\ninst\u271d : MeasureSpace \u03a9\nT\u2081 T\u2082 T\u2083 : \u03a9 \u2192 G\nhsum : T\u2081 + T\u2082 + T\u2083 = 0\nn : \u2115\n\u03a9' : Fin n \u2192 Type u_3\nh\u03a9' : (i : Fin n) \u2192 MeasureSpace (\u03a9' i)\nY : (i : Fin n) \u2192 \u03a9' i \u2192 G\n\u03b1 : \u211d\nh\u03b1 : \u03b1 > 0\n\u22a2 \u2203 \u03a9'' h\u03a9'' U,\n    d[U # U] + \u03b1 * \u2211 i, d[Y i # U] \u2264 (2 + \u03b1 * \u2191n / 2) * (I[T\u2081 : T\u2082] + I[T\u2081 : T\u2083] + I[T\u2082 : T\u2083]) + \u03b1 * \u2211 i, d[Y i # T\u2082]",
        "url": "https://github.com/teorth/pfr/blob/58ff9ddb3f6bc3860fb0316cc210fca5d488ba62/PFR/TorsionEndgame.lean#L79"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-04-17T21:11:56+01:00",
        "inclusion_date": "2025-07-05T05:06:27.171280+00:00"
      },
      "id": "f4766ce6765d03252f967e840350287a2d2285e280929619ddd230f92f694046"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "D-Thomine/measure_entropy",
        "commit": "3a27701a2da4247ea753644713592f431c13db82",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/Dynamics/MeasureEntropy/CoverEntropy.lean",
        "start_line": 41,
        "start_column": 2,
        "end_line": 41,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\ninst\u271d\u00b9 : MeasurableSpace X\nT : X \u2192 X\n\u03bc : Measure X\ns : Set (Set X)\ninst\u271d : Fintype \u2191s\n\u22a2 \u2211 x, \u2191(\u03bc (\u22c2 k, \u2191(x k))) = \u2191(\u2211 A \u2208 s.toFinset, \u03bc A)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/3a27701a2da4247ea753644713592f431c13db82/Mathlib/Dynamics/MeasureEntropy/CoverEntropy.lean#L41"
      },
      "metadata": {
        "blame_email_hash": "93c5c887a46d",
        "blame_date": "2025-06-17T10:44:39+02:00",
        "inclusion_date": "2025-06-18T03:01:43.222918+00:00"
      },
      "id": "bbac95f902e86ff3697dbe5746755150255131ec4718831e5686d926ee618b3f"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 94,
        "start_column": 4,
        "end_line": 94,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type u_1\nS : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : CommRing S\nT : Type u_3\ninst\u271d : CommRing T\ng : S \u2243+* T\nf : R \u2243+* S\n\u22a2 LeftInverse (fun x => f.symm (g.symm x)) fun x => g (f x)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L94"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "a03cfd44741b1d245b0d129d41eb596a332c2ff032ccf7c2d86d450097c42fd0"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "duplex-sponge-fs",
        "commit": "0fc5523909130c6100b03cf4a7afb3566f27e485",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/NonBinaryField/KoalaBear.lean",
        "start_line": 166,
        "start_column": 2,
        "end_line": 166,
        "end_column": 7
      },
      "debug_info": {
        "goal": "bits : Fin (KoalaBear.twoAdicity + 1)\nm : \u2115\nhm : m < \u2191bits\n\u22a2 KoalaBear.twoAdicGenerators[bits] ^ 2 ^ m \u2260 1",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0fc5523909130c6100b03cf4a7afb3566f27e485/ArkLib/Data/FieldTheory/NonBinaryField/KoalaBear.lean#L166"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-09-12T02:34:43-04:00",
        "inclusion_date": "2025-09-18T04:30:57.445731+00:00"
      },
      "id": "eded85fa7e019309e309a27984463ee02bea025732bfd37b6a4832239b98ba5f"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "StringsCharges",
        "commit": "25c552a2c25a922bf5dbdb120a212ea73b365f5b",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "PhysLean/ClassicalMechanics/RigidBody/SolidSphere.lean",
        "start_line": 73,
        "start_column": 2,
        "end_line": 73,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m R : NNReal\nhr : R \u2260 0\n\u22a2 inertiaTensor (RigidBody.solidSphere 3 m R) = (2 / 5 * \u2191m * \u2191R ^ 2) \u2022 1",
        "url": "https://github.com/HEPLean/PhysLean/blob/25c552a2c25a922bf5dbdb120a212ea73b365f5b/PhysLean/ClassicalMechanics/RigidBody/SolidSphere.lean#L73"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-09-11T08:59:23+01:00",
        "inclusion_date": "2025-09-17T03:53:50.079672+00:00"
      },
      "id": "a8f2fad739040be2e618e1626e7c73ea5bf4e1f2abb980a5598dc7390a228f04"
    },
    {
      "repo": {
        "remote": "https://github.com/ufmg-smite/lean-smt",
        "branch": "main",
        "commit": "da4ba9acf1845fe264b2bce14923f8e09fbabf28",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Smt/Reconstruct/BitVec/Bitblast.lean",
        "start_line": 37,
        "start_column": 2,
        "end_line": 37,
        "end_column": 7
      },
      "debug_info": {
        "goal": "w : Nat\nx y : BitVec w\n\u22a2 (x = y) = (x.beq y = true)",
        "url": "https://github.com/ufmg-smite/lean-smt/blob/da4ba9acf1845fe264b2bce14923f8e09fbabf28/Smt/Reconstruct/BitVec/Bitblast.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "a29bc6f92c6c",
        "blame_date": "2024-05-08T17:36:04-07:00",
        "inclusion_date": "2025-05-10T00:11:57.827209+00:00"
      },
      "id": "f6c1d130ee14f50a4f87866070f1004701fda60e4c7c87acf7ac122959e2e079"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 256,
        "start_column": 74,
        "end_line": 256,
        "end_column": 79
      },
      "debug_info": {
        "goal": "\u22a2 \u2211 k \u2208 {x \u2208 Finset.Icc 1 49 | 3 \u2223 x}, k % 10 = 78",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L256"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-05T03:31:37.797708+00:00"
      },
      "id": "0b83e3fe15179a474fb45a6816521f806b1595a4fdd869d8a63fb7a7133a6ad0"
    },
    {
      "repo": {
        "remote": "https://github.com/lecopivo/SciLean",
        "branch": "bump-v4.19.0-rc2",
        "commit": "612daaaa9f63016cd8d06df8e634e4d858d26d8e",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "SciLean/Modules/Prob/Erased.lean",
        "start_line": 25,
        "start_column": 56,
        "end_line": 25,
        "end_column": 61
      },
      "debug_info": {
        "goal": "\u03b1 : Type\nx : \u03b1\n\u22a2 \u2191(erase x) = x",
        "url": "https://github.com/lecopivo/SciLean/blob/612daaaa9f63016cd8d06df8e634e4d858d26d8e/SciLean/Modules/Prob/Erased.lean#L25"
      },
      "metadata": {
        "blame_email_hash": "c7c59fe619b9",
        "blame_date": "2024-02-08T10:58:37-05:00",
        "inclusion_date": "2025-05-29T03:10:06.182872+00:00"
      },
      "id": "d0806764df9631774d819e99b02e32abcceb28e50f1c5195ed7c7ed9ceb9ae42"
    },
    {
      "repo": {
        "remote": "https://github.com/cmu-l3/llmlean",
        "branch": "kimina-pr",
        "commit": "126a6b2af37727c4d81bb49f6af6b354a380145e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LLMleanTest/Examples2.lean",
        "start_line": 104,
        "start_column": 2,
        "end_line": 104,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 InjOn sqrt {x | x \u2265 0}",
        "url": "https://github.com/cmu-l3/llmlean/blob/126a6b2af37727c4d81bb49f6af6b354a380145e/LLMleanTest/Examples2.lean#L104"
      },
      "metadata": {
        "blame_email_hash": "3ab0971ac342",
        "blame_date": "2024-07-23T21:27:45-04:00",
        "inclusion_date": "2025-06-11T03:39:01.065377+00:00"
      },
      "id": "bbce0ecdf33ed6cc7bb33cb461c27766e6d8587187b80864b8af355825f163ac"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_01.lean",
        "start_line": 187,
        "start_column": 97,
        "end_line": 187,
        "end_column": 102
      },
      "debug_info": {
        "goal": "n : \u2115\nx : \u211d\nhxge : x \u2265 \u2191n\nhxlt : x < \u2191n + 1\n\u22a2 \u220f p \u2208 \u230ax\u230b.natAbs.primesBelow, \u2211' (k : \u2115), (\u2191p ^ k)\u207b\u00b9 \u2264\n    \u2191(\u220f k \u2208 Icc 1 (primeCountingReal x), nth Nat.Prime k / (nth Nat.Prime k - 1))",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_01.lean#L187"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2025-08-30T22:25:38+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "25186745745b4066b39fe3c9d79321590a828505b65b454caa5613a5d1c05d38"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/10FunctionsAndOperators.lean",
        "start_line": 298,
        "start_column": 12,
        "end_line": 298,
        "end_column": 17
      },
      "debug_info": {
        "goal": "m : Type u_4\nn : Type u_5\ninst\u271d\u00b3 : Fintype m\ninst\u271d\u00b2 : Fintype n\ninst\u271d\u00b9 : DecidableEq m\ninst\u271d : DecidableEq n\nA : Matrix m n \u211d\n\u22a2 \u2016A\u2016 \u2264 \u2191(Fintype.card n) * \u2016A\u2016",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/10FunctionsAndOperators.lean#L298"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2025-08-06T00:45:33+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "2adbcd966c8d9ea43648f521ec71dc74327c13048fb208d25f9c2a47a91c3ff7"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "4fadf20b58f84ebd2332c904cc7298c13bfbe5f7",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Compfiles/Usa1993P3.lean",
        "start_line": 117,
        "start_column": 4,
        "end_line": 117,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case left.intro.intro\nf : \u2191(Set.Icc 0 1) \u2192 \u211d\nx : \u211d\nhx : 0 \u2264 x \u2227 x \u2264 1\nh1 : \u2200 (x : \u2191(Set.Icc 0 1)), 0 \u2264 f x\nh2 : f 1 = 1\nh3 : \u2200 (x y : \u2191(Set.Icc 0 1)) (h : \u2191x + \u2191y \u2208 Set.Icc 0 1), f x + f y \u2264 f \u27e8\u2191x + \u2191y, h\u27e9\nh4 : \u2200 (x : \u2191(Set.Icc 0 1)), 1 - \u2191x \u2208 Set.Icc 0 1\nh5 : \u2200 (x : \u2191(Set.Icc 0 1)), f x + f \u27e81 - \u2191x, \u22ef\u27e9 \u2264 1\nh6 : \u2200 (x : \u2191(Set.Icc 0 1)), f x \u2264 1\nh8 : \u2200 (n : \u2115) (x : \u2191(Set.Icc 0 (1 / 2 ^ n))), 2 ^ n * \u2191x \u2208 Set.Icc 0 1\nh9 : \u2200 (n : \u2115) (x : \u2191(Set.Icc 0 (1 / 2 ^ n))), 2 ^ n * f \u27e8\u2191x, \u22ef\u27e9 \u2264 f \u27e82 ^ n * \u2191x, \u22ef\u27e9\n\u22a2 f \u27e8x, \u22ef\u27e9 \u2264 2 * x",
        "url": "https://github.com/dwrensha/compfiles/blob/4fadf20b58f84ebd2332c904cc7298c13bfbe5f7/Compfiles/Usa1993P3.lean#L117"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2025-07-09T08:50:47-04:00",
        "inclusion_date": "2025-07-30T19:16:21.692704+00:00"
      },
      "id": "4edba60aab2127064351350ab266d90dc41aabe904ca525591469ad099db0242"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "generalized-trace",
        "commit": "5c479c65ad77d0b6ad82e6622abd2ad85e349c7d",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/Classification/GeneralizedTrace.lean",
        "start_line": 75,
        "start_column": 4,
        "end_line": 75,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case h.mp.intro.intro.intro.intro\nX : FormulaSet \u2115\nhX : \u2200 \u03be \u2208 X, \u2200 (s : Substitution \u2115), \u03be\u27e6s\u27e7 \u2208 X\nn : \u2115\n\u03c6 : Formula \u2115\nh\u03c6\u2081 : \u03c6 \u2208 Modal.GL.sumQuasiNormal X\nh\u03c6\u2082 : n \u2208 LO.Modal.Formula.gTrace \u03c6\nY : Finset (Formula \u2115)\nhY\u2081 : \u2191Y \u2286 X\nhY\u2082 : Modal.GL \u22a2! Y.conj \u279d \u03c6\n\u22a2 \u2203 \u03c6 \u2208 X, n \u2208 LO.Modal.Formula.gTrace \u03c6",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/5c479c65ad77d0b6ad82e6622abd2ad85e349c7d/Foundation/ProvabilityLogic/Classification/GeneralizedTrace.lean#L75"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-09-15T21:09:32+09:00",
        "inclusion_date": "2025-09-17T03:36:03.416511+00:00"
      },
      "id": "8bf724f6c000a602de5e41fd5748181186e09baacd510e3c7e5cee8f3878226a"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "a0242db40daf0c3a31d08fc70ebba2952165de6c",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "Carleson/ToMathlib/RealInterpolation/LorentzInterpolation.lean",
        "start_line": 37,
        "start_column": 2,
        "end_line": 37,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b1' : Type u_2\nE\u2081 : Type u_5\nE\u2082 : Type u_6\nm : MeasurableSpace \u03b1\nm' : MeasurableSpace \u03b1'\n\u03bc : Measure \u03b1\n\u03bd : Measure \u03b1'\ninst\u271d\u2079 : TopologicalSpace E\u2081\ninst\u271d\u2078 : TopologicalSpace E\u2082\ninst\u271d\u2077 : ENormedAddCommMonoid E\u2081\ninst\u271d\u2076 : ENormedAddCommMonoid E\u2082\nT : (\u03b1 \u2192 E\u2081) \u2192 \u03b1' \u2192 E\u2082\np\u2080 p\u2081 r\u2080 r\u2081 q\u2080 q\u2081 s\u2080 s\u2081 p q : ENNReal\ninst\u271d\u2075 : MeasurableSpace E\u2081\ninst\u271d\u2074 : TopologicalSpace E\u2081\ninst\u271d\u00b3 : ENormedAddCommMonoid E\u2081\ninst\u271d\u00b2 : MeasurableSpace E\u2082\ninst\u271d\u00b9 : TopologicalSpace E\u2082\ninst\u271d : ENormedAddCommMonoid E\u2082\nhp\u2080 : 1 \u2264 p\u2080\nhp\u2081 : 1 \u2264 p\u2081\nhr\u2080 : 1 \u2264 r\u2080\nhr\u2081 : 1 \u2264 r\u2081\nhq\u2080 : 1 \u2264 q\u2080\nhq\u2081 : 1 \u2264 q\u2081\nhs\u2080 : 1 \u2264 s\u2080\nhs\u2081 : 1 \u2264 s\u2081\nhp\u2080p\u2081 : p\u2080 \u2260 p\u2081\nhq\u2080q\u2081 : q\u2080 \u2260 q\u2081\nC\u2080 C\u2081 t A : NNReal\nhA : 0 < A\nht : t \u2208 Ioo 0 1\nhC\u2080 : 0 < C\u2080\nhC\u2081 : 0 < C\u2081\nhp : p\u207b\u00b9 = (1 - \u2191t) / p\u2080 + \u2191t / p\u2081\nhq : q\u207b\u00b9 = (1 - \u2191t) / q\u2080 + \u2191t / q\u2081\nhmT : \u2200 (f : \u03b1 \u2192 E\u2081), MemLorentz f p q \u03bc \u2192 AEStronglyMeasurable (T f) \u03bd\nhT : AESubadditiveOn T (fun f => MemLorentz f p\u2080 r\u2080 \u03bc \u2228 MemLorentz f p\u2081 r\u2081 \u03bc) (\u2191A) \u03bd\nh\u2080T : HasLorentzType T p\u2080 r\u2080 q\u2080 s\u2080 \u03bc \u03bd \u2191C\u2080\nh\u2081T : HasLorentzType T p\u2081 r\u2081 q\u2081 s\u2081 \u03bc \u03bd \u2191C\u2081\n\u22a2 \u2200 (r : ENNReal), 0 < r \u2192 HasLorentzType T p r q r \u03bc \u03bd \u2191(C_LorentzInterpolation p\u2080 p\u2081 q\u2080 q\u2081 q C\u2080 C\u2081 A \u2191t)",
        "url": "https://github.com/fpvandoorn/carleson/blob/a0242db40daf0c3a31d08fc70ebba2952165de6c/Carleson/ToMathlib/RealInterpolation/LorentzInterpolation.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-07-08T17:45:26+02:00",
        "inclusion_date": "2025-09-08T16:13:18.779687+00:00"
      },
      "id": "8550e0fe677bae057113aba34ab32d2f0d4b49c6d5292b6d96772cdc7e0855f2"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-hardly-ramified",
        "commit": "60be88a841fa232b563ea16600befe5efbfb3d07",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FLT/GlobalLanglandsConjectures/GLzero.lean",
        "start_line": 86,
        "start_column": 24,
        "end_line": 86,
        "end_column": 29
      },
      "debug_info": {
        "goal": "\u03c1 : Weight 0\nc : \u2102\nU : Subgroup (GL (Fin 0) (IsDedekindDomain.FiniteAdeleRing \u2124 \u211a)) :=\n  { carrier := {1}, mul_mem' := \u22ef, one_mem' := \u22ef, inv_mem' := \u22ef }\n\u22a2 IsOpen U.carrier",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/60be88a841fa232b563ea16600befe5efbfb3d07/FLT/GlobalLanglandsConjectures/GLzero.lean#L86"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-08-02T17:00:19+01:00",
        "inclusion_date": "2025-09-18T04:05:26.332171+00:00"
      },
      "id": "3dbfa0ab7c62308b9be4e47d28385566287851e156ff531ab30f9a41d1b8b412"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "d279b56adead908de8bd086ea46b82895cf4f12c",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 46,
        "start_column": 12,
        "end_line": 46,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case fst\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : MyProd \u03b1 (MyProd \u03b2 \u03b3)\n\u22a2 p.fst = q.fst",
        "url": "https://github.com/leanprover-community/aesop/blob/d279b56adead908de8bd086ea46b82895cf4f12c/AesopTest/ExtScript.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-04-30T23:33:22.583043+00:00"
      },
      "id": "c60be0eb3493d05540c6b0afcd11697dfe931fd0019344f94d5c304a9280896f"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 130,
        "start_column": 6,
        "end_line": 130,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case refine_2.hs\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\n\u22a2 MeasurableSet (\u22c2 i \u2208 s, {\u03c9 | X \u03c9 i})",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L130"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "0183bd953d3b7d8140d29187a408e2af62297dfb521544521b74627a89e2ee62"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "b5313cfd2308dfb6b98d7321bf26243984e4d291",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 7235,
        "start_column": 69,
        "end_line": 7235,
        "end_column": 74
      },
      "debug_info": {
        "goal": "\u03bd : \u211d \u2192 \u211d\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\nc_close : \u211d\nc_close_pos : c_close > 0\nh_close :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 (\u03b5 : \u211d),\n        0 < \u03b5 \u2192 \u03b5 < 1 \u2192 2 < X * \u03b5 \u2192 \u2016SmoothedChebyshev \u03bd \u03b5 X - \u2191(ChebyshevPsi X)\u2016 \u2264 c_close * \u03b5 * X * Real.log X\n\u03b5_main C_main : \u211d\n\u03b5_main_pos : 0 < \u03b5_main\nC_main_pos : 0 < C_main\nh_main : \u2200 \u03b5 \u2208 Ioo 0 \u03b5_main, \u2016MellinTransform (fun x => \u2191(Smooth1 \u03bd \u03b5 x)) 1 - 1\u2016 \u2264 C_main * \u03b5\nA C_bnd : \u211d\nC_bnd_pos : 0 < C_bnd\nA_in_Ioc : A \u2208 Ioc 0 (1 / 2)\nzeta_bnd : LogDerivZetaHasBound A C_bnd\nholo1 :\n  \u2200 (T : \u211d),\n    3 \u2264 T \u2192\n      HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (Icc (1 - A / Real.log T ^ 9) 2 \u00d7\u2102 Icc (-T) T \\ {1})\n\u03c3\u2082' : \u211d\n\u03c3\u2082 : \u211d := max \u03c3\u2082' (1 / 2)\n\u03c3\u2082_pos : 0 < \u03c3\u2082\n\u03c3\u2082_lt_one : \u03c3\u2082 < 1\nholo2 : HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (uIcc \u03c3\u2082 2 \u00d7\u2102 uIcc (-3) 3 \\ {1})\nc\u2081 : \u211d\nc\u2081pos : c\u2081 > 0\nhc\u2081 : \u2200 (\u03b5 : \u211d), 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2081 \u03bd \u03b5 X T\u2016 \u2264 c\u2081 * X * Real.log X / (\u03b5 * T)\nc\u2082 : \u211d\nc\u2082pos : 0 < c\u2082\nhc\u2082 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2082 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2082 * X / (\u03b5 * T)\nc\u2083 : \u211d\nc\u2083pos : 0 < c\u2083\nhc\u2083 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2083 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2083 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2085 : \u211d\nc\u2085pos : 0 < c\u2085\nhc\u2085 : \u2200 (X : \u211d), 3 < X \u2192 \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2016I\u2085 \u03bd \u03b5 X \u03c3\u2082\u2016 \u2264 c\u2085 * X ^ \u03c3\u2082 / \u03b5\nc\u2087 : \u211d\nc\u2087pos : 0 < c\u2087\nhc\u2087 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2087 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2087 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2088 : \u211d\nc\u2088pos : 0 < c\u2088\nhc\u2088 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2088 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2088 * X / (\u03b5 * T)\nc\u2089 : \u211d\nc\u2089pos : c\u2089 > 0\nhc\u2089 : \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2089 \u03bd \u03b5 X T\u2016 \u2264 c\u2089 * X * Real.log X / (\u03b5 * T)\nc\u2084 : \u211d\nc\u2084pos : 0 \u2264 c\u2084\nTlb\u2084 : \u211d\nTlb\u2084bnd : 3 < Tlb\u2084\nhc\u2084 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              Tlb\u2084 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2084 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 \u2264 c\u2084 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2086 : \u211d\nc\u2086pos : 0 \u2264 c\u2086\nTlb\u2086 : \u211d\nTlb\u2086bnd : 3 < Tlb\u2086\nhc\u2086 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              Tlb\u2086 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2086 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 \u2264 c\u2086 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\n\u03b5x : \u211d \u2192 \u211d := fun x => Real.exp (-c * Real.log x ^ (1 / 10))\nTx : \u211d \u2192 \u211d := fun x => Real.exp (2 * c * Real.log x ^ (1 / 10))\neventually_\u03b5x_lt_one : \u2200\u1da0 (x : \u211d) in atTop, \u03b5x x < 1\neventually_2_lt : \u2200\u1da0 (x : \u211d) in atTop, 2 < x * \u03b5x x\neventually_T_gt_3 : \u2200\u1da0 (x : \u211d) in atTop, 3 < Tx x\neventually_T_gt_Tlb\u2084 : \u2200\u1da0 (x : \u211d) in atTop, Tlb\u2084 < Tx x\n\u22a2 \u2200\u1da0 (x : \u211d) in atTop, Tlb\u2086 < Tx x",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/b5313cfd2308dfb6b98d7321bf26243984e4d291/PrimeNumberTheoremAnd/MediumPNT.lean#L7235"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-07-21T22:55:17-04:00",
        "inclusion_date": "2025-07-22T23:27:42.532828+00:00"
      },
      "id": "9ee6bd73713aee098d9a46fb8bbadaf027922175f53993fa844a09e51423c9f4"
    },
    {
      "repo": {
        "remote": "https://github.com/emilyriehl/infinity-cosmos",
        "branch": "main",
        "commit": "7fa2a3a7a86ac59ac1199ef98e16b09eda86bd8a",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean",
        "start_line": 135,
        "start_column": 36,
        "end_line": 135,
        "end_column": 41
      },
      "debug_info": {
        "goal": "A : SSet\nf\u271d g\u271d f g h : A.obj (Opposite.op (SimplexCategory.mk 1))\nH\u2081 : @SSet.HomotopyL A f g\nH\u2082 : @SSet.HomotopyL A f h\n\u03c3 : (horn 3 1).toSSet \u27f6 A := \u22ef\n\u03c4 : A.obj (Opposite.op (SimplexCategory.mk 3)) := \u22ef\n\u03c4\u2080 :\n  SimplicialObject.\u03b4 A 0 \u03c4 =\n    CategoryStruct.comp (SimplicialObject.\u03b4 A 0) (CategoryStruct.comp (SimplicialObject.\u03c3 A 0) (SimplicialObject.\u03c3 A 0))\n      g\n\u03c4\u2082 : SimplicialObject.\u03b4 A 2 \u03c4 = @SSet.HomotopyL.simplex A f h H\u2082\n\u22a2 SimplicialObject.\u03b4 A 3 \u03c4 = @SSet.HomotopyL.simplex A f g H\u2081",
        "url": "https://github.com/emilyriehl/infinity-cosmos/blob/7fa2a3a7a86ac59ac1199ef98e16b09eda86bd8a/InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean#L135"
      },
      "metadata": {
        "blame_email_hash": "f0d6831918ab",
        "blame_date": "2024-12-17T23:14:43+01:00",
        "inclusion_date": "2025-06-28T03:14:00.578727+00:00"
      },
      "id": "70a68d4341688ed97465a7543e22d4807977c73b8fcbb6109d648b3ef35d2040"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "3d8e1994e2522b249c36b71db17765a779eaa787",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "LeanByExample/Tactic/Sorry.lean",
        "start_line": 43,
        "start_column": 2,
        "end_line": 43,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 one = two",
        "url": "https://github.com/lean-ja/lean-by-example/blob/3d8e1994e2522b249c36b71db17765a779eaa787/LeanByExample/Tactic/Sorry.lean#L43"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2025-06-07T14:00:31+09:00",
        "inclusion_date": "2025-09-15T04:41:33.921583+00:00"
      },
      "id": "c27b0677309402d9b6d7d3843a719e2aaea6b058ff0e5c3295efaf760ce092ea"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/BoundingMutual.lean",
        "start_line": 36,
        "start_column": 79,
        "end_line": 36,
        "end_column": 84
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Type u\nh\u03a9 : MeasureSpace \u03a9\nX : Fin p.m \u2192 \u03a9 \u2192 G\nh_indep : iIndepFun X \u2119\nh_min : multiTauMinimizes p (fun x => \u03a9) (fun x => h\u03a9) X\n\u03a9' : Type u_1\ninst\u271d : MeasureSpace \u03a9'\nX' : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh_indep' : iIndepFun X' \u2119\nhperm : \u2200 (j : Fin p.m), \u2203 e, IdentDistrib (fun \u03c9 i => X' (i, j) \u03c9) (fun \u03c9 i => X (e i) \u03c9) \u2119 \u2119\n\u22a2 I[fun \u03c9 j => \u2211 i, X' (i, j) \u03c9 : fun \u03c9 i => \u2211 j, X' (i, j) \u03c9|fun \u03c9 => \u2211 i, \u2211 j, X' (i, j) \u03c9] \u2264\n    4 * \u2191p.m ^ 2 * p.\u03b7 * D[X ; fun x => h\u03a9]",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/BoundingMutual.lean#L36"
      },
      "metadata": {
        "blame_email_hash": "7d87c0724495",
        "blame_date": "2025-03-07T08:53:46+01:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "1bbff35f827b226473c16ec439932d644591efee74849ae8e1338c81a2fe5eeb"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "D-Thomine/measure_entropy",
        "commit": "3a27701a2da4247ea753644713592f431c13db82",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/Dynamics/MeasureEntropy/CoverEntropy.lean",
        "start_line": 49,
        "start_column": 4,
        "end_line": 49,
        "end_column": 9
      },
      "debug_info": {
        "goal": "X : Type u_1\ninst\u271d\u00b9 : MeasurableSpace X\nT : X \u2192 X\n\u03bc : Measure X\nn\u271d : \u2115\nhn : 1 \u2264 n\u271d\ns : Set (Set X)\ninst\u271d : Fintype \u2191s\nn : \u2115\nn_1 : 1 \u2264 n\nhin : @Dynamics.My_Sum X inst\u271d\u00b9 T \u03bc n s inst\u271d \u2264 \u2191(\u2211 A \u2208 s.toFinset, \u03bc A) ^ n\n\u22a2 @Dynamics.My_Sum X inst\u271d\u00b9 T \u03bc (n + 1) s inst\u271d \u2264 \u2191(\u2211 A \u2208 s.toFinset, \u03bc A) ^ (n + 1)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/3a27701a2da4247ea753644713592f431c13db82/Mathlib/Dynamics/MeasureEntropy/CoverEntropy.lean#L49"
      },
      "metadata": {
        "blame_email_hash": "93c5c887a46d",
        "blame_date": "2025-06-17T10:44:39+02:00",
        "inclusion_date": "2025-06-18T03:01:43.222918+00:00"
      },
      "id": "d78ffa6938972423c77e1d1549b59665bef684599cfd278a9c6f835d19dc6e04"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 96,
        "start_column": 4,
        "end_line": 96,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type u_1\nS : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : CommRing S\nT : Type u_3\ninst\u271d : CommRing T\ng : S \u2243+* T\nf : R \u2243+* S\n\u22a2 RightInverse (fun x => f.symm (g.symm x)) fun x => g (f x)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L96"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "d539b9fa267cc26639c3431e04850ddf8643b2c87e8fbb17a199212d15aada93"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "duplex-sponge-fs",
        "commit": "0fc5523909130c6100b03cf4a7afb3566f27e485",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/NonBinaryField/KoalaBear.lean",
        "start_line": 177,
        "start_column": 4,
        "end_line": 177,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case hd\nbits : Fin (KoalaBear.twoAdicity + 1)\nm : \u2115\nhm : Nat.Prime m\nhm' : m \u2223 2 ^ \u2191bits\nthis : m = 2\n\u22a2 KoalaBear.twoAdicGenerators[bits] ^ (2 ^ \u2191bits / 2) \u2260 1",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0fc5523909130c6100b03cf4a7afb3566f27e485/ArkLib/Data/FieldTheory/NonBinaryField/KoalaBear.lean#L177"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-09-12T02:34:43-04:00",
        "inclusion_date": "2025-09-18T04:30:57.445731+00:00"
      },
      "id": "9c87e958a6aa3429964be9d55cf427ce38dfe265ccdbb7849cccd99e0d830109"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "copilot/fix-a2a433e8-ed5f-4c7a-a6b4-25782fb4631f",
        "commit": "5d071e502cc2fb129eb57ff7a6c171f76c5cc4da",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "PhysLean/Mathematics/Trigonometry/Tanh.lean",
        "start_line": 63,
        "start_column": 61,
        "end_line": 63,
        "end_column": 66
      },
      "debug_info": {
        "goal": "n : \u2115\nx : \u211d\n\u22a2 \u2203 P, \u2200 (x : \u211d), iteratedDeriv n tanh x = Polynomial.eval (tanh x) P",
        "url": "https://github.com/HEPLean/PhysLean/blob/5d071e502cc2fb129eb57ff7a6c171f76c5cc4da/PhysLean/Mathematics/Trigonometry/Tanh.lean#L63"
      },
      "metadata": {
        "blame_email_hash": "9f36d68419bf",
        "blame_date": "2025-08-15T16:18:08+01:00",
        "inclusion_date": "2025-09-08T17:10:55.530665+00:00"
      },
      "id": "906a688250fa8e2cb73e113614aa8b64bba40663d1a1d30247a30502450b6ea4"
    },
    {
      "repo": {
        "remote": "https://github.com/ufmg-smite/lean-smt",
        "branch": "main",
        "commit": "e994ff05c81214b3397f8b59aaeca4c302bd41dc",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Smt/Reconstruct/BitVec/Bitblast.lean",
        "start_line": 37,
        "start_column": 2,
        "end_line": 37,
        "end_column": 7
      },
      "debug_info": {
        "goal": "w : Nat\nx y : BitVec w\n\u22a2 (x = y) = (BitVec.beq w x y = true)",
        "url": "https://github.com/ufmg-smite/lean-smt/blob/e994ff05c81214b3397f8b59aaeca4c302bd41dc/Smt/Reconstruct/BitVec/Bitblast.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "a29bc6f92c6c",
        "blame_date": "2024-05-08T17:36:04-07:00",
        "inclusion_date": "2025-05-17T23:11:31.262140+00:00"
      },
      "id": "06903fb617edab65a9480d78f688920ee401e63324fbd0215080108f9415717e"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 264,
        "start_column": 26,
        "end_line": 264,
        "end_column": 31
      },
      "debug_info": {
        "goal": "S : Finset \u2115\nh\u2080 : \u2200 (n : \u2115), n \u2208 S \u2194 2010 \u2264 n \u2227 n \u2264 2019 \u2227 \u2203 m, m.divisors.card = 4 \u2227 \u2211 p \u2208 m.divisors, p = n\n\u22a2 \u2211 k \u2208 S, k = 2016",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L264"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "d586b33a485e91fb48fb195cb5a8be15c9ed4898a4254c541bc4f55c0811b529"
    },
    {
      "repo": {
        "remote": "https://github.com/lecopivo/SciLean",
        "branch": "bump-v4.19.0-rc2",
        "commit": "612daaaa9f63016cd8d06df8e634e4d858d26d8e",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "SciLean/Modules/Prob/TestFunctionExtension.lean",
        "start_line": 23,
        "start_column": 15,
        "end_line": 23,
        "end_column": 20
      },
      "debug_info": {
        "goal": "X : Sort u_1\nY : Type u_2\ninst\u271d\u00b9 : NormedAddCommGroup Y\ninst\u271d : NormedSpace \u211d Y\nF : (X \u2192 \u211d) \u2192 \u211d\n\u03c6 : X \u2192 \u211d\ny : Y\n\u22a2 (testFunctionExtension F fun x => \u03c6 x \u2022 y) = F \u03c6 \u2022 y",
        "url": "https://github.com/lecopivo/SciLean/blob/612daaaa9f63016cd8d06df8e634e4d858d26d8e/SciLean/Modules/Prob/TestFunctionExtension.lean#L23"
      },
      "metadata": {
        "blame_email_hash": "c7c59fe619b9",
        "blame_date": "2024-02-08T10:58:37-05:00",
        "inclusion_date": "2025-05-29T03:10:06.182872+00:00"
      },
      "id": "9976edfd75788d3dc0c71c4c4a46b38ea4a270f563b97cb44d917f295408e866"
    },
    {
      "repo": {
        "remote": "https://github.com/cmu-l3/llmlean",
        "branch": "kimina-pr",
        "commit": "126a6b2af37727c4d81bb49f6af6b354a380145e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LLMleanTest/Examples2.lean",
        "start_line": 164,
        "start_column": 24,
        "end_line": 164,
        "end_column": 29
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_3\nf : \u03b1 \u2192 Set \u03b1\nsurjf : Surjective f\nS : Set \u03b1 := {i | i \u2209 f i}\nj : \u03b1\nh : f j = S\nh\u2081 : j \u2209 f j\n\u22a2 j \u2208 S",
        "url": "https://github.com/cmu-l3/llmlean/blob/126a6b2af37727c4d81bb49f6af6b354a380145e/LLMleanTest/Examples2.lean#L164"
      },
      "metadata": {
        "blame_email_hash": "3ab0971ac342",
        "blame_date": "2024-07-23T21:27:45-04:00",
        "inclusion_date": "2025-06-11T03:39:01.065377+00:00"
      },
      "id": "b12b65961b961290366ca484bd74341b317e3726eed6dc73526507be702e52a6"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_01.lean",
        "start_line": 188,
        "start_column": 65,
        "end_line": 188,
        "end_column": 70
      },
      "debug_info": {
        "goal": "n : \u2115\nx : \u211d\nhxge : x \u2265 \u2191n\nhxlt : x < \u2191n + 1\n\u22a2 \u2191(\u220f k \u2208 Icc 1 (primeCountingReal x), nth Nat.Prime k / (nth Nat.Prime k - 1)) \u2264\n    \u2191(\u220f k \u2208 Icc 1 (primeCountingReal x), (k + 1) / k)",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_01.lean#L188"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2025-08-30T22:25:38+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "6f4f1b08cc20e0989bf89cc7d2f6faec52b79706bf03237b11d4f53583ec58c0"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/10FunctionsAndOperators.lean",
        "start_line": 298,
        "start_column": 19,
        "end_line": 298,
        "end_column": 24
      },
      "debug_info": {
        "goal": "m : Type u_4\nn : Type u_5\ninst\u271d\u00b3 : Fintype m\ninst\u271d\u00b2 : Fintype n\ninst\u271d\u00b9 : DecidableEq m\ninst\u271d : DecidableEq n\nA : Matrix m n \u211d\n\u22a2 \u2016A\u2016 \u2264 \u2191(Fintype.card n) * sorry A",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/10FunctionsAndOperators.lean#L298"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2025-08-06T00:45:33+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "2e459ff66ddee86ae48f4c558d952264f3b5b121eb0d44d4af2adf82067da53b"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "54e2692f53004e900064c6f6e8e5a38b2754b0ad",
        "lean_version": "v4.24.0-rc1"
      },
      "location": {
        "path": "Compfiles/Imo2022P3.lean",
        "start_line": 39,
        "start_column": 2,
        "end_line": 39,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k : \u2115\nhk : 0 < k\nS : Finset \u2115\nhS : \u2200 p \u2208 S, Odd p \u2227 Nat.Prime p\np\u2081 p\u2082 : Fin S.card \u2243 { x // x \u2208 S }\nhp\u2081 : Imo2022P3.Condition k S p\u2081\nhp\u2082 : Imo2022P3.Condition k S p\u2082\n\u22a2 (\u2203 i, \u2200 (j : Fin S.card), p\u2082 j = p\u2081 (j + i)) \u2228 \u2203 i, \u2200 (j : Fin S.card), p\u2082 j = p\u2081 (j.rev + i)",
        "url": "https://github.com/dwrensha/compfiles/blob/54e2692f53004e900064c6f6e8e5a38b2754b0ad/Compfiles/Imo2022P3.lean#L39"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2025-04-15T08:25:26-04:00",
        "inclusion_date": "2025-09-19T03:11:14.409941+00:00"
      },
      "id": "dd660c79eb9d7a0c3a8ab63b3b07283883bd102f526d6ffa1ce6ed1d4860ea0d"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "letterless-provlogic",
        "commit": "3fb2a68cedadf550c96bbc4c41bd99693774fc92",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/Classification/LetterlessTrace.lean",
        "start_line": 1056,
        "start_column": 8,
        "end_line": 1056,
        "end_column": 13
      },
      "debug_info": {
        "goal": "T : ArithmeticTheory\ninst\u271d\u00b2 : \ud835\udddc\ud835\udeba\u2081 \u2aaf T\ninst\u271d\u00b9 : Theory.\u0394\u2081 T\ninst\u271d : \u2115 \u22a7\u2098* T\nX : Modal.FormulaSet \u2115\nX_letterless : @LO.Modal.FormulaSet.letterless \u2115 X\nU : ArithmeticTheory\neU : T + \u2191((fun x => \u2191(LO.FirstOrder.ArithmeticTheory.letterlessStandardRealization T inst\u271d\u00b9) x) '' X) = U\nA : Modal.Formula \u2115\nh : \u2200 (f : T.StandardRealization), U \u22a2!. \u2191f A\nthis : U \u22a2!. \u2191(GL.uniformStandardRealization T) A\n\u22a2 \u2203 \u0393,\n    \u2191\u0393 \u2286 X \u2227\n      T \u22a2!.\n        (Finset.image (fun x => \u2191(LO.FirstOrder.ArithmeticTheory.letterlessStandardRealization T inst\u271d\u00b9) x) \u0393).conj \u279d\n          \u2191(GL.uniformStandardRealization T) A",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/3fb2a68cedadf550c96bbc4c41bd99693774fc92/Foundation/ProvabilityLogic/Classification/LetterlessTrace.lean#L1056"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-09-15T18:42:26+09:00",
        "inclusion_date": "2025-09-16T03:34:53.561013+00:00"
      },
      "id": "713ff64cc52c0112557d883311a9d3e58459fe9bf2c4009a4d6becae52f737b4"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "ineq_6_3_30",
        "commit": "a11d007aa69834cdf5b6b203a05898acb98d4605",
        "lean_version": "v4.22.0-rc2"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainTileCount.lean",
        "start_line": 568,
        "start_column": 4,
        "end_line": 568,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case pos\nX : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Set (\ud835\udd13 X)\n\u03d1 : \u0398 X\nN : \u2115\nL : Grid X\nhL : L \u2208 @Antichain.\ud835\udcdb' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N\nh : s L = -\u2191(defaultS X)\n\u22a2 @Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL \u2264\n    \ud835\udcd8 (@Antichain.p'\u271d X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL)",
        "url": "https://github.com/fpvandoorn/carleson/blob/a11d007aa69834cdf5b6b203a05898acb98d4605/Carleson/Antichain/AntichainTileCount.lean#L568"
      },
      "metadata": {
        "blame_email_hash": "b2f50b2f722a",
        "blame_date": "2025-07-08T16:45:22+02:00",
        "inclusion_date": "2025-07-11T03:02:12.360312+00:00"
      },
      "id": "987133188fcf5cd7d44e58c7b7af24ad5224d06d419a339b47452a21a6e5f3b9"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-hardly-ramified",
        "commit": "60be88a841fa232b563ea16600befe5efbfb3d07",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FLT/GlobalLanglandsConjectures/GLzero.lean",
        "start_line": 72,
        "start_column": 6,
        "end_line": 72,
        "end_column": 11
      },
      "debug_info": {
        "goal": "\u03c1 : Weight 0\nc : \u2102\nx : GL (Fin 0) (IsDedekindDomain.FiniteAdeleRing \u2124 \u211a)\n\u22a2 Module.Finite \u2102\n    (\u21a5(Z (GL (Fin 0) \u211d) (Matrix (Fin 0) (Fin 0) \u211d)) \u29f8\n      Submodule.comap (actionTensorCAlg'3 (GL (Fin 0) \u211d) (Matrix (Fin 0) (Fin 0) \u211d)).toLinearMap\n        ((Submodule.span \u2102 {\u27e8fun y => c, \u22ef\u27e9}).compatibleMaps \u22a5))",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/60be88a841fa232b563ea16600befe5efbfb3d07/FLT/GlobalLanglandsConjectures/GLzero.lean#L72"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-08-02T17:00:19+01:00",
        "inclusion_date": "2025-09-18T04:05:26.332171+00:00"
      },
      "id": "21839a976249c8b72861db0c3f7ec865eee459acb5c18e365fafec71acaba10b"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "d279b56adead908de8bd086ea46b82895cf4f12c",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 46,
        "start_column": 12,
        "end_line": 46,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case snd.fst\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : MyProd \u03b1 (MyProd \u03b2 \u03b3)\n\u22a2 p.snd.fst = q.snd.fst",
        "url": "https://github.com/leanprover-community/aesop/blob/d279b56adead908de8bd086ea46b82895cf4f12c/AesopTest/ExtScript.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-04-30T23:33:22.583043+00:00"
      },
      "id": "e137cb4370b5094681f3472ed98fadce92933e08d5a5777bc0ae77a25f8325d9"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 131,
        "start_column": 6,
        "end_line": 131,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case refine_2.ht\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\n\u22a2 MeasurableSet (\u22c2 i \u2208 s, {\u03c9 | Y \u03c9 i})",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L131"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "06324b761a5af46b48dd70c49ede9cbd3c0668d0e42d231cd7f1e810746e51ab"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "e99e6f7b4a57098ded666cd0ed64aae7078440a3",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 6587,
        "start_column": 28,
        "end_line": 6587,
        "end_column": 33
      },
      "debug_info": {
        "goal": "SmoothingF : \u211d \u2192 \u211d\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\nContDiffSmoothingF : ContDiff \u211d 1 SmoothingF\n\u03c3\u2082 : \u211d\nh_logDeriv_holo : HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (uIcc \u03c3\u2082 2 \u00d7\u2102 uIcc (-3) 3 \\ {1})\nh\u03c3\u2082 : \u03c3\u2082 \u2208 Ioo 0 1\n\u03c3\u2082_ge_half : 1 / 2 \u2264 \u03c3\u2082\nA C\u03b6 : \u211d\nhC\u03b6 : LogDerivZetaHasBound A C\u03b6\nC\u03b6pos : 0 < C\u03b6\nhA : A \u2208 Ioc 0 (1 / 2)\nreOne : re 1 = 1\nimOne : im 1 = 0\nreThree : re 3 = 3\nimThree : im 3 = 0\nelt3 : Real.exp 1 < 3\nS : Set \u211d := \u22ef\nC' : \u211d := \u22ef\nbddAboveS : BddAbove S\nCPrimeNonneg : 0 \u2264 C'\nD : \u211d\nDpos : 0 < D\nMellinSmooth1bBound :\n  \u2200 (\u03c3\u2081 : \u211d),\n    0 < \u03c3\u2081 \u2192\n      \u2200 (s : \u2102),\n        \u03c3\u2081 \u2264 s.re \u2192\n          s.re \u2264 2 \u2192\n            \u2200 (\u03b5 : \u211d), 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2016MellinTransform (fun x => \u2191(Smooth1 SmoothingF \u03b5 x)) s\u2016 \u2264 D * (\u03b5 * \u2016s\u2016 ^ 2)\u207b\u00b9\nC : \u211d := \u22ef\nsInfPos : 0 < sInf ((fun t => \u2016\u2191\u03c3\u2082 + \u2191t * (1 - \u2191\u03c3\u2082) - 3 * I\u2016\u208a ^ 2) '' Icc 0 1)\nCpos : 0 \u2264 C\nX : \u211d\nX_gt_three : 3 < X\n\u03b5 : \u211d\n\u03b5_pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\nTlb : \u211d := \u22ef\nthis\u271d : 3 < Tlb\nT : \u211d\nT_gt_Tlb : Tlb < T\n\u03c3\u2081 : \u211d := \u22ef\n\u03c3\u2082_le_\u03c3\u2081 : \u03c3\u2082 \u2264 \u03c3\u2081\nmin\u03c3\u2082\u03c3\u2081 : min \u03c3\u2082 \u03c3\u2081 = \u03c3\u2082\nmax\u03c3\u2082\u03c3\u2081 : max \u03c3\u2082 \u03c3\u2081 = \u03c3\u2081\n\u03c3\u2081_lt_one : \u03c3\u2081 < 1\nthis : 1 * C * X * X ^ (-A / Real.log T ^ 9) / \u03b5 = 1 * (C * X * X ^ (-A / Real.log T ^ 9) / \u03b5)\nf : \u211d \u2192 \u2102 := \u22ef\ntemp :\n  \u2016\u222b (\u03c3 : \u211d) in \u03c3\u2082..\u03c3\u2081,\n        -deriv riemannZeta (\u2191\u03c3 - 3 * I) / riemannZeta (\u2191\u03c3 - 3 * I) *\n            MellinTransform (fun x => \u2191(Smooth1 SmoothingF \u03b5 x)) (\u2191\u03c3 - 3 * I) *\n          \u2191X ^ (\u2191\u03c3 - 3 * I)\u2016 \u2264\n    C * X * X ^ (-A / Real.log T ^ 9) / \u03b5 * |\u03c3\u2081 - \u03c3\u2082|\n\u22a2 |\u03c3\u2081 - \u03c3\u2082| \u2264 1",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/e99e6f7b4a57098ded666cd0ed64aae7078440a3/PrimeNumberTheoremAnd/MediumPNT.lean#L6587"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-07-21T17:30:26-04:00",
        "inclusion_date": "2025-07-21T23:21:07.188403+00:00"
      },
      "id": "71bd7b8e56d34bef836c48dd26334b48d018ca76f5e39e3a867ca751c55d755d"
    },
    {
      "repo": {
        "remote": "https://github.com/emilyriehl/infinity-cosmos",
        "branch": "main",
        "commit": "8edc65d468b3ed2e4933c7969ec53bd4d904e753",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean",
        "start_line": 159,
        "start_column": 39,
        "end_line": 159,
        "end_column": 44
      },
      "debug_info": {
        "goal": "A : SSet\nf g : A _\u298b1\u298c\ninst\u271d : A.Quasicategory\n\u22a2 HomotopicL f g \u2194 HomotopicR f g",
        "url": "https://github.com/emilyriehl/infinity-cosmos/blob/8edc65d468b3ed2e4933c7969ec53bd4d904e753/InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean#L159"
      },
      "metadata": {
        "blame_email_hash": "f0d6831918ab",
        "blame_date": "2024-12-05T19:17:58+01:00",
        "inclusion_date": "2025-05-05T23:23:15.244940+00:00"
      },
      "id": "39507d56dd2a9b4e7d6eecf744a216cd44fcf0dfaf6843976224448860244af0"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "3d8e1994e2522b249c36b71db17765a779eaa787",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "LeanByExample/Tactic/Ring.lean",
        "start_line": 115,
        "start_column": 2,
        "end_line": 115,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m n : MyNat\n\u22a2 n * (n + m) = n * n + n * m",
        "url": "https://github.com/lean-ja/lean-by-example/blob/3d8e1994e2522b249c36b71db17765a779eaa787/LeanByExample/Tactic/Ring.lean#L115"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2025-02-17T22:51:43+09:00",
        "inclusion_date": "2025-09-15T04:41:33.921583+00:00"
      },
      "id": "7ee58e211ede96ca1d73ec0f037dee43a1b44c305415c25cfff00dff68fcc594"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/MoreRuzsaDist.lean",
        "start_line": 873,
        "start_column": 82,
        "end_line": 873,
        "end_column": 87
      },
      "debug_info": {
        "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\nhm : m \u2265 2\n\u03a9 : Type u_9\nh\u03a9 : MeasureSpace \u03a9\nX : Fin m \u2192 \u03a9 \u2192 G\nh_indep : iIndepFun X \u2119\n\u22a2 d[\u2211 i, X i # \u2211 i, X i] \u2264 2 * D[X ; fun x => h\u03a9]",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L873"
      },
      "metadata": {
        "blame_email_hash": "7d87c0724495",
        "blame_date": "2025-03-07T08:53:46+01:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "c2520a606cf7e2d5f451db4e8ba0e272bcf4c9aa6a21d0424c7abe5524c58452"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "D-Thomine/measure_entropy",
        "commit": "3a27701a2da4247ea753644713592f431c13db82",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/Dynamics/MeasureEntropy/CoverEntropy.lean",
        "start_line": 57,
        "start_column": 4,
        "end_line": 57,
        "end_column": 9
      },
      "debug_info": {
        "goal": "X : Type u_1\ninst\u271d\u00b9 : MeasurableSpace X\nT : X \u2192 X\nF : Set X\n\u03bc : Measure X\nn : \u2115\nhn : 1 \u2264 n\ns : Set (Set X)\ninst\u271d : Fintype \u2191s\nh : F \u2286 \u22c3 A \u2208 s, A\n\u22a2 \u03bc (\u22c3 A \u2208 s, A) \u2264 \u2211 A \u2208 s.toFinset, \u03bc A",
        "url": "https://github.com/leanprover-community/mathlib4/blob/3a27701a2da4247ea753644713592f431c13db82/Mathlib/Dynamics/MeasureEntropy/CoverEntropy.lean#L57"
      },
      "metadata": {
        "blame_email_hash": "93c5c887a46d",
        "blame_date": "2025-06-17T10:44:39+02:00",
        "inclusion_date": "2025-06-18T03:01:43.222918+00:00"
      },
      "id": "ae2c8bb8ae0fd5d5956792d5582cce1e53aab8e76940311d7f1d2462312ed83f"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 100,
        "start_column": 4,
        "end_line": 100,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type u_1\nS : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : CommRing S\nT : Type u_3\ninst\u271d : CommRing T\ng : S \u2243+* T\nf : R \u2243+* S\n\u22a2 \u2200 (x y : R), g (f (x * y)) = g (f x) * g (f y)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L100"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "56627482ab8e7d7df0ca6cfb46936cd48666c67f451b36e41e2795a910d98126"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "duplex-sponge-fs",
        "commit": "0fc5523909130c6100b03cf4a7afb3566f27e485",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/NonBinaryField/KoalaBear.lean",
        "start_line": 175,
        "start_column": 20,
        "end_line": 175,
        "end_column": 25
      },
      "debug_info": {
        "goal": "bits : Fin (KoalaBear.twoAdicity + 1)\nm : \u2115\nhm : Nat.Prime m\nhm' : m \u2223 2 ^ \u2191bits\n\u22a2 m = 2",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0fc5523909130c6100b03cf4a7afb3566f27e485/ArkLib/Data/FieldTheory/NonBinaryField/KoalaBear.lean#L175"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-09-12T02:34:43-04:00",
        "inclusion_date": "2025-09-18T04:30:57.445731+00:00"
      },
      "id": "2c1f378b3b69a7abf1ae02226fe6de2cf6de3724f724678d505b8870f3d25c22"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "Diagram",
        "commit": "42603e896f018e736a46cedd31f4e0c7f0c49f7d",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PhysLean/Mathematics/Trigonometry/Tanh.lean",
        "start_line": 37,
        "start_column": 2,
        "end_line": 37,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u211d\n\u22a2 -1 < tanh x",
        "url": "https://github.com/HEPLean/PhysLean/blob/42603e896f018e736a46cedd31f4e0c7f0c49f7d/PhysLean/Mathematics/Trigonometry/Tanh.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "9f36d68419bf",
        "blame_date": "2025-08-15T16:14:41+01:00",
        "inclusion_date": "2025-09-08T16:21:56.648698+00:00"
      },
      "id": "224730786d4d8acc8599e578f65da6c04d1f4d2a66734dc80b9f66d79236a7e7"
    },
    {
      "repo": {
        "remote": "https://github.com/ufmg-smite/lean-smt",
        "branch": "main",
        "commit": "5d35ecc273cb1f8344b23f6d23dd69f33601ed31",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Test/String/Contains.lean",
        "start_line": 5,
        "start_column": 2,
        "end_line": 5,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 \"a\".contains 'a' = true",
        "url": "https://github.com/ufmg-smite/lean-smt/blob/5d35ecc273cb1f8344b23f6d23dd69f33601ed31/Test/String/Contains.lean#L5"
      },
      "metadata": {
        "blame_email_hash": "a29bc6f92c6c",
        "blame_date": "2022-11-12T16:45:23-08:00",
        "inclusion_date": "2025-05-12T00:38:16.660582+00:00"
      },
      "id": "80d094f4e3c509afd0a796f85ff118e070893c7da20af85fedc39aa7fedc301d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 374,
        "start_column": 45,
        "end_line": 374,
        "end_column": 50
      },
      "debug_info": {
        "goal": "f g h : \u2115+ \u2192 \u2115\nh\u2080 : \u2200 (x : \u2115+), f x = 12 * \u2191x + 7\nh\u2081 : \u2200 (x : \u2115+), g x = 5 * \u2191x + 2\nh\u2082 : \u2200 (x : \u2115+), h x = (f x).gcd (g x)\nh\u2083 : Fintype \u2191(Set.range h)\n\u22a2 \u2211 k \u2208 (Set.range h).toFinset, k = 12",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L374"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "6ea320e2d578b1ef85d52df0a0f16dd1cccb3b3564b1459f579b64fc7c94f4e1"
    },
    {
      "repo": {
        "remote": "https://github.com/lecopivo/SciLean",
        "branch": "bump-v4.19.0-rc2",
        "commit": "612daaaa9f63016cd8d06df8e634e4d858d26d8e",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "SciLean/Modules/Prob/TestFunctionExtension.lean",
        "start_line": 36,
        "start_column": 11,
        "end_line": 36,
        "end_column": 16
      },
      "debug_info": {
        "goal": "X : Sort u_1\nY : Type u_2\ninst\u271d\u00b9 : NormedAddCommGroup Y\ninst\u271d : NormedSpace \u211d Y\nF : (X \u2192 \u211d) \u2192 \u211d\nG : (X \u2192 Y) \u2192 Y\nf : X \u2192 Y\nh : \u2200 (\u03c6 : X \u2192 \u211d) (y : Y), F \u03c6 \u2022 y = G fun x => \u03c6 x \u2022 y\n\u22a2 testFunctionExtension F f = G f",
        "url": "https://github.com/lecopivo/SciLean/blob/612daaaa9f63016cd8d06df8e634e4d858d26d8e/SciLean/Modules/Prob/TestFunctionExtension.lean#L36"
      },
      "metadata": {
        "blame_email_hash": "c7c59fe619b9",
        "blame_date": "2024-02-08T10:58:37-05:00",
        "inclusion_date": "2025-05-29T03:10:06.182872+00:00"
      },
      "id": "29518c5d6253911c7eb3fa92f134ea72db67c78dfd03bdcb61589c8a8ed8868f"
    },
    {
      "repo": {
        "remote": "https://github.com/cmu-l3/llmlean",
        "branch": "kimina-pr",
        "commit": "126a6b2af37727c4d81bb49f6af6b354a380145e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LLMleanTest/Examples2.lean",
        "start_line": 165,
        "start_column": 24,
        "end_line": 165,
        "end_column": 29
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_3\nf : \u03b1 \u2192 Set \u03b1\nsurjf : Surjective f\nS : Set \u03b1 := {i | i \u2209 f i}\nj : \u03b1\nh : f j = S\nh\u2081 : j \u2209 f j\nh\u2082 : j \u2208 S\n\u22a2 j \u2209 S",
        "url": "https://github.com/cmu-l3/llmlean/blob/126a6b2af37727c4d81bb49f6af6b354a380145e/LLMleanTest/Examples2.lean#L165"
      },
      "metadata": {
        "blame_email_hash": "3ab0971ac342",
        "blame_date": "2024-07-23T21:27:45-04:00",
        "inclusion_date": "2025-06-11T03:39:01.065377+00:00"
      },
      "id": "b77264b0933fd1eb4a2c4b62ab8f1370c1384392c147cd9e8a0b025d332310b8"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_24.lean",
        "start_line": 38,
        "start_column": 76,
        "end_line": 38,
        "end_column": 81
      },
      "debug_info": {
        "goal": "n : \u2115\nM : Matrix (Fin n) (Fin n) \u211d\n\u22a2 M \u2208 doublyStochastic \u211d (Fin n) \u2192 M.permanent \u2265 \u2191n.factorial / \u2191n ^ n",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_24.lean#L38"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2024-11-20T15:34:40+01:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "7a627f3c2fecee05b5bdba2abab0e388c2c96db080432eebe6e2390c65c1ef67"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/10FunctionsAndOperators.lean",
        "start_line": 298,
        "start_column": 34,
        "end_line": 298,
        "end_column": 39
      },
      "debug_info": {
        "goal": "m : Type u_4\nn : Type u_5\ninst\u271d\u00b3 : Fintype m\ninst\u271d\u00b2 : Fintype n\ninst\u271d\u00b9 : DecidableEq m\ninst\u271d : DecidableEq n\nA : Matrix m n \u211d\n\u22a2 \u2016A\u2016 \u2264 \u221a\u2191(Fintype.card n) * \u2016A\u2016",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/10FunctionsAndOperators.lean#L298"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2025-08-06T00:45:33+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "98c356e198c5da6156c1a46a6f0b141518af0ff4572a65724384f06184160f74"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2020P3.lean",
        "start_line": 32,
        "start_column": 2,
        "end_line": 32,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nc : Fin (4 * n) \u2192 Fin n\nh : \u2200 (i : Fin n), #{j | c j = i} = 4\n\u22a2 \u2203 S, \u2211 i \u2208 S, (\u2191i + 1) = \u2211 i \u2208 S\u1d9c, (\u2191i + 1) \u2227 \u2200 (i : Fin n), #({j \u2208 S | c j = i}) = 2",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2020P3.lean#L32"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2025-04-08T13:09:24-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "70eb82b882388275af62794a7d8761678aee0776c17f603eefa6183ecd229e75"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "letterless-provlogic",
        "commit": "3fb2a68cedadf550c96bbc4c41bd99693774fc92",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/Classification/LetterlessTrace.lean",
        "start_line": 1062,
        "start_column": 8,
        "end_line": 1062,
        "end_column": 13
      },
      "debug_info": {
        "goal": "T : ArithmeticTheory\ninst\u271d\u00b2 : \ud835\udddc\ud835\udeba\u2081 \u2aaf T\ninst\u271d\u00b9 : Theory.\u0394\u2081 T\ninst\u271d : \u2115 \u22a7\u2098* T\nX : Modal.FormulaSet \u2115\nX_letterless : @LO.Modal.FormulaSet.letterless \u2115 X\nU : ArithmeticTheory\neU : T + \u2191((fun x => \u2191(LO.FirstOrder.ArithmeticTheory.letterlessStandardRealization T inst\u271d\u00b9) x) '' X) = U\nA : Modal.Formula \u2115\nh : \u2200 (f : T.StandardRealization), U \u22a2!. \u2191f A\nthis : U \u22a2!. \u2191(GL.uniformStandardRealization T) A\n\u0393 : Finset (Modal.Formula \u2115)\nh\u0393X : \u2191\u0393 \u2286 X\nH :\n  T \u22a2!.\n    (Finset.image (fun x => \u2191(LO.FirstOrder.ArithmeticTheory.letterlessStandardRealization T inst\u271d\u00b9) x) \u0393).conj \u279d\n      \u2191(GL.uniformStandardRealization T) A\n\u22a2 \u2191T \u22a2!\n    \u2191(GL.uniformStandardRealization T) \u0393.conj \u279d\n      (Finset.image (fun x => \u2191(LO.FirstOrder.ArithmeticTheory.letterlessStandardRealization T inst\u271d\u00b9) x) \u0393).conj",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/3fb2a68cedadf550c96bbc4c41bd99693774fc92/Foundation/ProvabilityLogic/Classification/LetterlessTrace.lean#L1062"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-09-15T18:42:26+09:00",
        "inclusion_date": "2025-09-16T03:34:53.561013+00:00"
      },
      "id": "f16c4d57231bfad90d00415a1405a86cfde45f4f292dc452eb972311dbb92a44"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "ineq_6_3_30",
        "commit": "a11d007aa69834cdf5b6b203a05898acb98d4605",
        "lean_version": "v4.22.0-rc2"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainTileCount.lean",
        "start_line": 663,
        "start_column": 6,
        "end_line": 663,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case neg.hs\nX : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Set (\ud835\udd13 X)\n\u03d1 : \u0398 X\nN : \u2115\nL : Grid X\nhL : L \u2208 @Antichain.\ud835\udcdb' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N\nheq :\n  \u00ac@Antichain.p'' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL =\n      @Antichain.p\u0398 X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL\nhp\u03b8 :\n  dist_{\ud835\udd20 (@Antichain.p\u0398 X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL),\n        \u2191(defaultD a) ^ \ud835\udd30 (@Antichain.p\u0398 X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL) / 4}\n      (\ud835\udcac (@Antichain.p\u0398 X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL)) \u03d1 <\n    2 ^ (N + 1)\nhp'' :\n  dist_{\ud835\udd20 (@Antichain.p'' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL),\n        \u2191(defaultD a) ^ \ud835\udd30 (@Antichain.p'' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL) / 4}\n      (\ud835\udcac (@Antichain.p'' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL)) \u03d1 <\n    2 ^ (N + 1)\nthis :\n  s (\ud835\udcd8 (@Antichain.p'' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL)) \u2264\n    s (@Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL)\n\u22a2 \ud835\udd30 (@Antichain.p'' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL) <\n    \ud835\udd30 (@Antichain.p\u0398 X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL)",
        "url": "https://github.com/fpvandoorn/carleson/blob/a11d007aa69834cdf5b6b203a05898acb98d4605/Carleson/Antichain/AntichainTileCount.lean#L663"
      },
      "metadata": {
        "blame_email_hash": "b2f50b2f722a",
        "blame_date": "2025-07-08T16:45:22+02:00",
        "inclusion_date": "2025-07-11T03:02:12.360312+00:00"
      },
      "id": "452961785039f75122ff43cc7ae1280f7878ef77c0acbd4a98fb6684f28ad37a"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-hardly-ramified",
        "commit": "60be88a841fa232b563ea16600befe5efbfb3d07",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FLT/Deformations/LiftFunctor.lean",
        "start_line": 99,
        "start_column": 9,
        "end_line": 99,
        "end_column": 14
      },
      "debug_info": {
        "goal": "n : Type\ninst\u271d\u2077 : Fintype n\ninst\u271d\u2076 : DecidableEq n\nG : Type u\ninst\u271d\u2075 : Group G\ninst\u271d\u2074 : TopologicalSpace G\n\ud835\udcde : Type u\ninst\u271d\u00b3 : CommRing \ud835\udcde\ninst\u271d\u00b2 : IsLocalRing \ud835\udcde\nK : Type u\ninst\u271d\u00b9 : Field K\ninst\u271d : NumberField K\nv : IsDedekindDomain.HeightOneSpectrum (NumberField.RingOfIntegers K)\nU\u271d V\u271d : ProartinianCat \ud835\udcde\n\u22a2 failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/60be88a841fa232b563ea16600befe5efbfb3d07/FLT/Deformations/LiftFunctor.lean#L99"
      },
      "metadata": {
        "blame_email_hash": "a9aab1f797ea",
        "blame_date": "2025-07-31T17:27:22+01:00",
        "inclusion_date": "2025-09-18T04:05:26.332171+00:00"
      },
      "id": "cd60977ba69126f8259aed1f4ed5e0751e0082fea99a205491f9cb077add980a"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "d279b56adead908de8bd086ea46b82895cf4f12c",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 46,
        "start_column": 12,
        "end_line": 46,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case snd.snd\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : MyProd \u03b1 (MyProd \u03b2 \u03b3)\n\u22a2 p.snd.snd = q.snd.snd",
        "url": "https://github.com/leanprover-community/aesop/blob/d279b56adead908de8bd086ea46b82895cf4f12c/AesopTest/ExtScript.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-04-30T23:33:22.583043+00:00"
      },
      "id": "b1d791d51e35967d109fa20959f15cade1f426f0ab9f1d4f61648afd835f9d34"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 59,
        "start_column": 4,
        "end_line": 59,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case intro.intro.intro.refine_2\nG : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(#(A ^ 2)) \u2264 K * \u2191(#A)\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 g \u2229 A))}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191(#S) \u2264 K ^ 2 * \u2191(#A)\nF : Finset G\nhFA : F \u2286 A\nhFcard : \u2191(#F) \u2264 2 * K\nhASF : A \u2286 S * F\n\u22a2 \u2191(#(S ^ 2)) \u2264 16 * K ^ 12 * \u2191(#A)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L59"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "721cb512ffad45e7933f66dd12e701f60a41596bd9a7b5c7473e45302bb65d93"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "e99e6f7b4a57098ded666cd0ed64aae7078440a3",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 7019,
        "start_column": 6,
        "end_line": 7019,
        "end_column": 11
      },
      "debug_info": {
        "goal": "reOne : re 1 = 1\nimOne : im 1 = 0\nreThree : re 3 = 3\nimThree : im 3 = 0\nelt3 : Real.exp 1 < 3\nSmoothingF : \u211d \u2192 \u211d\nsupportSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\nContDiffSmoothingF : ContDiff \u211d 1 SmoothingF\n\u03c3\u2082' : \u211d\n\u03c3\u2082'_lt_one : \u03c3\u2082' < 1\nholoOn : HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (uIcc \u03c3\u2082' 2 \u00d7\u2102 uIcc (-3) 3 \\ {1})\n\u03c3\u2082 : \u211d := max (1 / 2) \u03c3\u2082'\n\u03c3\u2082InIoo : \u03c3\u2082 \u2208 Ioo 0 1\nC' : \u211d :=\n  sSup\n    ((fun t => \u2191\u2016-deriv riemannZeta (\u2191\u03c3\u2082 + \u2191t * (1 - \u2191\u03c3\u2082) + 3 * I) / riemannZeta (\u2191\u03c3\u2082 + \u2191t * (1 - \u2191\u03c3\u2082) + 3 * I)\u2016\u208a) ''\n      Icc 0 1)\nS : Set \u211d :=\n  (fun t => \u2191\u2016-deriv riemannZeta (\u2191\u03c3\u2082 + \u2191t * (1 - \u2191\u03c3\u2082) + 3 * I) / riemannZeta (\u2191\u03c3\u2082 + \u2191t * (1 - \u2191\u03c3\u2082) + 3 * I)\u2016\u208a) ''\n    Icc 0 1\nsSupS :\n  sSup\n      ((fun t => \u2191\u2016-deriv riemannZeta (\u2191\u03c3\u2082 + \u2191t * (1 - \u2191\u03c3\u2082) + 3 * I) / riemannZeta (\u2191\u03c3\u2082 + \u2191t * (1 - \u2191\u03c3\u2082) + 3 * I)\u2016\u208a) ''\n        Icc 0 1) =\n    sSup S\nbddAboveS : BddAbove S\nCPrimePos : 0 < C'\nCPrimeNonneg : 0 \u2264 C'\nD : \u211d\nDpos : 0 < D\nMellinSmooth1bBound :\n  \u2200 (\u03c3\u2081 : \u211d),\n    0 < \u03c3\u2081 \u2192\n      \u2200 (s : \u2102),\n        \u03c3\u2081 \u2264 s.re \u2192\n          s.re \u2264 2 \u2192\n            \u2200 (\u03b5 : \u211d), 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2016MellinTransform (fun x => \u2191(Smooth1 SmoothingF \u03b5 x)) s\u2016 \u2264 D * (\u03b5 * \u2016s\u2016 ^ 2)\u207b\u00b9\nC : \u211d := C' * D / \u2191(sInf ((fun t => \u2016\u2191\u03c3\u2082 + \u2191t * (1 - \u2191\u03c3\u2082) + 3 * I\u2016\u208a ^ 2) '' Icc 0 1))\nsInfPos : 0 < sInf ((fun t => \u2016\u2191\u03c3\u2082 + \u2191t * (1 - \u2191\u03c3\u2082) + 3 * I\u2016\u208a ^ 2) '' Icc 0 1)\nCpos : 0 < C\nA : \u211d\nAbd : A \u2208 Ioc 0 (1 / 2)\nh\u271d :\n  \u2203 C,\n    \u2203 (_ : 0 < C),\n      \u2200 (\u03c3 T t : \u211d),\n        3 < |t| \u2192\n          |t| \u2264 T \u2192\n            \u03c3 \u2208 Ico (1 - A / Real.log T ^ 9) 1 \u2192\n              \u2016deriv riemannZeta (\u2191\u03c3 + \u2191t * I) / riemannZeta (\u2191\u03c3 + \u2191t * I)\u2016 \u2264 C * Real.log T ^ 9\nX : \u211d\nX_gt_three : 3 < X\n\u03b5 : \u211d\n\u03b5_pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\nTlb : \u211d := max 4 (max (Real.exp (A ^ 9\u207b\u00b9)) (Real.exp ((A / (1 - \u03c3\u2082')) ^ 9\u207b\u00b9)))\nthis\u271d : 3 < Tlb\nT : \u211d\nT_gt_Tlb : Tlb < T\n\u03c3\u2081 : \u211d := 1 - A / Real.log T ^ 9\n\u03c3\u2082_le_\u03c3\u2081 : \u03c3\u2082 \u2264 \u03c3\u2081\nmin\u03c3\u2082\u03c3\u2081 : min \u03c3\u2082 \u03c3\u2081 = \u03c3\u2082\nmax\u03c3\u2082\u03c3\u2081 : max \u03c3\u2082 \u03c3\u2081 = \u03c3\u2081\n\u03c3\u2081_lt_one : \u03c3\u2081 < 1\nthis : 1 * C * X * X ^ (-A / Real.log T ^ 9) / \u03b5 = 1 * (C * X * X ^ (-A / Real.log T ^ 9) / \u03b5)\nf : \u211d \u2192 \u2102 :=\n  fun \u03c3 =>\n    -deriv riemannZeta (\u2191\u03c3 + 3 * I) / riemannZeta (\u2191\u03c3 + 3 * I) *\n        MellinTransform (fun x => \u2191(Smooth1 SmoothingF \u03b5 x)) (\u2191\u03c3 + 3 * I) *\n      \u2191X ^ (\u2191\u03c3 + 3 * I)\ntemp :\n  \u2016\u222b (\u03c3 : \u211d) in \u03c3\u2082..\u03c3\u2081,\n        -deriv riemannZeta (\u2191\u03c3 + 3 * I) / riemannZeta (\u2191\u03c3 + 3 * I) *\n            MellinTransform (fun x => \u2191(Smooth1 SmoothingF \u03b5 x)) (\u2191\u03c3 + 3 * I) *\n          \u2191X ^ (\u2191\u03c3 + 3 * I)\u2016 \u2264\n    C * X * X ^ (-A / Real.log T ^ 9) / \u03b5 * |\u03c3\u2081 - \u03c3\u2082|\n\u22a2 C * X * X ^ (-A / Real.log T ^ 9) / \u03b5 * |\u03c3\u2081 - \u03c3\u2082| \u2264 C * X * X ^ (-A / Real.log T ^ 9) / \u03b5",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/e99e6f7b4a57098ded666cd0ed64aae7078440a3/PrimeNumberTheoremAnd/MediumPNT.lean#L7019"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-07-21T16:24:47-04:00",
        "inclusion_date": "2025-07-21T23:21:07.188403+00:00"
      },
      "id": "655deb4b62d6366c87eadad7968135f27721a305f99058b2fe6590ce221d588f"
    },
    {
      "repo": {
        "remote": "https://github.com/emilyriehl/infinity-cosmos",
        "branch": "main",
        "commit": "7fa2a3a7a86ac59ac1199ef98e16b09eda86bd8a",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean",
        "start_line": 159,
        "start_column": 39,
        "end_line": 159,
        "end_column": 44
      },
      "debug_info": {
        "goal": "A : SSet\nf g : A.obj (Opposite.op (SimplexCategory.mk 1))\ninst\u271d : A.Quasicategory\n\u22a2 @SSet.HomotopicL A f g \u2194 @SSet.HomotopicR A f g",
        "url": "https://github.com/emilyriehl/infinity-cosmos/blob/7fa2a3a7a86ac59ac1199ef98e16b09eda86bd8a/InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean#L159"
      },
      "metadata": {
        "blame_email_hash": "f0d6831918ab",
        "blame_date": "2024-12-05T19:17:58+01:00",
        "inclusion_date": "2025-06-28T03:14:00.578727+00:00"
      },
      "id": "c1a455aebf40d67f7b59397e11238339a1e193e63c9c3459931118e1f4f7d2e7"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "LeanByExample/Attribute/Aesop.lean",
        "start_line": 60,
        "start_column": 2,
        "end_line": 60,
        "end_column": 7
      },
      "debug_info": {
        "goal": "P : Prop\nhp : P\n\u22a2 MyAnd P P",
        "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Attribute/Aesop.lean#L60"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2025-01-08T22:40:33+09:00",
        "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
      },
      "id": "9a3464a8a3704a49b2292a811715e854fc1a1287ea0a702edbd56d942da7a48e"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "58ff9ddb3f6bc3860fb0316cc210fca5d488ba62",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PFR/BoundingMutual.lean",
        "start_line": 36,
        "start_column": 79,
        "end_line": 36,
        "end_column": 84
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Type u\nh\u03a9 : MeasureSpace \u03a9\nX : Fin p.m \u2192 \u03a9 \u2192 G\nh_indep : iIndepFun X volume\nh_min : multiTauMinimizes p (fun x => \u03a9) (fun x => h\u03a9) X\n\u03a9' : Type u_1\ninst\u271d : MeasureSpace \u03a9'\nX' : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh_indep' : iIndepFun X' volume\nhperm : \u2200 (j : Fin p.m), \u2203 e, IdentDistrib (fun \u03c9 i => X' (i, j) \u03c9) (fun \u03c9 i => X (e i) \u03c9) volume volume\n\u22a2 I[fun \u03c9 j => \u2211 i, X' (i, j) \u03c9 : fun \u03c9 i => \u2211 j, X' (i, j) \u03c9|fun \u03c9 => \u2211 i, \u2211 j, X' (i, j) \u03c9] \u2264\n    4 * \u2191p.m ^ 2 * p.\u03b7 * D[X ; fun x => h\u03a9]",
        "url": "https://github.com/teorth/pfr/blob/58ff9ddb3f6bc3860fb0316cc210fca5d488ba62/PFR/BoundingMutual.lean#L36"
      },
      "metadata": {
        "blame_email_hash": "7d87c0724495",
        "blame_date": "2025-03-07T08:53:46+01:00",
        "inclusion_date": "2025-07-05T05:06:27.171280+00:00"
      },
      "id": "13119c6cdf0d8224e85155d8e3a963ce561127eccebd5cdbe1ac2f62143677c4"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "D-Thomine/measure_entropy",
        "commit": "3a27701a2da4247ea753644713592f431c13db82",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/Dynamics/MeasureEntropy/CoverEntropy.lean",
        "start_line": 59,
        "start_column": 4,
        "end_line": 59,
        "end_column": 9
      },
      "debug_info": {
        "goal": "X : Type u_1\ninst\u271d\u00b9 : MeasurableSpace X\nT : X \u2192 X\nF : Set X\n\u03bc : Measure X\nn\u271d : \u2115\nhn : 1 \u2264 n\u271d\ns : Set (Set X)\ninst\u271d : Fintype \u2191s\nh : F \u2286 \u22c3 A \u2208 s, A\nn : \u2115\nn_1 : 1 \u2264 n\nhin : \u2191(\u03bc F) ^ n \u2264 @Dynamics.My_Sum X inst\u271d\u00b9 T \u03bc n s inst\u271d\n\u22a2 \u2191(\u03bc F) ^ (n + 1) \u2264 @Dynamics.My_Sum X inst\u271d\u00b9 T \u03bc (n + 1) s inst\u271d",
        "url": "https://github.com/leanprover-community/mathlib4/blob/3a27701a2da4247ea753644713592f431c13db82/Mathlib/Dynamics/MeasureEntropy/CoverEntropy.lean#L59"
      },
      "metadata": {
        "blame_email_hash": "93c5c887a46d",
        "blame_date": "2025-06-17T10:44:39+02:00",
        "inclusion_date": "2025-06-18T03:01:43.222918+00:00"
      },
      "id": "264a0c9324792000c6be29c4c9259ba37f95480935f8a81ab722b300bfc20f18"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 98,
        "start_column": 4,
        "end_line": 98,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type u_1\nS : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : CommRing S\nT : Type u_3\ninst\u271d : CommRing T\ng : S \u2243+* T\nf : R \u2243+* S\n\u22a2 \u2200 (x y : R), g (f (x + y)) = g (f x) + g (f y)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L98"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "e72f875226dbedb8994b8112334d78288da19bae73cbc8834b9de77b47161308"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "duplex-sponge-fs",
        "commit": "0fc5523909130c6100b03cf4a7afb3566f27e485",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/Data/Hash/Poseidon2.lean",
        "start_line": 640,
        "start_column": 76,
        "end_line": 640,
        "end_column": 81
      },
      "debug_info": {
        "goal": "params\u271d params : Poseidon2.Params\nstate : Vector KoalaBear.Field (Poseidon2.Params.width params)\nrcs : Vector KoalaBear.Field\n  (Poseidon2.Params.numFullRounds params * Poseidon2.Params.width params + Poseidon2.Params.numPartialRounds params) :=\n  Poseidon2.Params.roundConstants params\nst0 : Vector KoalaBear.Field (Poseidon2.Params.width params) := Poseidon2.externalLinearLayer params state\nst_acc : Vector KoalaBear.Field (Poseidon2.Params.width params)\nrc_idx : Fin (Poseidon2.Params.halfNumFullRounds params)\n\u22a2 min (\u2191rc_idx + Poseidon2.Params.width params)\n        (Poseidon2.Params.numFullRounds params * Poseidon2.Params.width params +\n          Poseidon2.Params.numPartialRounds params) -\n      \u2191rc_idx =\n    Poseidon2.Params.width params",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0fc5523909130c6100b03cf4a7afb3566f27e485/ArkLib/Data/Hash/Poseidon2.lean#L640"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-09-12T02:34:43-04:00",
        "inclusion_date": "2025-09-18T04:30:57.445731+00:00"
      },
      "id": "1be780c567c2fe118db3983b2ea91da4986478fe95a13e3eaaced35c50cbb4c3"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "Diagram",
        "commit": "42603e896f018e736a46cedd31f4e0c7f0c49f7d",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PhysLean/Mathematics/Trigonometry/Tanh.lean",
        "start_line": 42,
        "start_column": 2,
        "end_line": 42,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u211d\n\u22a2 |tanh x| < 1",
        "url": "https://github.com/HEPLean/PhysLean/blob/42603e896f018e736a46cedd31f4e0c7f0c49f7d/PhysLean/Mathematics/Trigonometry/Tanh.lean#L42"
      },
      "metadata": {
        "blame_email_hash": "9f36d68419bf",
        "blame_date": "2025-08-15T16:14:41+01:00",
        "inclusion_date": "2025-09-08T16:21:56.648698+00:00"
      },
      "id": "55170c34c8e65cd56b1199a13235ec3a7fdf4499f20dd438b82ce66989e513bf"
    },
    {
      "repo": {
        "remote": "https://github.com/ufmg-smite/lean-smt",
        "branch": "main",
        "commit": "e994ff05c81214b3397f8b59aaeca4c302bd41dc",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Test/BitVec/Shift.lean",
        "start_line": 8,
        "start_column": 2,
        "end_line": 8,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : BitVec 2\n\u22a2 x ++ y = zeroExtend 4 x <<< 2#2 ||| zeroExtend 4 y",
        "url": "https://github.com/ufmg-smite/lean-smt/blob/e994ff05c81214b3397f8b59aaeca4c302bd41dc/Test/BitVec/Shift.lean#L8"
      },
      "metadata": {
        "blame_email_hash": "2d71a621927f",
        "blame_date": "2022-08-05T17:11:15+02:00",
        "inclusion_date": "2025-05-17T23:11:31.262140+00:00"
      },
      "id": "10966eb3e5e3ab574d4d8098887b6d4905ac78eac95d16e1bd2d3e94afbafbfb"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 388,
        "start_column": 24,
        "end_line": 388,
        "end_column": 29
      },
      "debug_info": {
        "goal": "S : Finset \u211d\nh\u2080 : \u2200 (x : \u211d), x \u2208 S \u2194 (x + 3) ^ 2 = 121\n\u22a2 \u2211 k \u2208 S, k = -6",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L388"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "259479c23dae9ccd58211e041252463433799bf7f65c043eaded5305e29a9f2c"
    },
    {
      "repo": {
        "remote": "https://github.com/lecopivo/SciLean",
        "branch": "bump-v4.19.0-rc2",
        "commit": "612daaaa9f63016cd8d06df8e634e4d858d26d8e",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "SciLean/Util/Alternatives.lean",
        "start_line": 95,
        "start_column": 7,
        "end_line": 95,
        "end_column": 12
      },
      "debug_info": {
        "goal": "a b : Nat\nh : a = b\n\u22a2 (fun x =>\n      let y := x + x + x + x;\n      y + y) =\n    fun x =>\n    let y := x + x + x + x;\n    let y := x + x + x + x;\n    x + x + x + x",
        "url": "https://github.com/lecopivo/SciLean/blob/612daaaa9f63016cd8d06df8e634e4d858d26d8e/SciLean/Util/Alternatives.lean#L95"
      },
      "metadata": {
        "blame_email_hash": "c7c59fe619b9",
        "blame_date": "2023-04-26T17:56:32-04:00",
        "inclusion_date": "2025-05-29T03:10:06.182872+00:00"
      },
      "id": "e3f23306dea9b48d572c6813e4bfa042f392a9c8a9c508c705e40a9a6faed581"
    },
    {
      "repo": {
        "remote": "https://github.com/cmu-l3/llmlean",
        "branch": "kimina-pr",
        "commit": "126a6b2af37727c4d81bb49f6af6b354a380145e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LLMleanTest/Examples2.lean",
        "start_line": 24,
        "start_column": 2,
        "end_line": 24,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\nf : \u03b1 \u2192 \u03b2\ns t : Set \u03b1\nu v : Set \u03b2\n\u22a2 s \u2286 f \u207b\u00b9' (f '' s)",
        "url": "https://github.com/cmu-l3/llmlean/blob/126a6b2af37727c4d81bb49f6af6b354a380145e/LLMleanTest/Examples2.lean#L24"
      },
      "metadata": {
        "blame_email_hash": "3ab0971ac342",
        "blame_date": "2024-07-23T17:17:09-04:00",
        "inclusion_date": "2025-06-11T03:39:01.065377+00:00"
      },
      "id": "d4821cb83db4bf1b1bb4c47c49206b7454dd8cefcaf5ede61618c69921372da9"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_06.lean",
        "start_line": 258,
        "start_column": 38,
        "end_line": 258,
        "end_column": 43
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : DivisionRing R\nh : Fintype R\nZ : Subring R := center R\nn : \u2115\nH : \u2203 x y, x \u2260 y\nh_n : n \u2260 0\nq : \u2115 := Fintype.card \u21a5Z\nh_card : Fintype.card R = q ^ n\nfinclassa : (A : ConjClasses R\u02e3) \u2192 Fintype \u2191A.carrier\nthis\u271d\u00b2 : (A : ConjClasses R\u02e3) \u2192 Fintype \u2191{Quotient.out A}.centralizer\nfintypea : ConjClasses R\u02e3 \u2192\n  Fintype\n    \u2191{A |\n        have this := finclassa A;\n        Fintype.card \u2191A.carrier > 1} :=\n  fun A =>\n    setFintype\n      {A |\n        have this := finclassa A;\n        Fintype.card \u2191A.carrier > 1}\nthis\u271d\u00b9 :\n  Fintype\n    \u2191{A |\n        have this := finclassa A;\n        Fintype.card \u2191A.carrier > 1}\nS' : Set (ConjClasses R\u02e3) := ConjClasses.noncenter R\u02e3\nthis\u271d : Fintype \u2191S'\nS : Finset (ConjClasses R\u02e3) := S'.toFinset\nn_k : \u2191S' \u2192 \u2115 := sorry\nh_R : Fintype.card R\u02e3 = q ^ n - 1\nh_Z : Fintype.card (\u21a5Z)\u02e3 = q - 1\nH1 : q ^ n - 1 = q - 1 + \u2211 x \u2208 (ConjClasses.noncenter R\u02e3).toFinset, x.carrier.toFinset.card\ne : \u21a5(Subgroup.center R\u02e3) \u2243* (\u21a5(Submonoid.center R))\u02e3 := Subgroup.centerUnitsEquivUnitsCenter R\nf : (\u21a5(Submonoid.center R))\u02e3 \u2243 (\u21a5Z)\u02e3 := Equiv.inv (\u21a5(Submonoid.center R))\u02e3\nthis : \u2200 (A : \u2191S'), Fintype.card \u2191(\u2191A).carrier * (q ^ n_k A - 1) = q ^ n - 1\nh1 : q ^ n - 1 = q - 1 + \u2211 A, (q ^ n - 1) / (q ^ n_k A - 1)\nhZ : Nonempty \u21a5Z\nhq_pow_pos : \u2200 (m : \u2115), 1 \u2264 q ^ m\nh_n_k_A_dvd : \u2200 (A : \u2191S'), n_k A \u2223 n\nhq : q = Fintype.card \u21a5(center R)\nh\u2081_dvd : eval (\u2191q) (phi n) \u2223 eval (\u2191q) (X ^ n - 1)\nA : \u2191S'\nhs : A \u2208 univ\n\u22a2 1 \u2260 n_k A",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_06.lean#L258"
      },
      "metadata": {
        "blame_email_hash": "bc76641b6588",
        "blame_date": "2024-11-09T21:30:11+01:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "a01346f59dcd5ea87ff82755301b0b3a8d6571b58b0f9e0bf885f424ef90dacc"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/10FunctionsAndOperators.lean",
        "start_line": 298,
        "start_column": 48,
        "end_line": 298,
        "end_column": 53
      },
      "debug_info": {
        "goal": "m : Type u_4\nn : Type u_5\ninst\u271d\u00b3 : Fintype m\ninst\u271d\u00b2 : Fintype n\ninst\u271d\u00b9 : DecidableEq m\ninst\u271d : DecidableEq n\nA : Matrix m n \u211d\n\u22a2 \u2016A\u2016 \u2264 \u221a\u2191(Fintype.card n) * sorry A",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/10FunctionsAndOperators.lean#L298"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2025-08-06T00:45:33+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "b536fdfc707819f69f97f265e132c056d960d3d466c915112469637a3f626aff"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "54e2692f53004e900064c6f6e8e5a38b2754b0ad",
        "lean_version": "v4.24.0-rc1"
      },
      "location": {
        "path": "Compfiles/Imo2020P3.lean",
        "start_line": 32,
        "start_column": 2,
        "end_line": 32,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nc : Fin (4 * n) \u2192 Fin n\nh : \u2200 (i : Fin n), {j | c j = i}.card = 4\n\u22a2 \u2203 S, \u2211 i \u2208 S, (\u2191i + 1) = \u2211 i \u2208 S\u1d9c, (\u2191i + 1) \u2227 \u2200 (i : Fin n), {j \u2208 S | c j = i}.card = 2",
        "url": "https://github.com/dwrensha/compfiles/blob/54e2692f53004e900064c6f6e8e5a38b2754b0ad/Compfiles/Imo2020P3.lean#L32"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2025-04-08T13:09:24-04:00",
        "inclusion_date": "2025-09-19T03:11:14.409941+00:00"
      },
      "id": "e26271062230c4411da4e71ee324b755e931a0867b451a22e3d646684f9e7340"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "letterless-provlogic",
        "commit": "3fb2a68cedadf550c96bbc4c41bd99693774fc92",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/Classification/LetterlessTrace.lean",
        "start_line": 1083,
        "start_column": 4,
        "end_line": 1083,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case h.mpr.intro.intro\nT : ArithmeticTheory\ninst\u271d\u00b2 : \ud835\udddc\ud835\udeba\u2081 \u2aaf T\ninst\u271d\u00b9 : Theory.\u0394\u2081 T\ninst\u271d : \u2115 \u22a7\u2098* T\nX : Modal.FormulaSet \u2115\nX_letterless : @LO.Modal.FormulaSet.letterless \u2115 X\nU : ArithmeticTheory\neU : T + \u2191((fun x => \u2191(LO.FirstOrder.ArithmeticTheory.letterlessStandardRealization T inst\u271d\u00b9) x) '' X) = U\nA : Modal.Formula \u2115\nh : Modal.GL.sumQuasiNormal X \u22a2! A\nf : T.StandardRealization\nY : Finset (Modal.Formula \u2115)\nhYX : \u2191Y \u2286 X\nhY : Modal.GL \u22a2! Y.conj \u279d A\nhf : \u2191f Y.conj = \u2191(LO.FirstOrder.ArithmeticTheory.letterlessStandardRealization T inst\u271d\u00b9) Y.conj\nH : U \u22a2!. \u2191(LO.FirstOrder.ArithmeticTheory.letterlessStandardRealization T inst\u271d\u00b9) Y.conj \u279d \u2191f A\nB : Modal.Formula \u2115\nhB : B \u2208 Y\nB_letterless : B.letterless\n\u22a2 U \u22a2!. \u2191(LO.FirstOrder.ArithmeticTheory.letterlessStandardRealization T inst\u271d\u00b9) B",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/3fb2a68cedadf550c96bbc4c41bd99693774fc92/Foundation/ProvabilityLogic/Classification/LetterlessTrace.lean#L1083"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-09-15T18:42:26+09:00",
        "inclusion_date": "2025-09-16T03:34:53.561013+00:00"
      },
      "id": "9fb792d8e3dcc69ec9f9d314d69c294fe3e542c8775efc56d7a2d8455e76407d"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "ineq_6_3_30",
        "commit": "a11d007aa69834cdf5b6b203a05898acb98d4605",
        "lean_version": "v4.22.0-rc2"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainTileCount.lean",
        "start_line": 712,
        "start_column": 14,
        "end_line": 712,
        "end_column": 19
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Set (\ud835\udd13 X)\n\u03d1 : \u0398 X\nN : \u2115\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \ud835\udd04\nL : Grid X\nhL : L \u2208 @Antichain.\ud835\udcdb' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N\np : \ud835\udd13 X\nhp : p \u2208 toFinset (@Antichain.\ud835\udd04' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N)\nhpL : \u00ac\u2191L \u2229 \u2191(\ud835\udcd8 p) = \u2205\nhL2 :\n  ((\u2203 a_1, \u2191L \u2286 \u2191(\ud835\udcd8 a_1) \u2227 a_1 \u2208 @Antichain.\ud835\udd04' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N \u2227 s L \u2264 s (\ud835\udcd8 a_1)) \u2227\n      \u2200 a_1 \u2208 @Antichain.\ud835\udd04' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N,\n        \u2191(\ud835\udcd8 a_1) \u2286 \u2191L \u2192 s (\ud835\udcd8 a_1) \u2264 s L \u2192 \ud835\udd30 a_1 = -\u2191(defaultS X)) \u2227\n    \u2200 \u2983y : Grid X\u2984 (x : \ud835\udd13 X),\n      \u2191y \u2286 \u2191(\ud835\udcd8 x) \u2192\n        x \u2208 @Antichain.\ud835\udd04' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N \u2192\n          s y \u2264 s (\ud835\udcd8 x) \u2192\n            (\u2200 a_4 \u2208 @Antichain.\ud835\udd04' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N,\n                \u2191(\ud835\udcd8 a_4) \u2286 \u2191y \u2192 s (\ud835\udcd8 a_4) \u2264 s y \u2192 \ud835\udd30 a_4 = -\u2191(defaultS X)) \u2192\n              \u2191L \u2286 \u2191y \u2192 s L \u2264 s y \u2192 \u2191y \u2286 \u2191L \u2227 s y \u2264 s L\nhp' : \u00ac\ud835\udcd8 p = @Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL\nhpL' : \u2191(@Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL) \u2229 \u2191(\ud835\udcd8 p) \u2260 \u2205\n\u22a2 L \u2264 \ud835\udcd8 p",
        "url": "https://github.com/fpvandoorn/carleson/blob/a11d007aa69834cdf5b6b203a05898acb98d4605/Carleson/Antichain/AntichainTileCount.lean#L712"
      },
      "metadata": {
        "blame_email_hash": "b2f50b2f722a",
        "blame_date": "2025-07-08T16:45:22+02:00",
        "inclusion_date": "2025-07-11T03:02:12.360312+00:00"
      },
      "id": "fba858a56db1d17bccfbc495dbda3aaf4628b05ac8db37509118fea4e6b544a6"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-hardly-ramified",
        "commit": "60be88a841fa232b563ea16600befe5efbfb3d07",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FLT/Deformations/Representable.lean",
        "start_line": 89,
        "start_column": 2,
        "end_line": 89,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\ud835\udcde : Type u\ninst\u271d\u00b9\u2070 : CommRing \ud835\udcde\ninst\u271d\u2079 : IsLocalRing \ud835\udcde\ninst\u271d\u2078 : IsNoetherianRing \ud835\udcde\ninst\u271d\u2077 : Finite (ResidueField \ud835\udcde)\ninst\u271d\u2076 : IsAdicComplete (maximalIdeal \ud835\udcde) \ud835\udcde\nK : Type u\ninst\u271d\u2075 : Field K\ninst\u271d\u2074 : NumberField K\ninst\u271d\u00b3 : NumberField.IsTotallyReal K\nhK : Even (Module.finrank \u211a K)\nl : \u2115\ninst\u271d\u00b2 : Fact (Nat.Prime l)\nhl : 3 < l\ninst\u271d\u00b9 : Algebra \u2124_[l] \ud835\udcde\nS : Finset (IsDedekindDomain.HeightOneSpectrum (NumberField.RingOfIntegers K))\nhS : \u2200 (v : IsDedekindDomain.HeightOneSpectrum (NumberField.RingOfIntegers K)), \u2191l \u2208 v.asIdeal \u2192 v \u2209 S\n\u03c1 : (repnFunctor (Fin 2) (Field.absoluteGaloisGroup K) \ud835\udcde).obj ProartinianCat.residueField\ninst\u271d : (toRepresentation \u03c1).IsAbsolutelyIrreducible\nh\u03c1 : failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)\n\u22a2 (Subfunctor.toFunctor\n      (@Deformation.narrowSLiftFunctor \ud835\udcde inst\u271d\u00b9\u2070 inst\u271d\u2079 K inst\u271d\u2075 inst\u271d\u2074 l inst\u271d\u00b2 inst\u271d\u00b9 S \u03c1)).IsCorepresentable",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/60be88a841fa232b563ea16600befe5efbfb3d07/FLT/Deformations/Representable.lean#L89"
      },
      "metadata": {
        "blame_email_hash": "a9aab1f797ea",
        "blame_date": "2025-07-31T17:27:22+01:00",
        "inclusion_date": "2025-09-18T04:05:26.332171+00:00"
      },
      "id": "f48bc4fb2ee2183a17da9aa8a9ad3e90c84085232422a5cdc0e9b747ea55edb3"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "d279b56adead908de8bd086ea46b82895cf4f12c",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 61,
        "start_column": 12,
        "end_line": 61,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case fst.h\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : MyProd (\u03b1 \u2192 \u03b2) \u03b3\nx : \u03b1\n\u22a2 p.fst x = q.fst x",
        "url": "https://github.com/leanprover-community/aesop/blob/d279b56adead908de8bd086ea46b82895cf4f12c/AesopTest/ExtScript.lean#L61"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-04-30T23:33:22.583043+00:00"
      },
      "id": "5bf66af5710b22c9a6fc547d31f0049c2fea49a2142c06a7b21a250d23aca054"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 60,
        "start_column": 4,
        "end_line": 60,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case intro.intro.intro.refine_3\nG : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(#(A ^ 2)) \u2264 K * \u2191(#A)\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 g \u2229 A))}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191(#S) \u2264 K ^ 2 * \u2191(#A)\nF : Finset G\nhFA : F \u2286 A\nhFcard : \u2191(#F) \u2264 2 * K\nhASF : A \u2286 S * F\n\u22a2 \u2203 a \u2208 A, \u2191(#A) / (2 * K) \u2264 \u2191(#(A \u2229 S ^ 2 <\u2022 a))",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L60"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "3e635215843fdf70c6597f1bfed9e55c9faceff82c41ca1fc138b5ddcacd4ffd"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "e99e6f7b4a57098ded666cd0ed64aae7078440a3",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 7335,
        "start_column": 91,
        "end_line": 7335,
        "end_column": 96
      },
      "debug_info": {
        "goal": "\u03bd : \u211d \u2192 \u211d\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\nc_close : \u211d\nc_close_pos : c_close > 0\nh_close :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 (\u03b5 : \u211d),\n        0 < \u03b5 \u2192 \u03b5 < 1 \u2192 2 < X * \u03b5 \u2192 \u2016SmoothedChebyshev \u03bd \u03b5 X - \u2191(ChebyshevPsi X)\u2016 \u2264 c_close * \u03b5 * X * Real.log X\nA C_bnd : \u211d\nC_bnd_pos : 0 < C_bnd\nA_in_Ioc : A \u2208 Ioc 0 (1 / 2)\nzeta_bnd : LogDerivZetaHasBound A C_bnd\nholo1 :\n  \u2200 (T : \u211d),\n    3 \u2264 T \u2192\n      HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (Icc (1 - A / Real.log T ^ 9) 2 \u00d7\u2102 Icc (-T) T \\ {1})\n\u03c3\u2082' : \u211d\n\u03c3\u2082 : \u211d := max \u03c3\u2082' (1 / 2)\n\u03c3\u2082_pos : 0 < \u03c3\u2082\n\u03c3\u2082_lt_one : \u03c3\u2082 < 1\nholo2 : HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (uIcc \u03c3\u2082 2 \u00d7\u2102 uIcc (-3) 3 \\ {1})\nc\u2081 : \u211d\nc\u2081pos : c\u2081 > 0\nhc\u2081 : \u2200 (\u03b5 : \u211d), 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2081 \u03bd \u03b5 X T\u2016 \u2264 c\u2081 * X * Real.log X / (\u03b5 * T)\nc\u2082 : \u211d\nc\u2082pos : 0 < c\u2082\nhc\u2082 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2082 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2082 * X / (\u03b5 * T)\nc\u2083 : \u211d\nc\u2083pos : 0 < c\u2083\nhc\u2083 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2083 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2083 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2085 : \u211d\nc\u2085pos : 0 < c\u2085\nhc\u2085 : \u2200 (X : \u211d), 3 < X \u2192 \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2016I\u2085 \u03bd \u03b5 X \u03c3\u2082\u2016 \u2264 c\u2085 * X ^ \u03c3\u2082 / \u03b5\nc\u2087 : \u211d\nc\u2087pos : 0 < c\u2087\nhc\u2087 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2087 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2087 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2088 : \u211d\nc\u2088pos : 0 < c\u2088\nhc\u2088 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2088 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2088 * X / (\u03b5 * T)\nc\u2089 : \u211d\nc\u2089pos : c\u2089 > 0\nhc\u2089 : \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2089 \u03bd \u03b5 X T\u2016 \u2264 c\u2089 * X * Real.log X / (\u03b5 * T)\nc : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\n\u03b5x : \u211d \u2192 \u211d := fun x => Real.exp (-c * Real.log x ^ (1 / 10))\nTx : \u211d \u2192 \u211d := fun x => Real.exp (2 * c * Real.log x ^ (1 / 10))\neventually_\u03b5x_lt_one : \u2200\u1da0 (x : \u211d) in atTop, \u03b5x x < 1\neventually_2_lt : \u2200\u1da0 (x : \u211d) in atTop, 2 < x * \u03b5x x\neventually_T_gt_3 : \u2200\u1da0 (x : \u211d) in atTop, 3 < Tx x\n\u22a2 \u2200\u1da0 (x : \u211d) in atTop, \u03c3\u2082 < 1 - A / Real.log (Tx x) ^ 9",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/e99e6f7b4a57098ded666cd0ed64aae7078440a3/PrimeNumberTheoremAnd/MediumPNT.lean#L7335"
      },
      "metadata": {
        "blame_email_hash": "bee09f470e62",
        "blame_date": "2025-07-20T16:52:08+01:00",
        "inclusion_date": "2025-07-21T23:21:07.188403+00:00"
      },
      "id": "57fb05da2e73aaf65ae7e933e667990eeeae274559a7cf8886fcc225ab8d18aa"
    },
    {
      "repo": {
        "remote": "https://github.com/emilyriehl/infinity-cosmos",
        "branch": "main",
        "commit": "18c7658a8e6fd4d8c6d0015a7a933818314adc0e",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "InfinityCosmos/ForMathlib/InfinityCosmos/Isofibrations.lean",
        "start_line": 70,
        "start_column": 44,
        "end_line": 70,
        "end_column": 49
      },
      "debug_info": {
        "goal": "K : Type u\ninst\u271d\u00b9 : Category.{v, u} K\ninst\u271d : InfinityCosmos K\nX Y X' Y' : K\nf : X \u21a0 Y\ng : X' \u21a0 Y'\n\u22a2 IsIsofibration (prod.map \u2191f \u2191g)",
        "url": "https://github.com/emilyriehl/infinity-cosmos/blob/18c7658a8e6fd4d8c6d0015a7a933818314adc0e/InfinityCosmos/ForMathlib/InfinityCosmos/Isofibrations.lean#L70"
      },
      "metadata": {
        "blame_email_hash": "eaaeec08515d",
        "blame_date": "2024-12-03T11:33:30-05:00",
        "inclusion_date": "2025-09-08T15:00:12.195855+00:00"
      },
      "id": "08960a89701e3939eeffa0e184e0ce2e45f79360db2e09485514e1da83191f1f"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "LeanByExample/Attribute/Aesop.lean",
        "start_line": 88,
        "start_column": 2,
        "end_line": 88,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 NonEmpty (MyList.cons 1 MyList.nil)",
        "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Attribute/Aesop.lean#L88"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2025-01-08T22:40:33+09:00",
        "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
      },
      "id": "1c30fc32ce15f669075451698d47ff13a411eeaeb7c51b6964ed5e274eeafc8f"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "018c619cf93d489a688e485cafd43f5545ddd99e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/MoreRuzsaDist.lean",
        "start_line": 1165,
        "start_column": 82,
        "end_line": 1165,
        "end_column": 87
      },
      "debug_info": {
        "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\nhm : m \u2265 2\n\u03a9 : Type u_9\nh\u03a9 : MeasureSpace \u03a9\nX : Fin m \u2192 \u03a9 \u2192 G\nh_indep : iIndepFun X volume\n\u22a2 d[\u2211 i, X i # \u2211 i, X i] \u2264 2 * @multiDist G hG inst\u271d\u00b2 m (fun x => \u03a9) (fun x => h\u03a9) X",
        "url": "https://github.com/teorth/pfr/blob/018c619cf93d489a688e485cafd43f5545ddd99e/PFR/MoreRuzsaDist.lean#L1165"
      },
      "metadata": {
        "blame_email_hash": "7d87c0724495",
        "blame_date": "2025-03-07T08:53:46+01:00",
        "inclusion_date": "2025-05-26T23:04:41.163198+00:00"
      },
      "id": "b1d15c92fcf249647ae1963a74809dd64695bde853bfdc48ac27a037a74f2fac"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "D-Thomine/measure_entropy",
        "commit": "3a27701a2da4247ea753644713592f431c13db82",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/Dynamics/MeasureEntropy/CoverEntropy.lean",
        "start_line": 73,
        "start_column": 4,
        "end_line": 73,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case pos\n\u03b9 : Type u_2\ninst\u271d : Fintype \u03b9\nf : \u03b9 \u2192 ENNReal\nh : f = 0\n\u22a2 False",
        "url": "https://github.com/leanprover-community/mathlib4/blob/3a27701a2da4247ea753644713592f431c13db82/Mathlib/Dynamics/MeasureEntropy/CoverEntropy.lean#L73"
      },
      "metadata": {
        "blame_email_hash": "93c5c887a46d",
        "blame_date": "2025-06-17T10:44:39+02:00",
        "inclusion_date": "2025-06-18T03:01:43.222918+00:00"
      },
      "id": "0b5e5723d998eccba386d45063357ec5a485ac5a5c2ee9d5626eb1b45158b8ba"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 138,
        "start_column": 4,
        "end_line": 138,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type ?u.15406\ninst\u271d : CommRing R\nI J : Ideal R\n\u22a2 \u2200 {a b : R}, a \u2208 \u2191I \u2229 \u2191J \u2192 b \u2208 \u2191I \u2229 \u2191J \u2192 a + b \u2208 \u2191I \u2229 \u2191J",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L138"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "533a206bc753af7019a75d95539753a6b2c09b0e057fe40490638e7fe425770f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "duplex-sponge-fs",
        "commit": "0fc5523909130c6100b03cf4a7afb3566f27e485",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/Data/Hash/Poseidon2.lean",
        "start_line": 658,
        "start_column": 74,
        "end_line": 658,
        "end_column": 79
      },
      "debug_info": {
        "goal": "params\u271d params : Poseidon2.Params\nstate : Vector KoalaBear.Field (Poseidon2.Params.width params)\nrcs\u271d\u00b9 : Vector KoalaBear.Field\n  (Poseidon2.Params.numFullRounds params * Poseidon2.Params.width params + Poseidon2.Params.numPartialRounds params) :=\n  Poseidon2.Params.roundConstants params\nst0 : Vector KoalaBear.Field (Poseidon2.Params.width params) := Poseidon2.externalLinearLayer params state\nst1 : Vector KoalaBear.Field (Poseidon2.Params.width params) :=\n  Fin.foldl (Poseidon2.Params.halfNumFullRounds params)\n    (fun st_acc rc_idx =>\n      let rc_chunk := Vector.cast \u22ef (rcs\u271d\u00b9.extract (\u2191rc_idx) (\u2191rc_idx + Poseidon2.Params.width params));\n      let st_new := Poseidon2.fullRound params st_acc rc_chunk;\n      st_new)\n    st0\nrcs\u271d : Vector KoalaBear.Field\n  (Poseidon2.Params.numFullRounds params * Poseidon2.Params.width params + Poseidon2.Params.numPartialRounds params -\n    Poseidon2.Params.halfNumFullRounds params * Poseidon2.Params.width params) :=\n  rcs\u271d\u00b9.drop (Poseidon2.Params.halfNumFullRounds params * Poseidon2.Params.width params)\nst2 : Vector KoalaBear.Field (Poseidon2.Params.width params) :=\n  Fin.foldl (Poseidon2.Params.numPartialRounds params)\n    (fun st_acc rc_idx =>\n      let rc_val := rcs\u271d[rc_idx];\n      let st_new := Poseidon2.partialRound params st_acc rc_val;\n      st_new)\n    st1\nrcs : Vector KoalaBear.Field\n  (Poseidon2.Params.numFullRounds params * Poseidon2.Params.width params + Poseidon2.Params.numPartialRounds params -\n      Poseidon2.Params.halfNumFullRounds params * Poseidon2.Params.width params -\n    Poseidon2.Params.numPartialRounds params) :=\n  rcs\u271d.drop (Poseidon2.Params.numPartialRounds params)\nst_acc : Vector KoalaBear.Field (Poseidon2.Params.width params)\nrc_idx : Fin (Poseidon2.Params.halfNumFullRounds params)\n\u22a2 min (\u2191rc_idx + Poseidon2.Params.width params)\n        (Poseidon2.Params.numFullRounds params * Poseidon2.Params.width params +\n              Poseidon2.Params.numPartialRounds params -\n            Poseidon2.Params.halfNumFullRounds params * Poseidon2.Params.width params -\n          Poseidon2.Params.numPartialRounds params) -\n      \u2191rc_idx =\n    Poseidon2.Params.width params",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0fc5523909130c6100b03cf4a7afb3566f27e485/ArkLib/Data/Hash/Poseidon2.lean#L658"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-09-12T02:34:43-04:00",
        "inclusion_date": "2025-09-18T04:30:57.445731+00:00"
      },
      "id": "297e0df81f316dcbd646f0ad61176f3f94dee1c5ded02d5495af3c774835a826"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "copilot/fix-a2a433e8-ed5f-4c7a-a6b4-25782fb4631f",
        "commit": "5d071e502cc2fb129eb57ff7a6c171f76c5cc4da",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "PhysLean/Mathematics/Trigonometry/Tanh.lean",
        "start_line": 45,
        "start_column": 2,
        "end_line": 45,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u211d\n\u22a2 deriv tanh = fun x => 1 - tanh x ^ 2",
        "url": "https://github.com/HEPLean/PhysLean/blob/5d071e502cc2fb129eb57ff7a6c171f76c5cc4da/PhysLean/Mathematics/Trigonometry/Tanh.lean#L45"
      },
      "metadata": {
        "blame_email_hash": "9f36d68419bf",
        "blame_date": "2025-08-15T16:14:41+01:00",
        "inclusion_date": "2025-09-08T17:10:55.530665+00:00"
      },
      "id": "28c482748962d4d5d1fb7a6cb919d5c502c645eaa167869e296f1b7b2bf9f1ae"
    },
    {
      "repo": {
        "remote": "https://github.com/ufmg-smite/lean-smt",
        "branch": "main",
        "commit": "e994ff05c81214b3397f8b59aaeca4c302bd41dc",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Test/BitVec/Shift.lean",
        "start_line": 13,
        "start_column": 2,
        "end_line": 13,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : BitVec 3\n\u22a2 x ++ y = zeroExtend 6 x <<< 3#2 ||| zeroExtend 6 y",
        "url": "https://github.com/ufmg-smite/lean-smt/blob/e994ff05c81214b3397f8b59aaeca4c302bd41dc/Test/BitVec/Shift.lean#L13"
      },
      "metadata": {
        "blame_email_hash": "2d71a621927f",
        "blame_date": "2022-08-05T17:11:15+02:00",
        "inclusion_date": "2025-05-17T23:11:31.262140+00:00"
      },
      "id": "af1c238a9c4a4867f4aac73b8df81f7800516e0e37fcb9d0d31c93d503972fff"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 468,
        "start_column": 56,
        "end_line": 468,
        "end_column": 61
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 0 < n\n\u22a2 \u220f k \u2208 Finset.Icc 1 n, (1 + 1 / 2 ^ k) < 5 / 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L468"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "7dde770194418e19e30234c2423d6a5b812e13589aa43c5de0132dee8ba4a78c"
    },
    {
      "repo": {
        "remote": "https://github.com/cmu-l3/llmlean",
        "branch": "kimina-pr",
        "commit": "126a6b2af37727c4d81bb49f6af6b354a380145e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LLMleanTest/Examples2.lean",
        "start_line": 27,
        "start_column": 2,
        "end_line": 27,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\nf : \u03b1 \u2192 \u03b2\ns t : Set \u03b1\nu v : Set \u03b2\n\u22a2 f '' s \u2286 v \u2194 s \u2286 f \u207b\u00b9' v",
        "url": "https://github.com/cmu-l3/llmlean/blob/126a6b2af37727c4d81bb49f6af6b354a380145e/LLMleanTest/Examples2.lean#L27"
      },
      "metadata": {
        "blame_email_hash": "3ab0971ac342",
        "blame_date": "2024-07-23T17:17:09-04:00",
        "inclusion_date": "2025-06-11T03:39:01.065377+00:00"
      },
      "id": "bf16b373dfe0ee42d143282e5aadc06d20182e1d63d250db37008014a26b00dc"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_06.lean",
        "start_line": 259,
        "start_column": 39,
        "end_line": 259,
        "end_column": 44
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : DivisionRing R\nh : Fintype R\nZ : Subring R := center R\nn : \u2115\nH : \u2203 x y, x \u2260 y\nh_n : n \u2260 0\nq : \u2115 := Fintype.card \u21a5Z\nh_card : Fintype.card R = q ^ n\nfinclassa : (A : ConjClasses R\u02e3) \u2192 Fintype \u2191A.carrier\nthis\u271d\u00b2 : (A : ConjClasses R\u02e3) \u2192 Fintype \u2191{Quotient.out A}.centralizer\nfintypea : ConjClasses R\u02e3 \u2192\n  Fintype\n    \u2191{A |\n        have this := finclassa A;\n        Fintype.card \u2191A.carrier > 1} :=\n  fun A =>\n    setFintype\n      {A |\n        have this := finclassa A;\n        Fintype.card \u2191A.carrier > 1}\nthis\u271d\u00b9 :\n  Fintype\n    \u2191{A |\n        have this := finclassa A;\n        Fintype.card \u2191A.carrier > 1}\nS' : Set (ConjClasses R\u02e3) := ConjClasses.noncenter R\u02e3\nthis\u271d : Fintype \u2191S'\nS : Finset (ConjClasses R\u02e3) := S'.toFinset\nn_k : \u2191S' \u2192 \u2115 := sorry\nh_R : Fintype.card R\u02e3 = q ^ n - 1\nh_Z : Fintype.card (\u21a5Z)\u02e3 = q - 1\nH1 : q ^ n - 1 = q - 1 + \u2211 x \u2208 (ConjClasses.noncenter R\u02e3).toFinset, x.carrier.toFinset.card\ne : \u21a5(Subgroup.center R\u02e3) \u2243* (\u21a5(Submonoid.center R))\u02e3 := Subgroup.centerUnitsEquivUnitsCenter R\nf : (\u21a5(Submonoid.center R))\u02e3 \u2243 (\u21a5Z)\u02e3 := Equiv.inv (\u21a5(Submonoid.center R))\u02e3\nthis : \u2200 (A : \u2191S'), Fintype.card \u2191(\u2191A).carrier * (q ^ n_k A - 1) = q ^ n - 1\nh1 : q ^ n - 1 = q - 1 + \u2211 A, (q ^ n - 1) / (q ^ n_k A - 1)\nhZ : Nonempty \u21a5Z\nhq_pow_pos : \u2200 (m : \u2115), 1 \u2264 q ^ m\nh_n_k_A_dvd : \u2200 (A : \u2191S'), n_k A \u2223 n\nhq : q = Fintype.card \u21a5(center R)\nh\u2081_dvd : eval (\u2191q) (phi n) \u2223 eval (\u2191q) (X ^ n - 1)\nA : \u2191S'\nhs : A \u2208 univ\nh_one_neq : 1 \u2260 n_k A\n\u22a2 n_k A < n",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_06.lean#L259"
      },
      "metadata": {
        "blame_email_hash": "bc76641b6588",
        "blame_date": "2024-11-09T21:30:11+01:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "e43f56785c735438f5f0e7417109c1834f4a4e9435ad64812a8465a11a37dc4e"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/10FunctionsAndOperators.lean",
        "start_line": 299,
        "start_column": 12,
        "end_line": 299,
        "end_column": 17
      },
      "debug_info": {
        "goal": "m : Type u_4\nn : Type u_5\ninst\u271d\u00b3 : Fintype m\ninst\u271d\u00b2 : Fintype n\ninst\u271d\u00b9 : DecidableEq m\ninst\u271d : DecidableEq n\nA : Matrix m n \u211d\n\u22a2 \u2016A\u2016 \u2264 \u221a(\u2191(Fintype.card m) * \u2191(Fintype.card n)) * \u2016A\u2016",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/10FunctionsAndOperators.lean#L299"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2025-08-06T00:45:33+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "73b829812bb4b5865e4a9d2436803e1df0211cf5fa49503145db2d1ad4dc44c3"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2010P3.lean",
        "start_line": 36,
        "start_column": 38,
        "end_line": 36,
        "end_column": 43
      },
      "debug_info": {
        "goal": "case h\ng : \u2124>0 \u2192 \u2124>0\nc : \u2124>0\nhc : \u2200 (x : \u2124>0), g x = x + c\nm n : \u2124>0\n\u22a2 (m + c + n) * (n + c + m) = (m + n + c) * (m + n + c)",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2010P3.lean#L36"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2025-01-21T08:16:08-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "94668c81e3549dfecb4822c85b43a18d85126a7d88d79f594fe3876d79f93f9a"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "letterless-provlogic",
        "commit": "3fb2a68cedadf550c96bbc4c41bd99693774fc92",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/Classification/LetterlessTrace.lean",
        "start_line": 551,
        "start_column": 2,
        "end_line": 551,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 fcwHeight (fun x1 x2 => x1 \u227a x2) 0 = n",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/3fb2a68cedadf550c96bbc4c41bd99693774fc92/Foundation/ProvabilityLogic/Classification/LetterlessTrace.lean#L551"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-09-15T15:54:17+09:00",
        "inclusion_date": "2025-09-16T03:34:53.561013+00:00"
      },
      "id": "fa7c55f7656d61c0210119157db52fe7c744d4226517bbdc8e0740702faffde3"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "ineq_6_3_30",
        "commit": "a11d007aa69834cdf5b6b203a05898acb98d4605",
        "lean_version": "v4.22.0-rc2"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainTileCount.lean",
        "start_line": 713,
        "start_column": 34,
        "end_line": 713,
        "end_column": 39
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Set (\ud835\udd13 X)\n\u03d1 : \u0398 X\nN : \u2115\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \ud835\udd04\nL : Grid X\nhL : L \u2208 @Antichain.\ud835\udcdb' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N\np : \ud835\udd13 X\nhp : p \u2208 toFinset (@Antichain.\ud835\udd04' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N)\nhpL : \u00ac\u2191L \u2229 \u2191(\ud835\udcd8 p) = \u2205\nhL2 :\n  ((\u2203 a_1, \u2191L \u2286 \u2191(\ud835\udcd8 a_1) \u2227 a_1 \u2208 @Antichain.\ud835\udd04' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N \u2227 s L \u2264 s (\ud835\udcd8 a_1)) \u2227\n      \u2200 a_1 \u2208 @Antichain.\ud835\udd04' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N,\n        \u2191(\ud835\udcd8 a_1) \u2286 \u2191L \u2192 s (\ud835\udcd8 a_1) \u2264 s L \u2192 \ud835\udd30 a_1 = -\u2191(defaultS X)) \u2227\n    \u2200 \u2983y : Grid X\u2984 (x : \ud835\udd13 X),\n      \u2191y \u2286 \u2191(\ud835\udcd8 x) \u2192\n        x \u2208 @Antichain.\ud835\udd04' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N \u2192\n          s y \u2264 s (\ud835\udcd8 x) \u2192\n            (\u2200 a_4 \u2208 @Antichain.\ud835\udd04' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N,\n                \u2191(\ud835\udcd8 a_4) \u2286 \u2191y \u2192 s (\ud835\udcd8 a_4) \u2264 s y \u2192 \ud835\udd30 a_4 = -\u2191(defaultS X)) \u2192\n              \u2191L \u2286 \u2191y \u2192 s L \u2264 s y \u2192 \u2191y \u2286 \u2191L \u2227 s y \u2264 s L\nhp' : \u00ac\ud835\udcd8 p = @Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL\nhpL' : \u2191(@Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL) \u2229 \u2191(\ud835\udcd8 p) \u2260 \u2205\nhss : L \u2264 \ud835\udcd8 p\n\u22a2 L \u2260 \ud835\udcd8 p",
        "url": "https://github.com/fpvandoorn/carleson/blob/a11d007aa69834cdf5b6b203a05898acb98d4605/Carleson/Antichain/AntichainTileCount.lean#L713"
      },
      "metadata": {
        "blame_email_hash": "b2f50b2f722a",
        "blame_date": "2025-07-08T16:45:22+02:00",
        "inclusion_date": "2025-07-11T03:02:12.360312+00:00"
      },
      "id": "db5f2691dd0a55fd86d658e5652b397c1d1631d39371aa18b42f496312dc027d"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-hardly-ramified",
        "commit": "60be88a841fa232b563ea16600befe5efbfb3d07",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FLT/Mathlib/LinearAlgebra/Determinant.lean",
        "start_line": 48,
        "start_column": 91,
        "end_line": 48,
        "end_column": 96
      },
      "debug_info": {
        "goal": "k : Type u_1\ninst\u271d\u00b9\u00b2 : Field k\nD : Type u_2\ninst\u271d\u00b9\u00b9 : Ring D\ninst\u271d\u00b9\u2070 : Algebra k D\ninst\u271d\u2079 : Algebra.IsCentral k D\ninst\u271d\u2078 : IsSimpleRing D\ninst\u271d\u2077 : FiniteDimensional k D\nA : Type u_3\nB : Type u_4\ninst\u271d\u2076 : Ring A\ninst\u271d\u2075 : Ring B\ninst\u271d\u2074 : Algebra k A\ninst\u271d\u00b3 : Algebra k B\ninst\u271d\u00b2 : Algebra.IsCentral k B\ninst\u271d\u00b9 : IsSimpleRing A\ninst\u271d : IsSimpleRing B\n\u22a2 IsSimpleRing (TensorProduct k A B)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/60be88a841fa232b563ea16600befe5efbfb3d07/FLT/Mathlib/LinearAlgebra/Determinant.lean#L48"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-07-08T10:37:04+01:00",
        "inclusion_date": "2025-09-18T04:05:26.332171+00:00"
      },
      "id": "5d2a47c961eb30611fcdac2be2dae33c3c462de5a421bad2a2c80c0e03c87080"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "d279b56adead908de8bd086ea46b82895cf4f12c",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 61,
        "start_column": 12,
        "end_line": 61,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case snd\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : MyProd (\u03b1 \u2192 \u03b2) \u03b3\n\u22a2 p.snd = q.snd",
        "url": "https://github.com/leanprover-community/aesop/blob/d279b56adead908de8bd086ea46b82895cf4f12c/AesopTest/ExtScript.lean#L61"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-04-30T23:33:22.583043+00:00"
      },
      "id": "0a82e6fb321217eab1b9685c9be1687c56b7e1ffb9924cd27de794614833e9b6"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "99a77d19845fb8083456331fd1256bf35a48f60c",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 117,
        "start_column": 8,
        "end_line": 117,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case refine_1.refine_1\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : NNReal\nhX : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 X p \u03bc\nhY : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ni : \u03b1\n\u22a2 MeasurableSet fun \u03c9 => X \u03c9 i",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/99a77d19845fb8083456331fd1256bf35a48f60c/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L117"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-09-08T22:03:06.847248+00:00"
      },
      "id": "0bd0a2ddf49daf0db182c98e5a7049baece65f1c81da71a25c82b7ace9992947"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "f4441d7327caa75ae7879ecfda33fc60ab0cf17e",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 7242,
        "start_column": 91,
        "end_line": 7242,
        "end_column": 96
      },
      "debug_info": {
        "goal": "\u03bd : \u211d \u2192 \u211d\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\nc_close : \u211d\nc_close_pos : c_close > 0\nh_close :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 (\u03b5 : \u211d),\n        0 < \u03b5 \u2192 \u03b5 < 1 \u2192 2 < X * \u03b5 \u2192 \u2016SmoothedChebyshev \u03bd \u03b5 X - \u2191(ChebyshevPsi X)\u2016 \u2264 c_close * \u03b5 * X * Real.log X\n\u03b5_main C_main : \u211d\n\u03b5_main_pos : 0 < \u03b5_main\nC_main_pos : 0 < C_main\nh_main : \u2200 \u03b5 \u2208 Ioo 0 \u03b5_main, \u2016MellinTransform (fun x => \u2191(Smooth1 \u03bd \u03b5 x)) 1 - 1\u2016 \u2264 C_main * \u03b5\nA C_bnd : \u211d\nC_bnd_pos : 0 < C_bnd\nA_in_Ioc : A \u2208 Ioc 0 (1 / 2)\nzeta_bnd : LogDerivZetaHasBound A C_bnd\nholo1 :\n  \u2200 (T : \u211d),\n    3 \u2264 T \u2192\n      HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (Icc (1 - A / Real.log T ^ 9) 2 \u00d7\u2102 Icc (-T) T \\ {1})\n\u03c3\u2082' : \u211d\n\u03c3\u2082 : \u211d := max \u03c3\u2082' (1 / 2)\n\u03c3\u2082_pos : 0 < \u03c3\u2082\n\u03c3\u2082_lt_one : \u03c3\u2082 < 1\nholo2 : HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (uIcc \u03c3\u2082 2 \u00d7\u2102 uIcc (-3) 3 \\ {1})\nc\u2081 : \u211d\nc\u2081pos : c\u2081 > 0\nhc\u2081 : \u2200 (\u03b5 : \u211d), 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2081 \u03bd \u03b5 X T\u2016 \u2264 c\u2081 * X * Real.log X / (\u03b5 * T)\nc\u2082 : \u211d\nc\u2082pos : 0 < c\u2082\nhc\u2082 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2082 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2082 * X / (\u03b5 * T)\nc\u2083 : \u211d\nc\u2083pos : 0 < c\u2083\nhc\u2083 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2083 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2083 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2085 : \u211d\nc\u2085pos : 0 < c\u2085\nhc\u2085 : \u2200 (X : \u211d), 3 < X \u2192 \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2016I\u2085 \u03bd \u03b5 X \u03c3\u2082\u2016 \u2264 c\u2085 * X ^ \u03c3\u2082 / \u03b5\nc\u2087 : \u211d\nc\u2087pos : 0 < c\u2087\nhc\u2087 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2087 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2087 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2088 : \u211d\nc\u2088pos : 0 < c\u2088\nhc\u2088 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2088 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2088 * X / (\u03b5 * T)\nc\u2089 : \u211d\nc\u2089pos : c\u2089 > 0\nhc\u2089 : \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2089 \u03bd \u03b5 X T\u2016 \u2264 c\u2089 * X * Real.log X / (\u03b5 * T)\nc\u2084 : \u211d\nc\u2084pos : 0 \u2264 c\u2084\nTlb\u2084 : \u211d\nTlb\u2084bnd : 3 < Tlb\u2084\nhc\u2084 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              Tlb\u2084 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2084 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 \u2264 c\u2084 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2086 : \u211d\nc\u2086pos : 0 \u2264 c\u2086\nTlb\u2086 : \u211d\nTlb\u2086bnd : 3 < Tlb\u2086\nhc\u2086 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              Tlb\u2086 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2086 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 \u2264 c\u2086 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nC' : \u211d := c_close + C_main\nC'' : \u211d := c\u2081 + c\u2082 + c\u2088 + c\u2089\nC''' : \u211d := c\u2083 + c\u2084 + c\u2086 + c\u2087\nc : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\n\u03b5x : \u211d \u2192 \u211d := fun x => Real.exp (-c * Real.log x ^ (1 / 10))\nTx : \u211d \u2192 \u211d := fun x => Real.exp (2 * c * Real.log x ^ (1 / 10))\neventually_\u03b5x_lt_one : \u2200\u1da0 (x : \u211d) in atTop, \u03b5x x < 1\neventually_2_lt : \u2200\u1da0 (x : \u211d) in atTop, 2 < x * \u03b5x x\neventually_T_gt_3 : \u2200\u1da0 (x : \u211d) in atTop, 3 < Tx x\neventually_T_gt_Tlb\u2084 : \u2200\u1da0 (x : \u211d) in atTop, Tlb\u2084 < Tx x\neventually_T_gt_Tlb\u2086 : \u2200\u1da0 (x : \u211d) in atTop, Tlb\u2086 < Tx x\n\u22a2 \u2200\u1da0 (x : \u211d) in atTop, \u03c3\u2082 < 1 - A / Real.log (Tx x) ^ 9",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/f4441d7327caa75ae7879ecfda33fc60ab0cf17e/PrimeNumberTheoremAnd/MediumPNT.lean#L7242"
      },
      "metadata": {
        "blame_email_hash": "bee09f470e62",
        "blame_date": "2025-07-20T16:52:08+01:00",
        "inclusion_date": "2025-07-22T23:05:23.619594+00:00"
      },
      "id": "9e7be8d747f3d3b7d417febee872abfb5a4d153573c5bf57dfd129c0ec80cf79"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "3d8e1994e2522b249c36b71db17765a779eaa787",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "LeanByExample/Attribute/Aesop.lean",
        "start_line": 106,
        "start_column": 2,
        "end_line": 106,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b c d e : Nat\nh1 : a \u2264 b\nh2 : b \u2264 c\nh3 : c \u2264 d\nh4 : d \u2264 e\n\u22a2 a \u2264 e",
        "url": "https://github.com/lean-ja/lean-by-example/blob/3d8e1994e2522b249c36b71db17765a779eaa787/LeanByExample/Attribute/Aesop.lean#L106"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2025-01-08T22:40:33+09:00",
        "inclusion_date": "2025-09-15T04:41:33.921583+00:00"
      },
      "id": "7f3cea8947059f4802be2479d98072da97d92c39fe2733ff375dc00dbf5f1345"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/MoreRuzsaDist.lean",
        "start_line": 857,
        "start_column": 105,
        "end_line": 857,
        "end_column": 110
      },
      "debug_info": {
        "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\nhm : m \u2265 2\n\u03a9 : Fin m \u2192 Type u_9\nh\u03a9 : (i : Fin m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin m) \u2192 \u03a9 i \u2192 G\n\u22a2 (\u2211 j, \u2211 k, if j = k then 0 else d[X j # X k]) \u2264 \u2191m * (\u2191m - 1) * D[X ; h\u03a9]",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L857"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-10-17T18:26:36+00:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "9de8ea8429dbd769777e03886a061a9d6d1fea2772386257a7abea2d694c9251"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "D-Thomine/measure_entropy",
        "commit": "3a27701a2da4247ea753644713592f431c13db82",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/Dynamics/MeasureEntropy/CoverEntropy.lean",
        "start_line": 76,
        "start_column": 2,
        "end_line": 76,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case neg\n\u03b9 : Type u_2\ninst\u271d : Fintype \u03b9\nf : \u03b9 \u2192 ENNReal\nh : \u00acf = 0\n\u22a2 \u2211 x, \u2191(f x) * (f x).log \u2264 (\u2211 i, f i).log",
        "url": "https://github.com/leanprover-community/mathlib4/blob/3a27701a2da4247ea753644713592f431c13db82/Mathlib/Dynamics/MeasureEntropy/CoverEntropy.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "93c5c887a46d",
        "blame_date": "2025-06-17T10:44:39+02:00",
        "inclusion_date": "2025-06-18T03:01:43.222918+00:00"
      },
      "id": "0caed6341d569f3526fb2ed4ecefb2ef764bfe7a65b253cb285fe48b770674ae"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 140,
        "start_column": 4,
        "end_line": 140,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type ?u.15406\ninst\u271d : CommRing R\nI J : Ideal R\n\u22a2 0 \u2208 \u2191I \u2229 \u2191J",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L140"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "7dcb8bca4550bd8fb87da2b6fe2318dff898792e9193415ad4fef993c6df50f7"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "duplex-sponge-fs",
        "commit": "0fc5523909130c6100b03cf4a7afb3566f27e485",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/Data/Hash/Poseidon2.lean",
        "start_line": 649,
        "start_column": 31,
        "end_line": 649,
        "end_column": 36
      },
      "debug_info": {
        "goal": "params\u271d params : Poseidon2.Params\nstate : Vector KoalaBear.Field (Poseidon2.Params.width params)\nrcs\u271d : Vector KoalaBear.Field\n  (Poseidon2.Params.numFullRounds params * Poseidon2.Params.width params +\n    Poseidon2.Params.numPartialRounds params) := \u22ef\nst0 : Vector KoalaBear.Field (Poseidon2.Params.width params) := \u22ef\nst1 : Vector KoalaBear.Field (Poseidon2.Params.width params) := \u22ef\nrcs : Vector KoalaBear.Field\n  (Poseidon2.Params.numFullRounds params * Poseidon2.Params.width params + Poseidon2.Params.numPartialRounds params -\n    Poseidon2.Params.halfNumFullRounds params * Poseidon2.Params.width params) := \u22ef\nst_acc : Vector KoalaBear.Field (Poseidon2.Params.width params)\nrc_idx : Fin (Poseidon2.Params.numPartialRounds params)\n\u22a2 \u2191rc_idx <\n    Poseidon2.Params.numFullRounds params * Poseidon2.Params.width params + Poseidon2.Params.numPartialRounds params -\n      Poseidon2.Params.halfNumFullRounds params * Poseidon2.Params.width params",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0fc5523909130c6100b03cf4a7afb3566f27e485/ArkLib/Data/Hash/Poseidon2.lean#L649"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-09-12T02:34:43-04:00",
        "inclusion_date": "2025-09-18T04:30:57.445731+00:00"
      },
      "id": "d345ae74eb868c64a15e4edb362b5ed181eaf79be88c9deeb308d0dec744a7b6"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "Diagram",
        "commit": "42603e896f018e736a46cedd31f4e0c7f0c49f7d",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PhysLean/Mathematics/Trigonometry/Tanh.lean",
        "start_line": 52,
        "start_column": 2,
        "end_line": 52,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 ContDiff \u211d (\u2191n) tanh",
        "url": "https://github.com/HEPLean/PhysLean/blob/42603e896f018e736a46cedd31f4e0c7f0c49f7d/PhysLean/Mathematics/Trigonometry/Tanh.lean#L52"
      },
      "metadata": {
        "blame_email_hash": "9f36d68419bf",
        "blame_date": "2025-08-15T16:14:41+01:00",
        "inclusion_date": "2025-09-08T16:21:56.648698+00:00"
      },
      "id": "f0110da2c3cec8801c9cf5e6411d1bc70cbd88f10df229b1dc2bae14cd5347a2"
    },
    {
      "repo": {
        "remote": "https://github.com/ufmg-smite/lean-smt",
        "branch": "main",
        "commit": "e994ff05c81214b3397f8b59aaeca4c302bd41dc",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Test/BitVec/XorComm.lean",
        "start_line": 5,
        "start_column": 2,
        "end_line": 5,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : BitVec 2\n\u22a2 x ^^^ y = y ^^^ x",
        "url": "https://github.com/ufmg-smite/lean-smt/blob/e994ff05c81214b3397f8b59aaeca4c302bd41dc/Test/BitVec/XorComm.lean#L5"
      },
      "metadata": {
        "blame_email_hash": "2d71a621927f",
        "blame_date": "2022-07-14T12:41:05-04:00",
        "inclusion_date": "2025-05-17T23:11:31.262140+00:00"
      },
      "id": "0fdae338de0f47f0a2a025dfc4c918ea4db52c7681734343316e257737edebc0"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 507,
        "start_column": 65,
        "end_line": 507,
        "end_column": 70
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 0 < n\n\u22a2 \u220f k \u2208 Finset.Icc 1 n, (1 + 1 / \u2191k ^ 3) \u2264 3 - 1 / \u2191n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L507"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "39fccd821196e5984957e7376e5a81ffd8ed4d345a007d66f839c1d378bff745"
    },
    {
      "repo": {
        "remote": "https://github.com/cmu-l3/llmlean",
        "branch": "kimina-pr",
        "commit": "126a6b2af37727c4d81bb49f6af6b354a380145e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LLMleanTest/Examples2.lean",
        "start_line": 30,
        "start_column": 2,
        "end_line": 30,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\nf : \u03b1 \u2192 \u03b2\ns t : Set \u03b1\nu v : Set \u03b2\nh : Injective f\n\u22a2 f \u207b\u00b9' (f '' s) \u2286 s",
        "url": "https://github.com/cmu-l3/llmlean/blob/126a6b2af37727c4d81bb49f6af6b354a380145e/LLMleanTest/Examples2.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "3ab0971ac342",
        "blame_date": "2024-07-23T17:17:09-04:00",
        "inclusion_date": "2025-06-11T03:39:01.065377+00:00"
      },
      "id": "9960d28c4e2187c63118040e4b369b7e4b38975090e48286ab223c5d666f0908"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_04.lean",
        "start_line": 48,
        "start_column": 4,
        "end_line": 48,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case left\np : \u2115\nh : Fact (Nat.Prime p)\n\u22a2 \u2203 m, p = 4 * m + 1 \u2192 {s | s ^ 2 = -1}.card = 2",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_04.lean#L48"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2024-10-20T20:48:44+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "98068a18a4a5d2c05ad6f9570009f2e6d5e882c984403622c433247f3c7d4e36"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/10FunctionsAndOperators.lean",
        "start_line": 299,
        "start_column": 26,
        "end_line": 299,
        "end_column": 31
      },
      "debug_info": {
        "goal": "m : Type u_4\nn : Type u_5\ninst\u271d\u00b3 : Fintype m\ninst\u271d\u00b2 : Fintype n\ninst\u271d\u00b9 : DecidableEq m\ninst\u271d : DecidableEq n\nA : Matrix m n \u211d\n\u22a2 \u2016A\u2016 \u2264 \u221a\u2191(Fintype.card m) * \u2016A\u2016",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/10FunctionsAndOperators.lean#L299"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2025-08-06T00:45:33+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "58afbce1f4e0d02cf2ddd519dfec16ba6928b6b1031c397b291c2e470779309c"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "54e2692f53004e900064c6f6e8e5a38b2754b0ad",
        "lean_version": "v4.24.0-rc1"
      },
      "location": {
        "path": "Compfiles/Imo2010P3.lean",
        "start_line": 36,
        "start_column": 38,
        "end_line": 36,
        "end_column": 43
      },
      "debug_info": {
        "goal": "case h\ng : Imo2010P3.PosInt \u2192 Imo2010P3.PosInt\nc : Imo2010P3.PosInt\nhc : \u2200 (x : Imo2010P3.PosInt), g x = x + c\nm n : Imo2010P3.PosInt\n\u22a2 (m + c + n) * (n + c + m) = (m + n + c) * (m + n + c)",
        "url": "https://github.com/dwrensha/compfiles/blob/54e2692f53004e900064c6f6e8e5a38b2754b0ad/Compfiles/Imo2010P3.lean#L36"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2025-01-21T08:16:08-05:00",
        "inclusion_date": "2025-09-19T03:11:14.409941+00:00"
      },
      "id": "be73290a56da0f0bcc3f92d965a2f74063ae482985e4f2f788585645dc454f02"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "spectrum-trace-basic",
        "commit": "a5c94a9608b7e1284e477fe1bf258b98d642cf91",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/Classification/LetterlessTrace.lean",
        "start_line": 458,
        "start_column": 4,
        "end_line": 458,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case hR\nn : \u2115\nm : Fin (n + 1)\nh0m : 0 < m\n\u22a2 fcwHeight (fun x1 x2 => x1 < x2) m < n",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/a5c94a9608b7e1284e477fe1bf258b98d642cf91/Foundation/ProvabilityLogic/Classification/LetterlessTrace.lean#L458"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-09-13T18:52:26+09:00",
        "inclusion_date": "2025-09-14T03:21:45.618754+00:00"
      },
      "id": "2f18ebc8a2ec5facdd0400fe054b000f83ecd5ff18d172acc739afc12894e68c"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "ineq_6_3_30",
        "commit": "bcc07a3b1282c61371f9cc8748d1be4765325b7b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainTileCount.lean",
        "start_line": 756,
        "start_column": 6,
        "end_line": 756,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case e_f.h\nX : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Set (\ud835\udd13 X)\n\u03d1 : \u0398 X\nN : \u2115\np : \ud835\udd13 X\n\u22a2 volume (\u22c3 L \u2208 @Antichain.\ud835\udcdb' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N, E p \u2229 G \u2229 \u2191L) =\n    \u2211 L \u2208 toFinset (@Antichain.\ud835\udcdb' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N), volume (E p \u2229 G \u2229 \u2191L)",
        "url": "https://github.com/fpvandoorn/carleson/blob/bcc07a3b1282c61371f9cc8748d1be4765325b7b/Carleson/Antichain/AntichainTileCount.lean#L756"
      },
      "metadata": {
        "blame_email_hash": "b2f50b2f722a",
        "blame_date": "2025-07-07T19:51:31+02:00",
        "inclusion_date": "2025-07-08T03:23:00.070461+00:00"
      },
      "id": "7ad88811b8a87db3c75ae0c657e3da8b469f20b565f868c3653bde12ef2fab07"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "d4d53cd1b6db8169e99c67fced54a69bd72a24bf",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "FLT/GlobalLanglandsConjectures/GLzero.lean",
        "start_line": 82,
        "start_column": 10,
        "end_line": 82,
        "end_column": 15
      },
      "debug_info": {
        "goal": "\u03c1 : Weight 0\nc : \u2102\nx : GL (Fin 0) (IsDedekindDomain.FiniteAdeleRing \u2124 \u211a)\n\u22a2 \u22a4.FG",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/d4d53cd1b6db8169e99c67fced54a69bd72a24bf/FLT/GlobalLanglandsConjectures/GLzero.lean#L82"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-06-24T08:13:27+01:00",
        "inclusion_date": "2025-07-30T22:50:40.863495+00:00"
      },
      "id": "a28d4ca895e4e201109ffb2ce7fb42b9e14d2c3d827490f496deb8196352ca89"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "9e8de5716b162ec8983a89711a186d13ff871c22",
        "lean_version": "v4.24.0-rc1"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 82,
        "start_column": 12,
        "end_line": 82,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case fst.h\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : (\u03b1 \u2192 \u03b2) \u00d7 (\u03b3 \u2192 \u03b4 \u2192 \u03b9)\nx : \u03b1\n\u22a2 p.fst x = q.fst x",
        "url": "https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/AesopTest/ExtScript.lean#L82"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-09-16T04:23:04.307662+00:00"
      },
      "id": "5ca3eb417dd99e9b6bc370f5d1dbc9da3494fbbfb5fb1793da31e70db730422e"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "99a77d19845fb8083456331fd1256bf35a48f60c",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 118,
        "start_column": 8,
        "end_line": 118,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case refine_1.refine_2\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : NNReal\nhX : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 X p \u03bc\nhY : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ni : \u03b1\n\u22a2 MeasurableSet fun \u03c9 => Y \u03c9 i",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/99a77d19845fb8083456331fd1256bf35a48f60c/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L118"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-09-08T22:03:06.847248+00:00"
      },
      "id": "0c06046be5e3f2285c6dc3f64932a9357d5265e46b5f083fcba412e99192a5d5"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "b5313cfd2308dfb6b98d7321bf26243984e4d291",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 7237,
        "start_column": 91,
        "end_line": 7237,
        "end_column": 96
      },
      "debug_info": {
        "goal": "\u03bd : \u211d \u2192 \u211d\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\nc_close : \u211d\nc_close_pos : c_close > 0\nh_close :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 (\u03b5 : \u211d),\n        0 < \u03b5 \u2192 \u03b5 < 1 \u2192 2 < X * \u03b5 \u2192 \u2016SmoothedChebyshev \u03bd \u03b5 X - \u2191(ChebyshevPsi X)\u2016 \u2264 c_close * \u03b5 * X * Real.log X\n\u03b5_main C_main : \u211d\n\u03b5_main_pos : 0 < \u03b5_main\nC_main_pos : 0 < C_main\nh_main : \u2200 \u03b5 \u2208 Ioo 0 \u03b5_main, \u2016MellinTransform (fun x => \u2191(Smooth1 \u03bd \u03b5 x)) 1 - 1\u2016 \u2264 C_main * \u03b5\nA C_bnd : \u211d\nC_bnd_pos : 0 < C_bnd\nA_in_Ioc : A \u2208 Ioc 0 (1 / 2)\nzeta_bnd : LogDerivZetaHasBound A C_bnd\nholo1 :\n  \u2200 (T : \u211d),\n    3 \u2264 T \u2192\n      HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (Icc (1 - A / Real.log T ^ 9) 2 \u00d7\u2102 Icc (-T) T \\ {1})\n\u03c3\u2082' : \u211d\n\u03c3\u2082 : \u211d := max \u03c3\u2082' (1 / 2)\n\u03c3\u2082_pos : 0 < \u03c3\u2082\n\u03c3\u2082_lt_one : \u03c3\u2082 < 1\nholo2 : HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (uIcc \u03c3\u2082 2 \u00d7\u2102 uIcc (-3) 3 \\ {1})\nc\u2081 : \u211d\nc\u2081pos : c\u2081 > 0\nhc\u2081 : \u2200 (\u03b5 : \u211d), 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2081 \u03bd \u03b5 X T\u2016 \u2264 c\u2081 * X * Real.log X / (\u03b5 * T)\nc\u2082 : \u211d\nc\u2082pos : 0 < c\u2082\nhc\u2082 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2082 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2082 * X / (\u03b5 * T)\nc\u2083 : \u211d\nc\u2083pos : 0 < c\u2083\nhc\u2083 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2083 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2083 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2085 : \u211d\nc\u2085pos : 0 < c\u2085\nhc\u2085 : \u2200 (X : \u211d), 3 < X \u2192 \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2016I\u2085 \u03bd \u03b5 X \u03c3\u2082\u2016 \u2264 c\u2085 * X ^ \u03c3\u2082 / \u03b5\nc\u2087 : \u211d\nc\u2087pos : 0 < c\u2087\nhc\u2087 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2087 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2087 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2088 : \u211d\nc\u2088pos : 0 < c\u2088\nhc\u2088 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2088 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2088 * X / (\u03b5 * T)\nc\u2089 : \u211d\nc\u2089pos : c\u2089 > 0\nhc\u2089 : \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2089 \u03bd \u03b5 X T\u2016 \u2264 c\u2089 * X * Real.log X / (\u03b5 * T)\nc\u2084 : \u211d\nc\u2084pos : 0 \u2264 c\u2084\nTlb\u2084 : \u211d\nTlb\u2084bnd : 3 < Tlb\u2084\nhc\u2084 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              Tlb\u2084 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2084 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 \u2264 c\u2084 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2086 : \u211d\nc\u2086pos : 0 \u2264 c\u2086\nTlb\u2086 : \u211d\nTlb\u2086bnd : 3 < Tlb\u2086\nhc\u2086 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              Tlb\u2086 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2086 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 \u2264 c\u2086 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\n\u03b5x : \u211d \u2192 \u211d := fun x => Real.exp (-c * Real.log x ^ (1 / 10))\nTx : \u211d \u2192 \u211d := fun x => Real.exp (2 * c * Real.log x ^ (1 / 10))\neventually_\u03b5x_lt_one : \u2200\u1da0 (x : \u211d) in atTop, \u03b5x x < 1\neventually_2_lt : \u2200\u1da0 (x : \u211d) in atTop, 2 < x * \u03b5x x\neventually_T_gt_3 : \u2200\u1da0 (x : \u211d) in atTop, 3 < Tx x\neventually_T_gt_Tlb\u2084 : \u2200\u1da0 (x : \u211d) in atTop, Tlb\u2084 < Tx x\neventually_T_gt_Tlb\u2086 : \u2200\u1da0 (x : \u211d) in atTop, Tlb\u2086 < Tx x\n\u22a2 \u2200\u1da0 (x : \u211d) in atTop, \u03c3\u2082 < 1 - A / Real.log (Tx x) ^ 9",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/b5313cfd2308dfb6b98d7321bf26243984e4d291/PrimeNumberTheoremAnd/MediumPNT.lean#L7237"
      },
      "metadata": {
        "blame_email_hash": "bee09f470e62",
        "blame_date": "2025-07-20T16:52:08+01:00",
        "inclusion_date": "2025-07-22T23:27:42.532828+00:00"
      },
      "id": "064fdeda9e081fb6b163a5d95520dc402f999a6b3c9d5ebea5b87a29158648df"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "LeanByExample/Tactic/Ext.lean",
        "start_line": 47,
        "start_column": 2,
        "end_line": 47,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u\na b : Set \u03b1\nh : \u2200 (x : \u03b1), x \u2208 a \u2194 x \u2208 b\n\u22a2 a = b",
        "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Tactic/Ext.lean#L47"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2025-01-08T20:05:37+09:00",
        "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
      },
      "id": "a79fbc1f99b4e315596137033e19ea503dda427a7c0dce0aaa7b85b74fd76775"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/MoreRuzsaDist.lean",
        "start_line": 862,
        "start_column": 69,
        "end_line": 862,
        "end_column": 74
      },
      "debug_info": {
        "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\nhm : m \u2265 2\n\u03a9 : Fin m \u2192 Type u_9\nh\u03a9 : (i : Fin m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin m) \u2192 \u03a9 i \u2192 G\n\u22a2 \u2211 j, d[X j # X j] \u2264 2 * \u2191m * D[X ; h\u03a9]",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L862"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-10-17T18:26:36+00:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "02a6bfca12778b8d54058abf6a2be8276203ac786965e258b31668ea565b4848"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-fieldsimp",
        "commit": "d85670c33ad742e383d4cc47d1211411d616863b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/Tactic/FieldSimp2.lean",
        "start_line": 810,
        "start_column": 2,
        "end_line": 810,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y z : \u211a\n\u22a2 (x ^ 2 - y ^ 2) ^ 2 + x ^ 2 * y ^ 2 * 2 ^ 2 = (x ^ 2 + y ^ 2) ^ 2",
        "url": "https://github.com/leanprover-community/mathlib4/blob/d85670c33ad742e383d4cc47d1211411d616863b/Mathlib/Tactic/FieldSimp2.lean#L810"
      },
      "metadata": {
        "blame_email_hash": "e6b953ae4684",
        "blame_date": "2025-06-14T22:31:31+01:00",
        "inclusion_date": "2025-06-17T03:07:09.828027+00:00"
      },
      "id": "0f19d2892fb771dcc7ee6b94051125efcbbafed324dbab4d4f41f01a1948b07a"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 142,
        "start_column": 4,
        "end_line": 142,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type ?u.15406\ninst\u271d : CommRing R\nI J : Ideal R\n\u22a2 \u2200 (c : R) {x : R}, x \u2208 \u2191I \u2229 \u2191J \u2192 c \u2022 x \u2208 \u2191I \u2229 \u2191J",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L142"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "ffcec77361c454ee1776ff391dda60a25e7cb2da2b49d721658a41b50062e81f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "duplex-sponge-fs",
        "commit": "0fc5523909130c6100b03cf4a7afb3566f27e485",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/Data/Vector/Basic.lean",
        "start_line": 257,
        "start_column": 4,
        "end_line": 257,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case refine_2\nR : Type u_1\ninst\u271d\u00b9 : AddCommMonoid R\ninst\u271d : Mul R\nn : \u2115\na b : Vector R n\nn\u271d : \u2115\nhd : R\ntl : Vector R n\u271d\nhd' : R\ntl' : Vector R n\u271d\nih :\n  @Vector.dotProduct R n\u271d inst\u271d\u00b9.toAddZeroClass.toZero inst\u271d\u00b9.toAddCommSemigroup.toAddCommMagma.toAdd inst\u271d tl tl' =\n    tl.get \u2b1d\u1d65 tl'.get\n\u22a2 @Vector.dotProduct R (n\u271d + 1) inst\u271d\u00b9.toAddZeroClass.toZero inst\u271d\u00b9.toAddCommSemigroup.toAddCommMagma.toAdd inst\u271d\n      { toArray := #[hd] ++ tl.toArray, size_toArray := \u22ef } { toArray := #[hd'] ++ tl'.toArray, size_toArray := \u22ef } =\n    { toArray := #[hd] ++ tl.toArray, size_toArray := \u22ef }.get \u2b1d\u1d65\n      { toArray := #[hd'] ++ tl'.toArray, size_toArray := \u22ef }.get",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0fc5523909130c6100b03cf4a7afb3566f27e485/ArkLib/Data/Vector/Basic.lean#L257"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-09-12T02:34:43-04:00",
        "inclusion_date": "2025-09-18T04:30:57.445731+00:00"
      },
      "id": "f084708375cf86c103cf135eb53ad212128d51d5f0c9c313372fea23898badc1"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "StringsCharges",
        "commit": "25c552a2c25a922bf5dbdb120a212ea73b365f5b",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "PhysLean/Electromagnetism/Electrostatics/OneDimension/PointParticle.lean",
        "start_line": 433,
        "start_column": 2,
        "end_line": 433,
        "end_column": 7
      },
      "debug_info": {
        "goal": "q \u03b5 : \u211d\nE : StaticElectricField 1\n\u22a2 E.GaussLaw \u03b5 (Electromagnetism.OneDimPointParticle.chargeDistribution q) \u2194\n    \u2203 m, E = Electromagnetism.OneDimPointParticle.electricField q \u03b5 + constD 1 m",
        "url": "https://github.com/HEPLean/PhysLean/blob/25c552a2c25a922bf5dbdb120a212ea73b365f5b/PhysLean/Electromagnetism/Electrostatics/OneDimension/PointParticle.lean#L433"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-07-23T12:35:40+00:00",
        "inclusion_date": "2025-09-17T03:53:50.079672+00:00"
      },
      "id": "f39bdaac4d24046ccd087094fe5c6b204692204950f10faf7a441f03c75c29be"
    },
    {
      "repo": {
        "remote": "https://github.com/ufmg-smite/lean-smt",
        "branch": "main",
        "commit": "e994ff05c81214b3397f8b59aaeca4c302bd41dc",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Test/BitVec/XorComm.lean",
        "start_line": 9,
        "start_column": 2,
        "end_line": 9,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : BitVec (4 + 4)\n\u22a2 x ^^^ y = y ^^^ x",
        "url": "https://github.com/ufmg-smite/lean-smt/blob/e994ff05c81214b3397f8b59aaeca4c302bd41dc/Test/BitVec/XorComm.lean#L9"
      },
      "metadata": {
        "blame_email_hash": "2d71a621927f",
        "blame_date": "2022-07-14T12:41:05-04:00",
        "inclusion_date": "2025-05-17T23:11:31.262140+00:00"
      },
      "id": "d3457d2e5b75a9849b2e40aa258c7a298792a74d0797661c455499ab22a2885a"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 510,
        "start_column": 53,
        "end_line": 510,
        "end_column": 58
      },
      "debug_info": {
        "goal": "\u22a2 (\u220f k \u2208 Finset.range 6, (2 * k + 1)) % 10 = 5",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L510"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "cb25adb151c8e616bfc77473141823d140f8c99dc1d7f225fea3a02b39ff8bd6"
    },
    {
      "repo": {
        "remote": "https://github.com/cmu-l3/llmlean",
        "branch": "kimina-pr",
        "commit": "126a6b2af37727c4d81bb49f6af6b354a380145e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LLMleanTest/Examples2.lean",
        "start_line": 33,
        "start_column": 2,
        "end_line": 33,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\nf : \u03b1 \u2192 \u03b2\ns t : Set \u03b1\nu v : Set \u03b2\n\u22a2 f '' (f \u207b\u00b9' u) \u2286 u",
        "url": "https://github.com/cmu-l3/llmlean/blob/126a6b2af37727c4d81bb49f6af6b354a380145e/LLMleanTest/Examples2.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "3ab0971ac342",
        "blame_date": "2024-07-23T17:17:09-04:00",
        "inclusion_date": "2025-06-11T03:39:01.065377+00:00"
      },
      "id": "e48121024451e276c7af04dee18701024ed1faf56526e2fade549c106fa6cb9c"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_04.lean",
        "start_line": 53,
        "start_column": 6,
        "end_line": 53,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case right.right\np : \u2115\nh : Fact (Nat.Prime p)\n\u22a2 \u2203 m, p = 4 * m + 1 \u2192 {s | s ^ 2 = -1}.card = 0",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_04.lean#L53"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2024-10-20T20:48:44+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "ac4934b9b7b053b8c77fb30d9eaf57e6193b9a23fbfda8d327d972f71b076264"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/10FunctionsAndOperators.lean",
        "start_line": 300,
        "start_column": 33,
        "end_line": 300,
        "end_column": 38
      },
      "debug_info": {
        "goal": "m : Type u_4\nn : Type u_5\ninst\u271d\u00b3 : Fintype m\ninst\u271d\u00b2 : Fintype n\ninst\u271d\u00b9 : DecidableEq m\ninst\u271d : DecidableEq n\nA : Matrix m n \u211d\n\u22a2 \u2016A\u2016 \u2264 \u221a\u2191A.rank * \u2016A\u2016",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/10FunctionsAndOperators.lean#L300"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2025-08-06T00:45:33+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "87ee9087b81ad6cca90f250cbaf38ddafa601ab1458d624747a3e93573828a82"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 1 - 1, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "f5eccdc3c1087ce8e0fa5de98487c4b9f0e17b466a14c6ff17bfd51f7ee844df"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "spectrum-trace-basic",
        "commit": "a5c94a9608b7e1284e477fe1bf258b98d642cf91",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/Classification/LetterlessTrace.lean",
        "start_line": 459,
        "start_column": 4,
        "end_line": 459,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case h\nn : \u2115\n\u22a2 \u2203 b, 0 < b \u2227 n \u2264 fcwHeight (fun x1 x2 => x1 < x2) b + 1",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/a5c94a9608b7e1284e477fe1bf258b98d642cf91/Foundation/ProvabilityLogic/Classification/LetterlessTrace.lean#L459"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-09-13T18:52:26+09:00",
        "inclusion_date": "2025-09-14T03:21:45.618754+00:00"
      },
      "id": "316b94e6e80064229e26c79d238ad7aef42e598404cc8f75647ac44205bea9b9"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "ineq_6_3_30",
        "commit": "bc8a66ae53b6783c978681f53ed56302733ab997",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainTileCount.lean",
        "start_line": 542,
        "start_column": 29,
        "end_line": 542,
        "end_column": 34
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Finset (\ud835\udd13 X)\n\u03d1 : \u0398 X\nN : \u2115\nL : Grid X\nhL : L \u2208 @Antichain.\ud835\udcdb' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N\np' : \ud835\udd13 X := \u22ef\nhp' : L \u2264 \ud835\udcd8 p'\n\u22a2 @Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL \u2264 \ud835\udcd8 p'",
        "url": "https://github.com/fpvandoorn/carleson/blob/bc8a66ae53b6783c978681f53ed56302733ab997/Carleson/Antichain/AntichainTileCount.lean#L542"
      },
      "metadata": {
        "blame_email_hash": "b2f50b2f722a",
        "blame_date": "2025-07-04T17:45:30+02:00",
        "inclusion_date": "2025-07-05T03:56:58.007111+00:00"
      },
      "id": "4fd2983f64d763304f0a896f8f2a4e3362557d9aa9c78d96fd3f14f97ba84a60"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-CI-fix",
        "commit": "ff1b6f6928d9860b559edca6707887c0b6b70eff",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FLT/EllipticCurve/Torsion.lean",
        "start_line": 50,
        "start_column": 69,
        "end_line": 50,
        "end_column": 74
      },
      "debug_info": {
        "goal": "A : Type u_1\ninst\u271d : AddCommGroup A\nn : \u2115\nhn : 0 < n\nr : \u2115\nh : \u2200 (d : \u2115), d \u2223 n \u2192 Nat.card \u21a5(Submodule.torsionBy \u2124 A \u2191d) = d ^ r\n\u22a2 \u2203 \u03c6, True",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/ff1b6f6928d9860b559edca6707887c0b6b70eff/FLT/EllipticCurve/Torsion.lean#L50"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-06-17T16:49:55+01:00",
        "inclusion_date": "2025-09-08T17:50:19.403061+00:00"
      },
      "id": "6cc0e22e47da20f77c357fb0fe2080c2b7318ecd97442e535d4001bdf3b98a3d"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "9e8de5716b162ec8983a89711a186d13ff871c22",
        "lean_version": "v4.24.0-rc1"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 82,
        "start_column": 12,
        "end_line": 82,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case snd.h.h\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : (\u03b1 \u2192 \u03b2) \u00d7 (\u03b3 \u2192 \u03b4 \u2192 \u03b9)\nx : \u03b3\nx_1 : \u03b4\n\u22a2 p.snd x x_1 = q.snd x x_1",
        "url": "https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/AesopTest/ExtScript.lean#L82"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-09-16T04:23:04.307662+00:00"
      },
      "id": "bed1a3768cd11de6a9e54e9973396b1a46ea16f304dc342e21a5b685f4aadbe3"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "99a77d19845fb8083456331fd1256bf35a48f60c",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 126,
        "start_column": 8,
        "end_line": 126,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case refine_2.refine_1\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : NNReal\nhX : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 X p \u03bc\nhY : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\ni : \u03b1\nhi : i \u2208 s\n\u22a2 MeasurableSet {\u03c9 | X \u03c9 i}",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/99a77d19845fb8083456331fd1256bf35a48f60c/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L126"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-09-08T22:03:06.847248+00:00"
      },
      "id": "bb0d6c5b1ba2f1ccd6bbfc5f3e57954c575130a7f5f7b90a5d3a8f5fdd8090e5"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "e99e6f7b4a57098ded666cd0ed64aae7078440a3",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 7333,
        "start_column": 4,
        "end_line": 7333,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case h\n\u03bd : \u211d \u2192 \u211d\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\nc_close : \u211d\nc_close_pos : c_close > 0\nh_close :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 (\u03b5 : \u211d),\n        0 < \u03b5 \u2192 \u03b5 < 1 \u2192 2 < X * \u03b5 \u2192 \u2016SmoothedChebyshev \u03bd \u03b5 X - \u2191(ChebyshevPsi X)\u2016 \u2264 c_close * \u03b5 * X * Real.log X\nA C_bnd : \u211d\nC_bnd_pos : 0 < C_bnd\nA_in_Ioc : A \u2208 Ioc 0 (1 / 2)\nzeta_bnd : LogDerivZetaHasBound A C_bnd\nholo1 :\n  \u2200 (T : \u211d),\n    3 \u2264 T \u2192\n      HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (Icc (1 - A / Real.log T ^ 9) 2 \u00d7\u2102 Icc (-T) T \\ {1})\n\u03c3\u2082' : \u211d\n\u03c3\u2082 : \u211d := max \u03c3\u2082' (1 / 2)\n\u03c3\u2082_pos : 0 < \u03c3\u2082\n\u03c3\u2082_lt_one : \u03c3\u2082 < 1\nholo2 : HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (uIcc \u03c3\u2082 2 \u00d7\u2102 uIcc (-3) 3 \\ {1})\nc\u2081 : \u211d\nc\u2081pos : c\u2081 > 0\nhc\u2081 : \u2200 (\u03b5 : \u211d), 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2081 \u03bd \u03b5 X T\u2016 \u2264 c\u2081 * X * Real.log X / (\u03b5 * T)\nc\u2082 : \u211d\nc\u2082pos : 0 < c\u2082\nhc\u2082 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2082 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2082 * X / (\u03b5 * T)\nc\u2083 : \u211d\nc\u2083pos : 0 < c\u2083\nhc\u2083 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2083 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2083 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2085 : \u211d\nc\u2085pos : 0 < c\u2085\nhc\u2085 : \u2200 (X : \u211d), 3 < X \u2192 \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2016I\u2085 \u03bd \u03b5 X \u03c3\u2082\u2016 \u2264 c\u2085 * X ^ \u03c3\u2082 / \u03b5\nc\u2087 : \u211d\nc\u2087pos : 0 < c\u2087\nhc\u2087 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2087 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2087 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2088 : \u211d\nc\u2088pos : 0 < c\u2088\nhc\u2088 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2088 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2088 * X / (\u03b5 * T)\nc\u2089 : \u211d\nc\u2089pos : c\u2089 > 0\nhc\u2089 : \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2089 \u03bd \u03b5 X T\u2016 \u2264 c\u2089 * X * Real.log X / (\u03b5 * T)\nc : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\n\u03b5x : \u211d \u2192 \u211d := fun x => Real.exp (-c * Real.log x ^ (1 / 10))\nTx : \u211d \u2192 \u211d := fun x => Real.exp (2 * c * Real.log x ^ (1 / 10))\neventually_\u03b5x_lt_one : \u2200\u1da0 (x : \u211d) in atTop, \u03b5x x < 1\nx : \u211d\nhx : x \u2265 sorry\n\u22a2 2 < x * Real.exp (-c * Real.log x ^ (1 / 10))",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/e99e6f7b4a57098ded666cd0ed64aae7078440a3/PrimeNumberTheoremAnd/MediumPNT.lean#L7333"
      },
      "metadata": {
        "blame_email_hash": "bee09f470e62",
        "blame_date": "2025-07-19T18:28:56+01:00",
        "inclusion_date": "2025-07-21T23:21:07.188403+00:00"
      },
      "id": "a5d0c5f69ae14ca80ca34e35ab554973635047ec498adc9c1180a0c495704d17"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "LeanByExample/Tactic/Ext.lean",
        "start_line": 95,
        "start_column": 2,
        "end_line": 95,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\np q : Foo\nhx : p.x = q.x\nhy : p.y = q.y\n\u22a2 p = q",
        "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Tactic/Ext.lean#L95"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2025-01-08T20:05:37+09:00",
        "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
      },
      "id": "5f71aae7fe81842dbdfa9970601f6c62c5de0ff5b96d88d5fb78baef222d3b88"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/MoreRuzsaDist.lean",
        "start_line": 868,
        "start_column": 108,
        "end_line": 868,
        "end_column": 113
      },
      "debug_info": {
        "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\nhm : m \u2265 2\n\u03a9 : Fin m \u2192 Type u_9\nh\u03a9 : (i : Fin m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin m) \u2192 \u03a9 i \u2192 G\nhidenT : \u2200 (j k : Fin m), IdentDistrib (X j) (X k) \u2119 \u2119\n\u22a2 \u2200 (i : Fin m), D[X ; h\u03a9] \u2264 \u2191m * d[X i # X i]",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L868"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-10-17T18:26:36+00:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "48ea0753abd67fbe6fe270d0a60c2749648b01ff3c66fd725d932e1a3aeeeae7"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-fieldsimp",
        "commit": "d85670c33ad742e383d4cc47d1211411d616863b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/Tactic/FieldSimp2.lean",
        "start_line": 834,
        "start_column": 2,
        "end_line": 834,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x\u271d y z x : \u211a\nh\u2080 : x \u2260 0\n\u22a2 x ^ 8 * 3 ^ 2 * 2 ^ 3 = 4 * x ^ 8 * 18",
        "url": "https://github.com/leanprover-community/mathlib4/blob/d85670c33ad742e383d4cc47d1211411d616863b/Mathlib/Tactic/FieldSimp2.lean#L834"
      },
      "metadata": {
        "blame_email_hash": "e6b953ae4684",
        "blame_date": "2025-06-14T22:31:31+01:00",
        "inclusion_date": "2025-06-17T03:07:09.828027+00:00"
      },
      "id": "b1f82d681f2a8115d7b2ed3cf9a200ca7f4ffb4ac276dd128715735866e0a0f0"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 191,
        "start_column": 4,
        "end_line": 191,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type ?u.18803\ninst\u271d\u00b9 : CommRing R\nS : Type ?u.18809\ninst\u271d : CommRing S\nf : R \u2192+* S\nx : R\n\u22a2 x \u2208 ker f \u2192 f x = 0",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L191"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "1ec7d2fda45ef6811101287159cdf20578c85c19236111d9df864f1c3e5b3616"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean",
        "start_line": 539,
        "start_column": 48,
        "end_line": 539,
        "end_column": 53
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Fintype L\ninst\u271d\u2076 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2075 : Field \ud835\udd3dq\ninst\u271d\u2074 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u00b3 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b2 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u00b9 : NeZero \u03d1\ninst\u271d : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\nf : \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e80, \u22ef\u27e9) \u2192 L\ndomain_size : \u2115 := Fintype.card \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e80, \u22ef\u27e9)\nk : \u2115 := 2 ^ \u2113\ne : \u2115 := (domain_size - k - 1) / 2\n\u03c9s : Fin domain_size \u2192 L := sorry\nf_vals : Fin domain_size \u2192 L := sorry\n\u22a2 NeZero domain_size",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean#L539"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "c83438e3847a857daf1f7dc4ecd3050a97678316b1dc9e72cf85c87eddbd4d02"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "StringsCharges",
        "commit": "25c552a2c25a922bf5dbdb120a212ea73b365f5b",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "PhysLean/Electromagnetism/Electrostatics/OneDimension/Vacuum.lean",
        "start_line": 34,
        "start_column": 2,
        "end_line": 34,
        "end_column": 7
      },
      "debug_info": {
        "goal": "q \u03b5 : \u211d\nE : StaticElectricField 1\n\u22a2 E.GaussLaw \u03b5 Electromagnetism.OneDimVacuum.chargeDistribution \u2194 \u2203 m, E = constD 1 m",
        "url": "https://github.com/HEPLean/PhysLean/blob/25c552a2c25a922bf5dbdb120a212ea73b365f5b/PhysLean/Electromagnetism/Electrostatics/OneDimension/Vacuum.lean#L34"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-07-23T12:35:40+00:00",
        "inclusion_date": "2025-09-17T03:53:50.079672+00:00"
      },
      "id": "9ac2cbaad461a85bf988e4cdb6371cf51a4b6c61ecbbe31bd147eb62e2ba8bf1"
    },
    {
      "repo": {
        "remote": "https://github.com/ufmg-smite/lean-smt",
        "branch": "main",
        "commit": "da4ba9acf1845fe264b2bce14923f8e09fbabf28",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Test/Int/DefineSort.lean",
        "start_line": 8,
        "start_column": 2,
        "end_line": 8,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : MyInt\n\u22a2 a.add b = b.add a",
        "url": "https://github.com/ufmg-smite/lean-smt/blob/da4ba9acf1845fe264b2bce14923f8e09fbabf28/Test/Int/DefineSort.lean#L8"
      },
      "metadata": {
        "blame_email_hash": "2d71a621927f",
        "blame_date": "2022-07-14T12:41:05-04:00",
        "inclusion_date": "2025-05-10T00:11:57.827209+00:00"
      },
      "id": "753ff24aee0686daae4c97acb6cfea1d7808833f7008cc688952fc7c1e7fbc13"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 575,
        "start_column": 89,
        "end_line": 575,
        "end_column": 94
      },
      "debug_info": {
        "goal": "a : \u2115 \u2192 \u2115\nh\u2080 : a 0 ^ 3 = 1\nh\u2081 : a 1 ^ 3 = 8\nh\u2082 : a 2 ^ 3 = 27\nh\u2083 : a 3 ^ 3 = 64\nh\u2084 : a 4 ^ 3 = 125\nh\u2085 : a 5 ^ 3 = 216\nh\u2086 : a 6 ^ 3 = 343\n\u22a2 \u2211 k \u2208 Finset.range 7, 6 * a k ^ 2 - 2 * \u2211 k \u2208 Finset.range 6, a k ^ 2 = 658",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L575"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "0d0e86e234a2d894de8825575171a2207265c4cb45c360d1ed641dbc680685cd"
    },
    {
      "repo": {
        "remote": "https://github.com/cmu-l3/llmlean",
        "branch": "kimina-pr",
        "commit": "126a6b2af37727c4d81bb49f6af6b354a380145e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LLMleanTest/Examples2.lean",
        "start_line": 36,
        "start_column": 2,
        "end_line": 36,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\nf : \u03b1 \u2192 \u03b2\ns t : Set \u03b1\nu v : Set \u03b2\nh : Surjective f\n\u22a2 u \u2286 f '' (f \u207b\u00b9' u)",
        "url": "https://github.com/cmu-l3/llmlean/blob/126a6b2af37727c4d81bb49f6af6b354a380145e/LLMleanTest/Examples2.lean#L36"
      },
      "metadata": {
        "blame_email_hash": "3ab0971ac342",
        "blame_date": "2024-07-23T17:17:09-04:00",
        "inclusion_date": "2025-06-11T03:39:01.065377+00:00"
      },
      "id": "d1b8b7cf37fa95cc592aea39278d986b752666c5b37dc8b6c38bc322f5fc9d0c"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_04.lean",
        "start_line": 85,
        "start_column": 2,
        "end_line": 85,
        "end_column": 7
      },
      "debug_info": {
        "goal": "p : \u2115\nh : Fact (Nat.Prime p)\nhp : p % 4 = 1\n\u22a2 \u2203 a b, a ^ 2 + b ^ 2 = p",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_04.lean#L85"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2024-10-20T20:48:44+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "4c92c2e620172cc409851ea4650719414487b5ed4548570d52cac4addfe651fd"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/10FunctionsAndOperators.lean",
        "start_line": 301,
        "start_column": 12,
        "end_line": 301,
        "end_column": 17
      },
      "debug_info": {
        "goal": "m : Type u_4\nn : Type u_5\ninst\u271d\u00b3 : Fintype m\ninst\u271d\u00b2 : Fintype n\ninst\u271d\u00b9 : DecidableEq m\ninst\u271d : DecidableEq n\nA : Matrix m n \u211d\n\u22a2 sorry A \u2264 \u221a(\u2191(Fintype.card m) * \u2191(Fintype.card n) * \u2191A.rank) * \u2016A\u2016",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/10FunctionsAndOperators.lean#L301"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2025-08-06T00:45:33+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "de11fa6996289df2ae3e7d3aa8650c4b902854b3e528b70b52c73c646b15d8d6"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 2 - 1, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "1b4549a7f99321c680d5eba196ed48a2f03b1c6e38b415b48bae98b318c4572d"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "D-provlogic",
        "commit": "502486d0cdcfe147471cfb5fb9a7145b41e37f87",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/D/Completeness.lean",
        "start_line": 34,
        "start_column": 2,
        "end_line": 34,
        "end_column": 7
      },
      "debug_info": {
        "goal": "T : ArithmeticTheory\ninst\u271d\u00b2 : Theory.\u0394\u2081 T\ninst\u271d\u00b9 : \ud835\udddc\ud835\udeba\u2081 \u2aaf T\ninst\u271d : \u2115 \u22a7\u2098* T\n\u22a2 T + \u2191(LO.FirstOrder.ArithmeticTheory.LocalReflection T inst\u271d\u00b2 (Arithmetic.Hierarchy \ud835\udeba 1)) \u224a\n    T +\n      \u2191(\u22c3 a,\n          {x |\n            \u2191a (\u223c\u25a1\u22a5) = x \u2228\n              \u2191(Theory.standardProvability T) (\u2191(Theory.standardProvability T) (a.val 0)) \u279d\n                  \u2191(Theory.standardProvability T) (a.val 1) =\n                x})",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/502486d0cdcfe147471cfb5fb9a7145b41e37f87/Foundation/ProvabilityLogic/D/Completeness.lean#L34"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-09-11T00:07:47+09:00",
        "inclusion_date": "2025-09-12T03:28:19.860470+00:00"
      },
      "id": "c1dfdf2e2ddba2c564ab1a8afd1b809a9e142565b3fb59a8860a56ceadbdefd6"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "ineq_6_3_30",
        "commit": "bc8a66ae53b6783c978681f53ed56302733ab997",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainTileCount.lean",
        "start_line": 550,
        "start_column": 64,
        "end_line": 550,
        "end_column": 69
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Finset (\ud835\udd13 X)\n\u03d1 : \u0398 X\nN : \u2115\nL : Grid X\nhL : L \u2208 @Antichain.\ud835\udcdb' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N\np' : \ud835\udd13 X := \u22ef\nhp' : L \u2264 \ud835\udcd8 p'\nhle : @Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL \u2264 \ud835\udcd8 p'\nhL' :\n  @Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL \u2209\n    @Antichain.\ud835\udcdb X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N\n\u22a2 \u2203 p, \ud835\udcd8 \u2191p \u2264 @Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL",
        "url": "https://github.com/fpvandoorn/carleson/blob/bc8a66ae53b6783c978681f53ed56302733ab997/Carleson/Antichain/AntichainTileCount.lean#L550"
      },
      "metadata": {
        "blame_email_hash": "b2f50b2f722a",
        "blame_date": "2025-07-04T17:45:30+02:00",
        "inclusion_date": "2025-07-05T03:56:58.007111+00:00"
      },
      "id": "a477089b5e116a4a49c4206655d85b35fd62eaffeef469949370cc39b85edfd0"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-hardly-ramified",
        "commit": "60be88a841fa232b563ea16600befe5efbfb3d07",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FLT/HaarMeasure/HaarChar/AdeleRing.lean",
        "start_line": 89,
        "start_column": 22,
        "end_line": 89,
        "end_column": 27
      },
      "debug_info": {
        "goal": "K : Type u_1\nL : Type u_2\ninst\u271d\u00b9\u2070 : Field K\ninst\u271d\u2079 : Field L\ninst\u271d\u2078 : Algebra K L\ninst\u271d\u2077 : NumberField K\ninst\u271d\u2076 : NumberField L\nV : Type u_3\ninst\u271d\u2075 : AddCommGroup V\ninst\u271d\u2074 : Module L V\ninst\u271d\u00b3 : Module K V\ninst\u271d\u00b2 : IsScalarTower K L V\ninst\u271d\u00b9 : FiniteDimensional L V\ninst\u271d : FiniteDimensional K V\n\u22a2 failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/60be88a841fa232b563ea16600befe5efbfb3d07/FLT/HaarMeasure/HaarChar/AdeleRing.lean#L89"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-06-07T23:01:07+01:00",
        "inclusion_date": "2025-09-18T04:05:26.332171+00:00"
      },
      "id": "5e1e488e7c33a76373c7d095bd1968c2477aad37578eb5c2906d77dbbab69de0"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "9e8de5716b162ec8983a89711a186d13ff871c22",
        "lean_version": "v4.24.0-rc1"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 31,
        "start_column": 12,
        "end_line": 31,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case fst\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : @MyProd \u03b1 \u03b2\n\u22a2 @MyProd.fst \u03b1 \u03b2 p = @MyProd.fst \u03b1 \u03b2 q",
        "url": "https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/AesopTest/ExtScript.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-09-16T04:23:04.307662+00:00"
      },
      "id": "cab136f1c11bdc25fd54b142b93b124e6693b06d5df68cbb4939934efafb53c1"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "99a77d19845fb8083456331fd1256bf35a48f60c",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 127,
        "start_column": 8,
        "end_line": 127,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case refine_2.refine_2\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : NNReal\nhX : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 X p \u03bc\nhY : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\ni : \u03b1\nhi : i \u2208 s\n\u22a2 MeasurableSet {\u03c9 | Y \u03c9 i}",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/99a77d19845fb8083456331fd1256bf35a48f60c/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L127"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-09-08T22:03:06.847248+00:00"
      },
      "id": "500d424542c3c0d8c18a7a49d9d81ab94805342079bf0d2d1793d17f3adf5ccf"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "e99e6f7b4a57098ded666cd0ed64aae7078440a3",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 7334,
        "start_column": 63,
        "end_line": 7334,
        "end_column": 68
      },
      "debug_info": {
        "goal": "\u03bd : \u211d \u2192 \u211d\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\nc_close : \u211d\nc_close_pos : c_close > 0\nh_close :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 (\u03b5 : \u211d),\n        0 < \u03b5 \u2192 \u03b5 < 1 \u2192 2 < X * \u03b5 \u2192 \u2016SmoothedChebyshev \u03bd \u03b5 X - \u2191(ChebyshevPsi X)\u2016 \u2264 c_close * \u03b5 * X * Real.log X\nA C_bnd : \u211d\nC_bnd_pos : 0 < C_bnd\nA_in_Ioc : A \u2208 Ioc 0 (1 / 2)\nzeta_bnd : LogDerivZetaHasBound A C_bnd\nholo1 :\n  \u2200 (T : \u211d),\n    3 \u2264 T \u2192\n      HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (Icc (1 - A / Real.log T ^ 9) 2 \u00d7\u2102 Icc (-T) T \\ {1})\n\u03c3\u2082' : \u211d\n\u03c3\u2082 : \u211d := max \u03c3\u2082' (1 / 2)\n\u03c3\u2082_pos : 0 < \u03c3\u2082\n\u03c3\u2082_lt_one : \u03c3\u2082 < 1\nholo2 : HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (uIcc \u03c3\u2082 2 \u00d7\u2102 uIcc (-3) 3 \\ {1})\nc\u2081 : \u211d\nc\u2081pos : c\u2081 > 0\nhc\u2081 : \u2200 (\u03b5 : \u211d), 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2081 \u03bd \u03b5 X T\u2016 \u2264 c\u2081 * X * Real.log X / (\u03b5 * T)\nc\u2082 : \u211d\nc\u2082pos : 0 < c\u2082\nhc\u2082 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2082 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2082 * X / (\u03b5 * T)\nc\u2083 : \u211d\nc\u2083pos : 0 < c\u2083\nhc\u2083 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2083 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2083 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2085 : \u211d\nc\u2085pos : 0 < c\u2085\nhc\u2085 : \u2200 (X : \u211d), 3 < X \u2192 \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2016I\u2085 \u03bd \u03b5 X \u03c3\u2082\u2016 \u2264 c\u2085 * X ^ \u03c3\u2082 / \u03b5\nc\u2087 : \u211d\nc\u2087pos : 0 < c\u2087\nhc\u2087 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2087 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2087 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2088 : \u211d\nc\u2088pos : 0 < c\u2088\nhc\u2088 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2088 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2088 * X / (\u03b5 * T)\nc\u2089 : \u211d\nc\u2089pos : c\u2089 > 0\nhc\u2089 : \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2089 \u03bd \u03b5 X T\u2016 \u2264 c\u2089 * X * Real.log X / (\u03b5 * T)\nc : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\n\u03b5x : \u211d \u2192 \u211d := fun x => Real.exp (-c * Real.log x ^ (1 / 10))\nTx : \u211d \u2192 \u211d := fun x => Real.exp (2 * c * Real.log x ^ (1 / 10))\neventually_\u03b5x_lt_one : \u2200\u1da0 (x : \u211d) in atTop, \u03b5x x < 1\neventually_2_lt : \u2200\u1da0 (x : \u211d) in atTop, 2 < x * \u03b5x x\n\u22a2 \u2200\u1da0 (x : \u211d) in atTop, 3 < Tx x",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/e99e6f7b4a57098ded666cd0ed64aae7078440a3/PrimeNumberTheoremAnd/MediumPNT.lean#L7334"
      },
      "metadata": {
        "blame_email_hash": "bee09f470e62",
        "blame_date": "2025-07-19T18:28:56+01:00",
        "inclusion_date": "2025-07-21T23:21:07.188403+00:00"
      },
      "id": "d2204b59340512e39a5fc633f2a0537fadc50dfb88bf3b2cb06c4ecd3a4b60d8"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "3d8e1994e2522b249c36b71db17765a779eaa787",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "LeanByExample/Tactic/Ext.lean",
        "start_line": 47,
        "start_column": 2,
        "end_line": 47,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u\na b : @Set \u03b1\nh : \u2200 (x : \u03b1), x \u2208 a \u2194 x \u2208 b\n\u22a2 a = b",
        "url": "https://github.com/lean-ja/lean-by-example/blob/3d8e1994e2522b249c36b71db17765a779eaa787/LeanByExample/Tactic/Ext.lean#L47"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2025-01-08T20:05:37+09:00",
        "inclusion_date": "2025-09-15T04:41:33.921583+00:00"
      },
      "id": "cfcd6fdf8db26c8825763924ff8110ceb1fa3137c5a957e6fc30e1dfbf4e0c2c"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/MoreRuzsaDist.lean",
        "start_line": 877,
        "start_column": 235,
        "end_line": 877,
        "end_column": 240
      },
      "debug_info": {
        "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\nhm : m \u2265 2\n\u03a9 : Fin m \u2192 Type u_9\nh\u03a9 : (i : Fin m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin m) \u2192 \u03a9 i \u2192 G\nhvanish : D[X ; h\u03a9] = 0\n\u22a2 \u2200 (i : Fin m), \u2203 H U, Measurable U \u2227 IsUniform (\u2191H) U \u2119 \u2227 d[X i # U] = 0",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L877"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-10-17T18:26:36+00:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "c52d6e6eb7a0dded9b209c517f5a02052305d773f48d73baaa445693f6829613"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-fieldsimp",
        "commit": "d85670c33ad742e383d4cc47d1211411d616863b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/Tactic/FieldSimp2.lean",
        "start_line": 388,
        "start_column": 34,
        "end_line": 388,
        "end_column": 39
      },
      "debug_info": {
        "goal": "\u00ab$v\u00bb : Level\n\u00ab$M\u00bb : Type v\n\u00ab$iM\u00bb : Semifield \u00ab$M\u00bb\n\u00ab$a\u2081\u00bb : \u2124\n\u00ab$x\u2081\u00bb : \u00ab$M\u00bb\n\u00ab$k\u2081\u00bb : \u2115\n\u00ab$a\u2082\u00bb : \u2124\n\u00ab$x\u2082\u00bb : \u00ab$M\u00bb\n\u00ab$k\u2082\u00bb : \u2115\nunknown_1 unknown_2 unknown_3 : List (\u2124 \u00d7 \u00ab$M\u00bb)\n\u00ab$pf\u00bb :\n  @Mathlib.Tactic.FieldSimp.NF.eval \u00ab$M\u00bb \u00ab$iM\u00bb.toDivisionSemiring.toGroupWithZero.toDivInvMonoid unknown_1 *\n      @Mathlib.Tactic.FieldSimp.NF.eval \u00ab$M\u00bb \u00ab$iM\u00bb.toDivisionSemiring.toGroupWithZero.toDivInvMonoid unknown_2 =\n    @Mathlib.Tactic.FieldSimp.NF.eval \u00ab$M\u00bb \u00ab$iM\u00bb.toDivisionSemiring.toGroupWithZero.toDivInvMonoid unknown_3\n\u00ab$h\u00bb : \u00ab$a\u2081\u00bb + \u00ab$a\u2082\u00bb = 0\n\u22a2 \u00ab$x\u2081\u00bb \u2260 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/d85670c33ad742e383d4cc47d1211411d616863b/Mathlib/Tactic/FieldSimp2.lean#L388"
      },
      "metadata": {
        "blame_email_hash": "e6b953ae4684",
        "blame_date": "2025-06-14T21:34:58+01:00",
        "inclusion_date": "2025-06-17T03:07:09.828027+00:00"
      },
      "id": "fe28343fd4820c8fd74e15d955c7cfb26a37d811a2a8c1b38998d353d4fe5495"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 197,
        "start_column": 2,
        "end_line": 197,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : CommRing R\nS : Type u_2\ninst\u271d : CommRing S\nf : R \u2192+* S\nx : R\n\u22a2 (@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f) ((Ideal.Quotient.mk (ker f)) x) = f x",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L197"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "eee895e80b4366a1d7677c1993b77d22bd6743c8f51c27fe582f258776242eae"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean",
        "start_line": 566,
        "start_column": 41,
        "end_line": 566,
        "end_column": 46
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Fintype L\ninst\u271d\u2076 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2075 : Field \ud835\udd3dq\ninst\u271d\u2074 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u00b3 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b2 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u00b9 : NeZero \u03d1\ninst\u271d : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\nf : \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e80, \u22ef\u27e9) \u2192 L\ndomain_size : \u2115 := \u22ef\nk : \u2115 := \u22ef\ne : \u2115 := \u22ef\n\u03c9s : Fin domain_size \u2192 L := \u22ef\nf_vals : Fin domain_size \u2192 L := \u22ef\ndomain_neZero : NeZero domain_size\nberlekamp_welch_result : Option (Polynomial L) := \u22ef\nP : Polynomial L\nh\u271d : \u00acP.natDegree \u2265 2 ^ \u2113\nh_deg_bound : P \u2208 degreeLT L (2 ^ \u2113)\nP_bounded : \u21a5(degreeLT L (2 ^ \u2113)) := \u22ef\nmonomial_coeffs : Fin (2 ^ \u2113) \u2192 L := \u22ef\n\u22a2 Fintype.card \ud835\udd3dq = 2",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean#L566"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "eec28d37427c8904e04647c79dc78c3300f702ba66c8fb6214b1474833198838"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "Strings-ACC",
        "commit": "d569dfde8b280c659b2ae068e2c6a9c889108b21",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PhysLean/StringTheory/FTheory/SU5U1/Quanta/AnomalyCancellation/Charges.lean",
        "start_line": 59,
        "start_column": 2,
        "end_line": 59,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\ud835\udce9 : Type\ninst\u271d\u00b3 : AddCommGroup \ud835\udce9\ninst\u271d\u00b2 : DecidableEq \ud835\udce9\nx : Charges \ud835\udce9\n\ud835\udce9' : Type\ninst\u271d\u00b9 : DecidableEq \ud835\udce9'\ninst\u271d : AddCommGroup \ud835\udce9'\nf : \ud835\udce9 \u2192 \ud835\udce9'\n\u22a2 FTheory.SU5U1.Charges.AnomalyFreeCharges \ud835\udce9 inst\u271d\u00b3 inst\u271d\u00b2 x \ud835\udce9' inst\u271d\u00b9 inst\u271d f \u2194\n    \u2203 Q, AnomalyCancellationGen \ud835\udce9' f Q.1 Q.2.1 Q.2.2.1 Q.2.2.2 \u2227 Q.toCharges = x",
        "url": "https://github.com/HEPLean/PhysLean/blob/d569dfde8b280c659b2ae068e2c6a9c889108b21/PhysLean/StringTheory/FTheory/SU5U1/Quanta/AnomalyCancellation/Charges.lean#L59"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-07-21T09:57:16+00:00",
        "inclusion_date": "2025-07-21T23:54:54.110650+00:00"
      },
      "id": "8dae327acf9553d875b8fc94de2a7326a25e6c946e299b96fb2ae4b9fc0552a9"
    },
    {
      "repo": {
        "remote": "https://github.com/ufmg-smite/lean-smt",
        "branch": "main",
        "commit": "e994ff05c81214b3397f8b59aaeca4c302bd41dc",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Test/Int/Binders.lean",
        "start_line": 7,
        "start_column": 2,
        "end_line": 7,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : Int\n\u22a2 curryAdd a b = curryAdd b a",
        "url": "https://github.com/ufmg-smite/lean-smt/blob/e994ff05c81214b3397f8b59aaeca4c302bd41dc/Test/Int/Binders.lean#L7"
      },
      "metadata": {
        "blame_email_hash": "2d71a621927f",
        "blame_date": "2022-07-14T12:41:05-04:00",
        "inclusion_date": "2025-05-17T23:11:31.262140+00:00"
      },
      "id": "c3816f311a06b056280607cf44d7e694128a49d46908a9142cf27a506696e93b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 579,
        "start_column": 64,
        "end_line": 579,
        "end_column": 69
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 \u2211 k \u2208 Finset.range n, k ^ 3 = (\u2211 k \u2208 Finset.range n, k) ^ 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L579"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "4298634fb55dbbeb62a1ae12d78bb83a6a47af64ed9a8c57caa37e9642b09ebb"
    },
    {
      "repo": {
        "remote": "https://github.com/cmu-l3/llmlean",
        "branch": "kimina-pr",
        "commit": "126a6b2af37727c4d81bb49f6af6b354a380145e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LLMleanTest/Examples2.lean",
        "start_line": 39,
        "start_column": 2,
        "end_line": 39,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\nf : \u03b1 \u2192 \u03b2\ns t : Set \u03b1\nu v : Set \u03b2\nh : s \u2286 t\n\u22a2 f '' s \u2286 f '' t",
        "url": "https://github.com/cmu-l3/llmlean/blob/126a6b2af37727c4d81bb49f6af6b354a380145e/LLMleanTest/Examples2.lean#L39"
      },
      "metadata": {
        "blame_email_hash": "3ab0971ac342",
        "blame_date": "2024-07-23T17:17:09-04:00",
        "inclusion_date": "2025-06-11T03:39:01.065377+00:00"
      },
      "id": "d352646fe8ef0bd093ea706d174a907123591cc7b7a375ce85b48dfe15c19dd3"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_04.lean",
        "start_line": 182,
        "start_column": 2,
        "end_line": 182,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k : \u2115\n\u22a2 Fintype.card \u2191(ch04.U k) = Fintype.card \u2191(ch04.T k)",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_04.lean#L182"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2024-10-20T20:48:44+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "123976e0f2c77433cd41401f541d25e6055c5321b241983d6708cf0bfe37a39b"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/10FunctionsAndOperators.lean",
        "start_line": 301,
        "start_column": 19,
        "end_line": 301,
        "end_column": 24
      },
      "debug_info": {
        "goal": "m : Type u_4\nn : Type u_5\ninst\u271d\u00b3 : Fintype m\ninst\u271d\u00b2 : Fintype n\ninst\u271d\u00b9 : DecidableEq m\ninst\u271d : DecidableEq n\nA : Matrix m n \u211d\n\u22a2 sorry A \u2264 \u221a(\u2191(Fintype.card n) * \u2191A.rank) * sorry A",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/10FunctionsAndOperators.lean#L301"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2025-08-06T00:45:33+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "2c8f59a926b27d3e499151cd8de02735e74ebf09d1b5d8bb70fb4dfb937213da"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 3 - 1, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "0e47e1dc204fb0cd9d9105a3bd0d11899f287fb03839c8ba1cda4499b53d0920"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "D-provlogic",
        "commit": "502486d0cdcfe147471cfb5fb9a7145b41e37f87",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/D/Completeness.lean",
        "start_line": 58,
        "start_column": 108,
        "end_line": 58,
        "end_column": 113
      },
      "debug_info": {
        "goal": "T : ArithmeticTheory\ninst\u271d\u00b2 : Theory.\u0394\u2081 T\ninst\u271d\u00b9 : \ud835\udddc\ud835\udeba\u2081 \u2aaf T\ninst\u271d : \u2115 \u22a7\u2098* T\nU : ArithmeticTheory\neU : T + \u2191(LO.FirstOrder.ArithmeticTheory.LocalReflection T inst\u271d\u00b2 (Arithmetic.Hierarchy \ud835\udeba 1)) = U\nA : Modal.Formula \u2115\nh : \u2200 (f : T.StandardRealization), U \u22a2!. \u2191f A\nf : T.StandardRealization\nV : ArithmeticTheory := T + \u2191(\u22c3 f, {x | x = \u2191f (\u223c\u25a1\u22a5) \u2228 x = \u2191f (\u25a1\u25a1Formula.atom 0 \u279d \u25a1Formula.atom 0)})\n\u03c3 : Sentence \u2112\u2092\u1d63\nh\u03c3 : \u03c3 \u2208 Arithmetic.Hierarchy \ud835\udeba 1\n\u22a2 \u2203 \u03c0, Arithmetic.Hierarchy \ud835\udeba 1 \u03c0 \u2227 T \u22a2!. Theory.provabilityPred T \u03c0 \u2b64 \u03c3 \u22ce Theory.provabilityPred T \u22a5",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/502486d0cdcfe147471cfb5fb9a7145b41e37f87/Foundation/ProvabilityLogic/D/Completeness.lean#L58"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-09-11T00:07:47+09:00",
        "inclusion_date": "2025-09-12T03:28:19.860470+00:00"
      },
      "id": "6a86fa20664437e816c6f79a927f86189084cb4f9b15814d498919d5179f46d8"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "ineq_6_3_30",
        "commit": "bcc07a3b1282c61371f9cc8748d1be4765325b7b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainTileCount.lean",
        "start_line": 560,
        "start_column": 29,
        "end_line": 560,
        "end_column": 34
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Set (\ud835\udd13 X)\n\u03d1 : \u0398 X\nN : \u2115\nL : Grid X\nhL : L \u2208 @Antichain.\ud835\udcdb' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N\np' : \ud835\udd13 X := \u22ef\nhp' : L \u2264 \ud835\udcd8 p'\n\u22a2 @Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL \u2264 \ud835\udcd8 p'",
        "url": "https://github.com/fpvandoorn/carleson/blob/bcc07a3b1282c61371f9cc8748d1be4765325b7b/Carleson/Antichain/AntichainTileCount.lean#L560"
      },
      "metadata": {
        "blame_email_hash": "b2f50b2f722a",
        "blame_date": "2025-07-04T17:45:30+02:00",
        "inclusion_date": "2025-07-08T03:23:00.070461+00:00"
      },
      "id": "1230771f3bcef907806064c8e4b5bd4022d63403089abffa2852f42ceb164994"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-hardly-ramified",
        "commit": "60be88a841fa232b563ea16600befe5efbfb3d07",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FLT/HaarMeasure/HaarChar/AdeleRing.lean",
        "start_line": 107,
        "start_column": 2,
        "end_line": 107,
        "end_column": 7
      },
      "debug_info": {
        "goal": "K : Type u_1\ninst\u271d\u2078 : Field K\ninst\u271d\u2077 : NumberField K\nB : Type u_4\ninst\u271d\u2076 : Ring B\ninst\u271d\u2075 : Algebra K B\ninst\u271d\u2074 : FiniteDimensional K B\ninst\u271d\u00b3 : MeasurableSpace (TensorProduct K B (AdeleRing (RingOfIntegers K) K))\ninst\u271d\u00b2 : BorelSpace (TensorProduct K B (AdeleRing (RingOfIntegers K) K))\ninst\u271d\u00b9 : IsSimpleRing B\ninst\u271d : Algebra.IsCentral K B\nu : (TensorProduct K B (AdeleRing (RingOfIntegers K) K))\u02e3\n\u22a2 addEquivAddHaarChar (ContinuousAddEquiv.mulLeft u) = addEquivAddHaarChar (ContinuousAddEquiv.mulRight u)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/60be88a841fa232b563ea16600befe5efbfb3d07/FLT/HaarMeasure/HaarChar/AdeleRing.lean#L107"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-06-07T23:01:07+01:00",
        "inclusion_date": "2025-09-18T04:05:26.332171+00:00"
      },
      "id": "72f30f42ac6bb53d1bab7398ea5eb9fcd9fd433cc757ab5ef5dafd8466d5bc18"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "9e8de5716b162ec8983a89711a186d13ff871c22",
        "lean_version": "v4.24.0-rc1"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 31,
        "start_column": 12,
        "end_line": 31,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case snd\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : @MyProd \u03b1 \u03b2\n\u22a2 @MyProd.snd \u03b1 \u03b2 p = @MyProd.snd \u03b1 \u03b2 q",
        "url": "https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/AesopTest/ExtScript.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-09-16T04:23:04.307662+00:00"
      },
      "id": "67a8beba147665d0dcd962e317c848a20488e5d96b72e215c7f4e27a488e122e"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "99a77d19845fb8083456331fd1256bf35a48f60c",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 128,
        "start_column": 6,
        "end_line": 128,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case refine_2\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : NNReal\nhX : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 X p \u03bc\nhY : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\n\u22a2 \u2200 i \u2208 s, MeasurableSet {\u03c9 | Y \u03c9 i}",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/99a77d19845fb8083456331fd1256bf35a48f60c/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L128"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-09-08T22:03:06.847248+00:00"
      },
      "id": "baefdd9645b986d7e77ba84bf1077e4e57685033844678ec3f81c4ad33288120"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "e99e6f7b4a57098ded666cd0ed64aae7078440a3",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 7313,
        "start_column": 23,
        "end_line": 7313,
        "end_column": 28
      },
      "debug_info": {
        "goal": "\u03bd : \u211d \u2192 \u211d\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\nc_close : \u211d\nc_close_pos : c_close > 0\nh_close :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 (\u03b5 : \u211d),\n        0 < \u03b5 \u2192 \u03b5 < 1 \u2192 2 < X * \u03b5 \u2192 \u2016SmoothedChebyshev \u03bd \u03b5 X - \u2191(ChebyshevPsi X)\u2016 \u2264 c_close * \u03b5 * X * Real.log X\nA C_bnd : \u211d\nC_bnd_pos : 0 < C_bnd\nA_in_Ioc : A \u2208 Ioc 0 (1 / 2)\nzeta_bnd : LogDerivZetaHasBound A C_bnd\nholo1 :\n  \u2200 (T : \u211d),\n    3 \u2264 T \u2192\n      HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (Icc (1 - A / Real.log T ^ 9) 2 \u00d7\u2102 Icc (-T) T \\ {1})\n\u03c3\u2082' : \u211d\n\u03c3\u2082 : \u211d := \u22ef\n\u03c3\u2082_pos : 0 < \u03c3\u2082\n\u03c3\u2082_lt_one : \u03c3\u2082 < 1\nholo2 : HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (uIcc \u03c3\u2082 2 \u00d7\u2102 uIcc (-3) 3 \\ {1})\nc\u2081 : \u211d\nc\u2081pos : c\u2081 > 0\nhc\u2081 : \u2200 (\u03b5 : \u211d), 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2081 \u03bd \u03b5 X T\u2016 \u2264 c\u2081 * X * Real.log X / (\u03b5 * T)\nc\u2082 : \u211d\nc\u2082pos : 0 < c\u2082\nhc\u2082 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2082 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2082 * X / (\u03b5 * T)\nc\u2083 : \u211d\nc\u2083pos : 0 < c\u2083\nhc\u2083 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2083 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2083 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2085 : \u211d\nc\u2085pos : 0 < c\u2085\nhc\u2085 : \u2200 (X : \u211d), 3 < X \u2192 \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2016I\u2085 \u03bd \u03b5 X \u03c3\u2082\u2016 \u2264 c\u2085 * X ^ \u03c3\u2082 / \u03b5\nc\u2087 : \u211d\nc\u2087pos : 0 < c\u2087\nhc\u2087 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2087 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2087 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2088 : \u211d\nc\u2088pos : 0 < c\u2088\nhc\u2088 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2088 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2088 * X / (\u03b5 * T)\nc\u2089 : \u211d\nc\u2089pos : c\u2089 > 0\nhc\u2089 : \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2089 \u03bd \u03b5 X T\u2016 \u2264 c\u2089 * X * Real.log X / (\u03b5 * T)\nc : \u211d := \u22ef\n\u22a2 0 < c",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/e99e6f7b4a57098ded666cd0ed64aae7078440a3/PrimeNumberTheoremAnd/MediumPNT.lean#L7313"
      },
      "metadata": {
        "blame_email_hash": "bee09f470e62",
        "blame_date": "2025-07-19T18:28:56+01:00",
        "inclusion_date": "2025-07-21T23:21:07.188403+00:00"
      },
      "id": "3a154bc58bb26d45238d1ca77a0a303e38b44b3c31ae93f0b446a88bbe09b06b"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "3d8e1994e2522b249c36b71db17765a779eaa787",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "LeanByExample/Tactic/Ext.lean",
        "start_line": 94,
        "start_column": 2,
        "end_line": 94,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\np q : Foo\nhx : Foo.x p = Foo.x q\nhy : Foo.y p = Foo.y q\n\u22a2 p = q",
        "url": "https://github.com/lean-ja/lean-by-example/blob/3d8e1994e2522b249c36b71db17765a779eaa787/LeanByExample/Tactic/Ext.lean#L94"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2025-01-08T20:05:37+09:00",
        "inclusion_date": "2025-09-15T04:41:33.921583+00:00"
      },
      "id": "f8d98b3f996658adb1652c3830f12cd329d023fb6ed034390b405391fd6526e4"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/MoreRuzsaDist.lean",
        "start_line": 1518,
        "start_column": 54,
        "end_line": 1518,
        "end_column": 59
      },
      "debug_info": {
        "goal": "G : Type u_5\nhG : MeasurableSpace G\ninst\u271d\u00b3 : MeasurableSingletonClass G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : Countable G\ninst\u271d : Fintype G\nm : \u2115\nhm : m \u2265 1\n\u03a9 : Type u_8\nh\u03a9 : MeasureSpace \u03a9\nX : Fin (m + 1) \u00d7 Fin (m + 1) \u2192 \u03a9 \u2192 G\nh_indep : iIndepFun X \u2119\n\u22a2 I[fun \u03c9 j => \u2211 i, X (i, j) \u03c9 : fun \u03c9 i => \u2211 j, X (i, j) \u03c9|\u2211 p, X p] \u2264\n    \u2211 j,\n          (D[fun i => X (i, j) ; fun x => h\u03a9] -\n            D[fun i => X (i, j) | fun i => \u2211 k \u2208 Finset.Ici j, X (i, k) ; fun x => h\u03a9]) +\n        D[fun i => X (i, \u2191m) ; fun x => h\u03a9] -\n      D[fun i => \u2211 j, X (i, j) ; fun x => h\u03a9]",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L1518"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-10-17T18:26:36+00:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "52a1721dbb8c0782862edb4930da8a40c05f7962f40ed2c64d0bf263ae0810ea"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-fieldsimp",
        "commit": "d85670c33ad742e383d4cc47d1211411d616863b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/Tactic/FieldSimp2.lean",
        "start_line": 444,
        "start_column": 34,
        "end_line": 444,
        "end_column": 39
      },
      "debug_info": {
        "goal": "\u00ab$v\u00bb : Level\n\u00ab$M\u00bb : Type v\n\u00ab$iM\u00bb : Semifield \u00ab$M\u00bb\n\u00ab$a\u2081\u00bb : \u2124\n\u00ab$x\u2081\u00bb : \u00ab$M\u00bb\n\u00ab$k\u2081\u00bb : \u2115\n\u00ab$a\u2082\u00bb : \u2124\n\u00ab$x\u2082\u00bb : \u00ab$M\u00bb\n\u00ab$k\u2082\u00bb : \u2115\nunknown_1 unknown_2 unknown_3 : List (\u2124 \u00d7 \u00ab$M\u00bb)\n\u00ab$pf\u00bb :\n  @Mathlib.Tactic.FieldSimp.NF.eval \u00ab$M\u00bb \u00ab$iM\u00bb.toDivisionSemiring.toGroupWithZero.toDivInvMonoid unknown_1 /\n      @Mathlib.Tactic.FieldSimp.NF.eval \u00ab$M\u00bb \u00ab$iM\u00bb.toDivisionSemiring.toGroupWithZero.toDivInvMonoid unknown_2 =\n    @Mathlib.Tactic.FieldSimp.NF.eval \u00ab$M\u00bb \u00ab$iM\u00bb.toDivisionSemiring.toGroupWithZero.toDivInvMonoid unknown_3\n\u00ab$h\u00bb : \u00ab$a\u2081\u00bb - \u00ab$a\u2082\u00bb = 0\n\u22a2 \u00ab$x\u2081\u00bb \u2260 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/d85670c33ad742e383d4cc47d1211411d616863b/Mathlib/Tactic/FieldSimp2.lean#L444"
      },
      "metadata": {
        "blame_email_hash": "e6b953ae4684",
        "blame_date": "2025-06-14T21:34:58+01:00",
        "inclusion_date": "2025-06-17T03:07:09.828027+00:00"
      },
      "id": "6456ea4dc2306254ac301e4c4b84f45841a2401fa8d822efab2e3532635ae779"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 220,
        "start_column": 2,
        "end_line": 220,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro\nR : Type u_1\ninst\u271d\u00b9 : CommRing R\nS : Type u_2\ninst\u271d : CommRing S\nf : R \u2192+* S\nx : R \u29f8 ker f\nx' : R\nhx : (@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f) ((Ideal.Quotient.mk (ker f)) x') = 0\nhx' : (Ideal.Quotient.mk (ker f)) x' = x\n\u22a2 (Ideal.Quotient.mk (ker f)) x' = 0",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L220"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "909949a90e8887b30c988ac48fd093de377b40f97653ec00db0ecb47ab4f7f0f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/CoreInteractionPhase.lean",
        "start_line": 93,
        "start_column": 30,
        "end_line": 93,
        "end_column": 35
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Fintype L\ninst\u271d\u2076 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2075 : Field \ud835\udd3dq\ninst\u271d\u2074 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u00b3 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b2 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u00b9 : NeZero \u03d1\ninst\u271d : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\nj : \u2115\ntranscript : List L\nt_star : \u21a5(restrictDegree (Fin \u2113) L 1)\nchallenges : Fin \u2113 \u2192 L\nprover_sums : Fin (\u2113 + 1) \u2192 L := sorry\n\u22a2 j < \u2113",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/CoreInteractionPhase.lean#L93"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "49c1c19a1e7bf48c888aa1f0af8b7d97197d6f156681e2e01d747e0d0e23a668"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "master",
        "commit": "a28c2a770d0c267b697ceb5bd2a6a58d3cb1ad19",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PhysLean/ClassicalMechanics/HarmonicOscillator/Basic.lean",
        "start_line": 156,
        "start_column": 89,
        "end_line": 156,
        "end_column": 94
      },
      "debug_info": {
        "goal": "S : ClassicalMechanics.HarmonicOscillator\nx : Time \u2192 Space 1\n\u22a2 ClassicalMechanics.HarmonicOscillator.EquationOfMotion x \u2194\n    \u2200 (t : Time),\n      ClassicalMechanics.HarmonicOscillator.force S (x t) =\n        ClassicalMechanics.HarmonicOscillator.m S \u2022 _root_.deriv (fun t' => _root_.deriv x t') t",
        "url": "https://github.com/HEPLean/PhysLean/blob/a28c2a770d0c267b697ceb5bd2a6a58d3cb1ad19/PhysLean/ClassicalMechanics/HarmonicOscillator/Basic.lean#L156"
      },
      "metadata": {
        "blame_email_hash": "f5fc9942cf21",
        "blame_date": "2025-07-19T19:45:41+02:00",
        "inclusion_date": "2025-07-22T23:42:00.157211+00:00"
      },
      "id": "fb204e27153b0cbc2a0c483490b9b8a513dd7920d2f3471ff9f3161cee569633"
    },
    {
      "repo": {
        "remote": "https://github.com/ufmg-smite/lean-smt",
        "branch": "main",
        "commit": "e994ff05c81214b3397f8b59aaeca4c302bd41dc",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Test/Int/Binders.lean",
        "start_line": 13,
        "start_column": 2,
        "end_line": 13,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : Int\n\u22a2 partCurryAdd a b = partCurryAdd b a",
        "url": "https://github.com/ufmg-smite/lean-smt/blob/e994ff05c81214b3397f8b59aaeca4c302bd41dc/Test/Int/Binders.lean#L13"
      },
      "metadata": {
        "blame_email_hash": "2d71a621927f",
        "blame_date": "2022-07-14T12:41:05-04:00",
        "inclusion_date": "2025-05-17T23:11:31.262140+00:00"
      },
      "id": "428f82440944a46de6f9d4428e03dc90a566488748b2621d6c9b9c1b4eb67a6f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 609,
        "start_column": 76,
        "end_line": 609,
        "end_column": 81
      },
      "debug_info": {
        "goal": "p : \u2115\nh\u2080 : Nat.Prime p\nh\u2081 : 7 \u2264 p\n\u22a2 \u2211 k \u2208 Finset.Icc 1 (p - 2), (\u2191k)\u207b\u00b9 * (\u2191k + 1)\u207b\u00b9 = 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L609"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "947217ef65ab2ed8b231eaac6470610dbc6451451888a871769b30f39bc6da46"
    },
    {
      "repo": {
        "remote": "https://github.com/cmu-l3/llmlean",
        "branch": "kimina-pr",
        "commit": "126a6b2af37727c4d81bb49f6af6b354a380145e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LLMleanTest/Examples2.lean",
        "start_line": 42,
        "start_column": 2,
        "end_line": 42,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\nf : \u03b1 \u2192 \u03b2\ns t : Set \u03b1\nu v : Set \u03b2\nh : u \u2286 v\n\u22a2 f \u207b\u00b9' u \u2286 f \u207b\u00b9' v",
        "url": "https://github.com/cmu-l3/llmlean/blob/126a6b2af37727c4d81bb49f6af6b354a380145e/LLMleanTest/Examples2.lean#L42"
      },
      "metadata": {
        "blame_email_hash": "3ab0971ac342",
        "blame_date": "2024-07-23T17:17:09-04:00",
        "inclusion_date": "2025-06-11T03:39:01.065377+00:00"
      },
      "id": "9391ced12c917c6bee647d8e66cfaf04aa83fd6d8d2326109c0f58fbd4378c61"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_04.lean",
        "start_line": 235,
        "start_column": 4,
        "end_line": 235,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case h.mp\nk : \u2115\nhk : Fact (Nat.Prime (4 * k + 1))\nt : \u2191(ch04.U k)\nht : \u27e8\u27e8(t.1.1.1 - t.1.1.2.1 + t.1.1.2.2, t.1.1.2.1, 2 * t.1.1.2.1 - t.1.1.2.2), \u22ef\u27e9, \u22ef\u27e9 = t\n\u22a2 t \u2208 {\u27e8\u27e8(\u2191k, 1), \u22ef\u27e9, \u22ef\u27e9}",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_04.lean#L235"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2024-10-20T20:48:44+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "56e3ed1316f0e5491ee1484e3cf9b99d0e57ac571fb7d552e6ba28f416e4c99e"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/10FunctionsAndOperators.lean",
        "start_line": 301,
        "start_column": 26,
        "end_line": 301,
        "end_column": 31
      },
      "debug_info": {
        "goal": "m : Type u_4\nn : Type u_5\ninst\u271d\u00b3 : Fintype m\ninst\u271d\u00b2 : Fintype n\ninst\u271d\u00b9 : DecidableEq m\ninst\u271d : DecidableEq n\nA : Matrix m n \u211d\n\u22a2 sorry A \u2264 \u221a(\u2191(Fintype.card m) * \u2191A.rank) * \u2016A\u2016",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/10FunctionsAndOperators.lean#L301"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2025-08-06T00:45:33+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "489a078996fb66790cbeae6671949581ab655c6f07f10d323d1ff21d5be720bf"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 4 - 1, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "2d3c34ee5b51b3c60b46be7841a5183ec00109f623349a618507daf3252ca1db"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "D-provlogic",
        "commit": "502486d0cdcfe147471cfb5fb9a7145b41e37f87",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/D/Completeness.lean",
        "start_line": 59,
        "start_column": 62,
        "end_line": 59,
        "end_column": 67
      },
      "debug_info": {
        "goal": "T : ArithmeticTheory\ninst\u271d\u00b2 : Theory.\u0394\u2081 T\ninst\u271d\u00b9 : \ud835\udddc\ud835\udeba\u2081 \u2aaf T\ninst\u271d : \u2115 \u22a7\u2098* T\nU : ArithmeticTheory\neU : T + \u2191(LO.FirstOrder.ArithmeticTheory.LocalReflection T inst\u271d\u00b2 (Arithmetic.Hierarchy \ud835\udeba 1)) = U\nA : Modal.Formula \u2115\nh : \u2200 (f : T.StandardRealization), U \u22a2!. \u2191f A\nf : T.StandardRealization\nV : ArithmeticTheory := T + \u2191(\u22c3 f, {x | x = \u2191f (\u223c\u25a1\u22a5) \u2228 x = \u2191f (\u25a1\u25a1Formula.atom 0 \u279d \u25a1Formula.atom 0)})\n\u03c3 : Sentence \u2112\u2092\u1d63\nh\u03c3 : \u03c3 \u2208 Arithmetic.Hierarchy \ud835\udeba 1\n\u03c0 : ArithmeticSentence\nh\u03c0\u2081 : Arithmetic.Hierarchy \ud835\udeba 1 \u03c0\nh\u03c0\u2082 : T \u22a2!. Theory.provabilityPred T \u03c0 \u2b64 \u03c3 \u22ce Theory.provabilityPred T \u22a5\n\u22a2 T \u22a2!.\n    \u223cTheory.provabilityPred T \u22a5 \u22cf (Theory.provabilityPred T (Theory.provabilityPred T \u03c0) \u279d Theory.provabilityPred T \u03c0) \u279d\n      Theory.provabilityPred T \u03c3 \u279d \u03c3",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/502486d0cdcfe147471cfb5fb9a7145b41e37f87/Foundation/ProvabilityLogic/D/Completeness.lean#L59"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-09-11T00:07:47+09:00",
        "inclusion_date": "2025-09-12T03:28:19.860470+00:00"
      },
      "id": "ffd2fd6801cde34159ace0db8f5bff4900a3f76454967660b19d0d43f1a35dd5"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "ineq_6_3_30",
        "commit": "bcc07a3b1282c61371f9cc8748d1be4765325b7b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainTileCount.lean",
        "start_line": 568,
        "start_column": 64,
        "end_line": 568,
        "end_column": 69
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Set (\ud835\udd13 X)\n\u03d1 : \u0398 X\nN : \u2115\nL : Grid X\nhL : L \u2208 @Antichain.\ud835\udcdb' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N\np' : \ud835\udd13 X := \u22ef\nhp' : L \u2264 \ud835\udcd8 p'\nhle : @Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL \u2264 \ud835\udcd8 p'\nhL' :\n  @Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL \u2209\n    @Antichain.\ud835\udcdb X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N\n\u22a2 \u2203 p, \ud835\udcd8 \u2191p \u2264 @Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL",
        "url": "https://github.com/fpvandoorn/carleson/blob/bcc07a3b1282c61371f9cc8748d1be4765325b7b/Carleson/Antichain/AntichainTileCount.lean#L568"
      },
      "metadata": {
        "blame_email_hash": "b2f50b2f722a",
        "blame_date": "2025-07-04T17:45:30+02:00",
        "inclusion_date": "2025-07-08T03:23:00.070461+00:00"
      },
      "id": "95a306b30471ff6546692c9c063e74e61c1bf3856299dd7fb0fe38a66b04b1b5"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-hardly-ramified",
        "commit": "60be88a841fa232b563ea16600befe5efbfb3d07",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FLT/HaarMeasure/HaarChar/AdeleRing.lean",
        "start_line": 111,
        "start_column": 81,
        "end_line": 111,
        "end_column": 86
      },
      "debug_info": {
        "goal": "K : Type u_1\nL : Type u_2\ninst\u271d\u00b9\u00b3 : Field K\ninst\u271d\u00b9\u00b2 : Field L\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : NumberField K\ninst\u271d\u2079 : NumberField L\nV : Type u_3\ninst\u271d\u2078 : AddCommGroup V\ninst\u271d\u2077 : Module L V\ninst\u271d\u2076 : Module K V\ninst\u271d\u2075 : IsScalarTower K L V\ninst\u271d\u2074 : FiniteDimensional L V\ninst\u271d\u00b3 : FiniteDimensional K V\nB : Type u_4\ninst\u271d\u00b2 : Ring B\ninst\u271d\u00b9 : Algebra K B\ninst\u271d : FiniteDimensional K B\np : IsDedekindDomain.HeightOneSpectrum (RingOfIntegers \u211a)\n\u22a2 LocallyCompactSpace (IsDedekindDomain.HeightOneSpectrum.adicCompletion \u211a p)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/60be88a841fa232b563ea16600befe5efbfb3d07/FLT/HaarMeasure/HaarChar/AdeleRing.lean#L111"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-06-07T23:01:07+01:00",
        "inclusion_date": "2025-09-18T04:05:26.332171+00:00"
      },
      "id": "25dd35351f33b2d48bdceb1e9c75bf2d9dea7ad6b4cdc80e3f2f0f8d275641a6"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "9e8de5716b162ec8983a89711a186d13ff871c22",
        "lean_version": "v4.24.0-rc1"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 48,
        "start_column": 12,
        "end_line": 48,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case fst\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : @MyProd \u03b1 (@MyProd \u03b2 \u03b3)\n\u22a2 @MyProd.fst \u03b1 (@MyProd \u03b2 \u03b3) p = @MyProd.fst \u03b1 (@MyProd \u03b2 \u03b3) q",
        "url": "https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/AesopTest/ExtScript.lean#L48"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-09-16T04:23:04.307662+00:00"
      },
      "id": "5fe6c038c5e24df7a1354a2da512a50c62720864fca6151b3f0e68cc06dd995f"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "99a77d19845fb8083456331fd1256bf35a48f60c",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 129,
        "start_column": 6,
        "end_line": 129,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case refine_2\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : NNReal\nhX : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 X p \u03bc\nhY : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\n\u22a2 \u2200 i \u2208 s, MeasurableSet {\u03c9 | X \u03c9 i}",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/99a77d19845fb8083456331fd1256bf35a48f60c/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L129"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-09-08T22:03:06.847248+00:00"
      },
      "id": "26a640081a6272c20d37791f01bfa6257c3b833a975265922d84b3a6c84d94e5"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "f4441d7327caa75ae7879ecfda33fc60ab0cf17e",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 7236,
        "start_column": 4,
        "end_line": 7236,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case h\n\u03bd : \u211d \u2192 \u211d\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\nc_close : \u211d\nc_close_pos : c_close > 0\nh_close :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 (\u03b5 : \u211d),\n        0 < \u03b5 \u2192 \u03b5 < 1 \u2192 2 < X * \u03b5 \u2192 \u2016SmoothedChebyshev \u03bd \u03b5 X - \u2191(ChebyshevPsi X)\u2016 \u2264 c_close * \u03b5 * X * Real.log X\n\u03b5_main C_main : \u211d\n\u03b5_main_pos : 0 < \u03b5_main\nC_main_pos : 0 < C_main\nh_main : \u2200 \u03b5 \u2208 Ioo 0 \u03b5_main, \u2016MellinTransform (fun x => \u2191(Smooth1 \u03bd \u03b5 x)) 1 - 1\u2016 \u2264 C_main * \u03b5\nA C_bnd : \u211d\nC_bnd_pos : 0 < C_bnd\nA_in_Ioc : A \u2208 Ioc 0 (1 / 2)\nzeta_bnd : LogDerivZetaHasBound A C_bnd\nholo1 :\n  \u2200 (T : \u211d),\n    3 \u2264 T \u2192\n      HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (Icc (1 - A / Real.log T ^ 9) 2 \u00d7\u2102 Icc (-T) T \\ {1})\n\u03c3\u2082' : \u211d\n\u03c3\u2082 : \u211d := max \u03c3\u2082' (1 / 2)\n\u03c3\u2082_pos : 0 < \u03c3\u2082\n\u03c3\u2082_lt_one : \u03c3\u2082 < 1\nholo2 : HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (uIcc \u03c3\u2082 2 \u00d7\u2102 uIcc (-3) 3 \\ {1})\nc\u2081 : \u211d\nc\u2081pos : c\u2081 > 0\nhc\u2081 : \u2200 (\u03b5 : \u211d), 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2081 \u03bd \u03b5 X T\u2016 \u2264 c\u2081 * X * Real.log X / (\u03b5 * T)\nc\u2082 : \u211d\nc\u2082pos : 0 < c\u2082\nhc\u2082 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2082 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2082 * X / (\u03b5 * T)\nc\u2083 : \u211d\nc\u2083pos : 0 < c\u2083\nhc\u2083 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2083 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2083 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2085 : \u211d\nc\u2085pos : 0 < c\u2085\nhc\u2085 : \u2200 (X : \u211d), 3 < X \u2192 \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2016I\u2085 \u03bd \u03b5 X \u03c3\u2082\u2016 \u2264 c\u2085 * X ^ \u03c3\u2082 / \u03b5\nc\u2087 : \u211d\nc\u2087pos : 0 < c\u2087\nhc\u2087 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2087 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2087 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2088 : \u211d\nc\u2088pos : 0 < c\u2088\nhc\u2088 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2088 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2088 * X / (\u03b5 * T)\nc\u2089 : \u211d\nc\u2089pos : c\u2089 > 0\nhc\u2089 : \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2089 \u03bd \u03b5 X T\u2016 \u2264 c\u2089 * X * Real.log X / (\u03b5 * T)\nc\u2084 : \u211d\nc\u2084pos : 0 \u2264 c\u2084\nTlb\u2084 : \u211d\nTlb\u2084bnd : 3 < Tlb\u2084\nhc\u2084 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              Tlb\u2084 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2084 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 \u2264 c\u2084 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2086 : \u211d\nc\u2086pos : 0 \u2264 c\u2086\nTlb\u2086 : \u211d\nTlb\u2086bnd : 3 < Tlb\u2086\nhc\u2086 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              Tlb\u2086 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2086 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 \u2264 c\u2086 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nC' : \u211d := c_close + C_main\nC'' : \u211d := c\u2081 + c\u2082 + c\u2088 + c\u2089\nC''' : \u211d := c\u2083 + c\u2084 + c\u2086 + c\u2087\nc : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\n\u03b5x : \u211d \u2192 \u211d := fun x => Real.exp (-c * Real.log x ^ (1 / 10))\nTx : \u211d \u2192 \u211d := fun x => Real.exp (2 * c * Real.log x ^ (1 / 10))\neventually_\u03b5x_lt_one : \u2200\u1da0 (x : \u211d) in atTop, \u03b5x x < 1\nx : \u211d\nhx : x \u2265 sorry\n\u22a2 2 < x * Real.exp (-c * Real.log x ^ (1 / 10))",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/f4441d7327caa75ae7879ecfda33fc60ab0cf17e/PrimeNumberTheoremAnd/MediumPNT.lean#L7236"
      },
      "metadata": {
        "blame_email_hash": "bee09f470e62",
        "blame_date": "2025-07-19T18:28:56+01:00",
        "inclusion_date": "2025-07-22T23:05:23.619594+00:00"
      },
      "id": "9f5a97e732caf619fc714423bddfd563e42f3e41afa1bbaeba01856c8fd3b464"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "LeanByExample/Tactic/Plausible.lean",
        "start_line": 67,
        "start_column": 2,
        "end_line": 67,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 (a b : MyNat), a = b",
        "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Tactic/Plausible.lean#L67"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2024-11-25T09:56:34+09:00",
        "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
      },
      "id": "2923421152e5be64de021405d7350f597dee8d1e824b49847a8ac1aec39e67b6"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "edb386dbe041ce9e19ad76d90c5e7fa14608a181",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/MoreRuzsaDist.lean",
        "start_line": 862,
        "start_column": 69,
        "end_line": 862,
        "end_column": 74
      },
      "debug_info": {
        "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\nhm : m \u2265 2\n\u03a9 : Fin m \u2192 Type u_9\nh\u03a9 : (i : Fin m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin m) \u2192 \u03a9 i \u2192 G\n\u22a2 \u2211 j, d[X j # X j] \u2264 2 * \u2191m * @multiDist G hG inst\u271d\u00b2 m \u03a9 h\u03a9 X",
        "url": "https://github.com/teorth/pfr/blob/edb386dbe041ce9e19ad76d90c5e7fa14608a181/PFR/MoreRuzsaDist.lean#L862"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-10-17T18:26:36+00:00",
        "inclusion_date": "2025-05-03T00:49:01.282024+00:00"
      },
      "id": "c83fb055cd784ff0218908ad23362ac82e97ab295d73eaa278d25927a75b71c9"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-fieldsimp",
        "commit": "d85670c33ad742e383d4cc47d1211411d616863b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/Tactic/FieldSimp2.lean",
        "start_line": 817,
        "start_column": 2,
        "end_line": 817,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x\u271d y\u271d z : \u211a\nK : Type u_1\ninst\u271d : Semifield K\nx y : K\n\u22a2 2 * x * (y + 1) = x * ((y + 1) ^ 2 + x ^ 2)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/d85670c33ad742e383d4cc47d1211411d616863b/Mathlib/Tactic/FieldSimp2.lean#L817"
      },
      "metadata": {
        "blame_email_hash": "e6b953ae4684",
        "blame_date": "2025-06-14T21:34:58+01:00",
        "inclusion_date": "2025-06-17T03:07:09.828027+00:00"
      },
      "id": "80e5f4d0ac96ea0c09f7ec2b1990414654092fd1a870623c462f6724ad92ca0d"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 256,
        "start_column": 6,
        "end_line": 256,
        "end_column": 11
      },
      "debug_info": {
        "goal": "R : Type ?u.25702\ninst\u271d\u00b9 : CommRing R\nS : Type ?u.25708\ninst\u271d : CommRing S\nf : R \u2192+* S\nhf : Surjective \u21d1f\n\u22a2 LeftInverse (fun x => (Ideal.Quotient.mk (ker f)) (surjInv hf x)) \u21d1(@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L256"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "74d6db50892f6b62f2b5014a4194b68b776205a9ab2fbb003b1b120ad445f62e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/CoreInteractionPhase.lean",
        "start_line": 111,
        "start_column": 32,
        "end_line": 111,
        "end_column": 37
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Fintype L\ninst\u271d\u2076 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2075 : Field \ud835\udd3dq\ninst\u271d\u2074 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u00b3 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b2 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u00b9 : NeZero \u03d1\ninst\u271d : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\nj : \u2115\nhj_mod_theta : \u03d1 \u2223 j\n\u22a2 j + \u03d1 \u2264 \u2113",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/CoreInteractionPhase.lean#L111"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "f39fbc5ccaf805d1415c7c9cb26324b537bff0931f4260350c2709ea08d6f81a"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "master",
        "commit": "8718a75c1dbbbdc338836c1b5f7d47c12571b3ea",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "PhysLean/ClassicalMechanics/HarmonicOscillator/Basic.lean",
        "start_line": 152,
        "start_column": 89,
        "end_line": 152,
        "end_column": 94
      },
      "debug_info": {
        "goal": "S : ClassicalMechanics.HarmonicOscillator\nx : Time \u2192 Space 1\n\u22a2 ClassicalMechanics.HarmonicOscillator.EquationOfMotion x \u2194\n    \u2200 (t : Time),\n      ClassicalMechanics.HarmonicOscillator.force S (x t) =\n        ClassicalMechanics.HarmonicOscillator.m S \u2022 Time.deriv (fun t' => Time.deriv x t') t",
        "url": "https://github.com/HEPLean/PhysLean/blob/8718a75c1dbbbdc338836c1b5f7d47c12571b3ea/PhysLean/ClassicalMechanics/HarmonicOscillator/Basic.lean#L152"
      },
      "metadata": {
        "blame_email_hash": "f5fc9942cf21",
        "blame_date": "2025-07-19T19:45:41+02:00",
        "inclusion_date": "2025-09-14T03:35:49.340182+00:00"
      },
      "id": "82d8c9062cb155824907400c1f93d497d1fd92c177190e24ec985ab251d83d1b"
    },
    {
      "repo": {
        "remote": "https://github.com/ufmg-smite/lean-smt",
        "branch": "main",
        "commit": "e994ff05c81214b3397f8b59aaeca4c302bd41dc",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Test/Int/Binders.lean",
        "start_line": 20,
        "start_column": 2,
        "end_line": 20,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : Int\npartCurryAdd' : Int \u2192 Int \u2192 Int := fun a => HAdd.hAdd a\n\u22a2 partCurryAdd' a b = partCurryAdd' b a",
        "url": "https://github.com/ufmg-smite/lean-smt/blob/e994ff05c81214b3397f8b59aaeca4c302bd41dc/Test/Int/Binders.lean#L20"
      },
      "metadata": {
        "blame_email_hash": "2d71a621927f",
        "blame_date": "2022-07-14T12:41:05-04:00",
        "inclusion_date": "2025-05-17T23:11:31.262140+00:00"
      },
      "id": "2f0e20ce24530f5768780759413afb347c84455200e92d0223d6b03297b7ad0a"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 655,
        "start_column": 126,
        "end_line": 655,
        "end_column": 131
      },
      "debug_info": {
        "goal": "\u22a2 (\u2211 k \u2208 Finset.Icc 1 20, logb (5 ^ k) (3 ^ k ^ 2)) * \u2211 k \u2208 Finset.Icc 1 100, logb (9 ^ k) (25 ^ k) = 21000",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L655"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "1130813a89ad547247fd09d618ce249e490ac88c9fdb4f9053d2bd90ec912d4e"
    },
    {
      "repo": {
        "remote": "https://github.com/cmu-l3/llmlean",
        "branch": "kimina-pr",
        "commit": "126a6b2af37727c4d81bb49f6af6b354a380145e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LLMleanTest/Examples2.lean",
        "start_line": 45,
        "start_column": 2,
        "end_line": 45,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\nf : \u03b1 \u2192 \u03b2\ns t : Set \u03b1\nu v : Set \u03b2\n\u22a2 f \u207b\u00b9' (u \u222a v) = f \u207b\u00b9' u \u222a f \u207b\u00b9' v",
        "url": "https://github.com/cmu-l3/llmlean/blob/126a6b2af37727c4d81bb49f6af6b354a380145e/LLMleanTest/Examples2.lean#L45"
      },
      "metadata": {
        "blame_email_hash": "3ab0971ac342",
        "blame_date": "2024-07-23T17:17:09-04:00",
        "inclusion_date": "2025-06-11T03:39:01.065377+00:00"
      },
      "id": "2b65c5f5b6c464df909bcc0ce6eddde1dd343afb6657def452a93bb438e44777"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_04.lean",
        "start_line": 244,
        "start_column": 2,
        "end_line": 244,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k : \u2115\nhk : Fact (Nat.Prime (4 * k + 1))\n\u22a2 Odd (Fintype.card \u2191(ch04.T k))",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_04.lean#L244"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2024-10-20T20:48:44+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "00fceb55436904207588f1dff217094742e48cda4252e1e920128dfdd450365a"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/10FunctionsAndOperators.lean",
        "start_line": 301,
        "start_column": 33,
        "end_line": 301,
        "end_column": 38
      },
      "debug_info": {
        "goal": "m : Type u_4\nn : Type u_5\ninst\u271d\u00b3 : Fintype m\ninst\u271d\u00b2 : Fintype n\ninst\u271d\u00b9 : DecidableEq m\ninst\u271d : DecidableEq n\nA : Matrix m n \u211d\n\u22a2 sorry A \u2264 \u2191A.rank * \u2016A\u2016",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/10FunctionsAndOperators.lean#L301"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2025-08-06T00:45:33+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "98aded93f90a6486281dfa3fb0539db45e18595c8864aa0071b8a02e0a372058"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 5 - 1, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "4e114f0a36a4c9f3e461bebd312cba323468378cb66eca708aa012370dc94ff2"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "D-provlogic",
        "commit": "502486d0cdcfe147471cfb5fb9a7145b41e37f87",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/D/Completeness.lean",
        "start_line": 60,
        "start_column": 62,
        "end_line": 60,
        "end_column": 67
      },
      "debug_info": {
        "goal": "T : ArithmeticTheory\ninst\u271d\u00b2 : Theory.\u0394\u2081 T\ninst\u271d\u00b9 : \ud835\udddc\ud835\udeba\u2081 \u2aaf T\ninst\u271d : \u2115 \u22a7\u2098* T\nU : ArithmeticTheory\neU : T + \u2191(LO.FirstOrder.ArithmeticTheory.LocalReflection T inst\u271d\u00b2 (Arithmetic.Hierarchy \ud835\udeba 1)) = U\nA : Modal.Formula \u2115\nh : \u2200 (f : T.StandardRealization), U \u22a2!. \u2191f A\nf : T.StandardRealization\nV : ArithmeticTheory := T + \u2191(\u22c3 f, {x | x = \u2191f (\u223c\u25a1\u22a5) \u2228 x = \u2191f (\u25a1\u25a1Formula.atom 0 \u279d \u25a1Formula.atom 0)})\n\u03c3 : Sentence \u2112\u2092\u1d63\nh\u03c3 : \u03c3 \u2208 Arithmetic.Hierarchy \ud835\udeba 1\n\u03c0 : ArithmeticSentence\nh\u03c0\u2081 : Arithmetic.Hierarchy \ud835\udeba 1 \u03c0\nh\u03c0\u2082 :\n  T \u22a2!.\n    \u223cTheory.provabilityPred T \u22a5 \u22cf (Theory.provabilityPred T (Theory.provabilityPred T \u03c0) \u279d Theory.provabilityPred T \u03c0) \u279d\n      Theory.provabilityPred T \u03c3 \u279d \u03c3\n\u22a2 V \u22a2!.\n    \u223cTheory.provabilityPred T \u22a5 \u22cf (Theory.provabilityPred T (Theory.provabilityPred T \u03c0) \u279d Theory.provabilityPred T \u03c0) \u279d\n      Theory.provabilityPred T \u03c3 \u279d \u03c3",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/502486d0cdcfe147471cfb5fb9a7145b41e37f87/Foundation/ProvabilityLogic/D/Completeness.lean#L60"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-09-11T00:07:47+09:00",
        "inclusion_date": "2025-09-12T03:28:19.860470+00:00"
      },
      "id": "16da193f985dd140dfe55d8c2a75c9d57130a20b9a7ed70fa92acc05ba0b9e14"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "6e8a15e60416137391f8f3a5431c1d297812589d",
        "lean_version": "v4.22.0-rc2"
      },
      "location": {
        "path": "Carleson/ToMathlib/RealInterpolation/Main.lean",
        "start_line": 383,
        "start_column": 48,
        "end_line": 383,
        "end_column": 53
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b1' : Type u_2\nE\u2081 : Type u_4\nE\u2082 : Type u_5\nm : MeasurableSpace \u03b1\nm' : MeasurableSpace \u03b1'\np q p\u2080 q\u2080 p\u2081 q\u2081 : ENNReal\nC\u2080 C\u2081 : NNReal\n\u03bc : Measure \u03b1\n\u03bd : Measure \u03b1'\nf : \u03b1 \u2192 E\u2081\nT : (\u03b1 \u2192 E\u2081) \u2192 \u03b1' \u2192 E\u2082\ninst\u271d\u00b3 : TopologicalSpace E\u2081\ninst\u271d\u00b2 : ENormedAddCommMonoid E\u2081\ninst\u271d\u00b9 : TopologicalSpace E\u2082\ninst\u271d : ENormedAddCommMonoid E\u2082\nhp\u2080 : 0 < p\u2080\nhq\u2080 : 0 < q\u2080\nhq\u2081 : 0 < q\u2081\nhp\u2081p : p < p\u2081\nhp\u2080p : p\u2080 < p\ntc : ToneCouple\nhq\u2080' : q\u2080 = \u22a4 \u2192 \u2200 s > 0, distribution (T (truncCompl f (tc.ton s))) s \u03bd = 0\nhq\u2081' : q\u2081 = \u22a4 \u2192 \u2200 s > 0, distribution (T (trunc f (tc.ton s))) s \u03bd = 0\nhf : MemLp f p \u03bc\nhT\u2081 : HasWeakType T p\u2081 q\u2081 \u03bc \u03bd \u2191C\u2081\nhT\u2080 : HasWeakType T p\u2080 q\u2080 \u03bc \u03bd \u2191C\u2080\nthis\u271d : \u2200 (q' q : \u211d), -q' + (q - 1) = q - q' - 1\np_pos : 0 < p\nis_q\u2081top : q\u2081 < \u22a4\nis_q\u2080top : q\u2080 < \u22a4\ns : \u211d\ns_pos : 0 < s\nthis : 0 < ENNReal.ofReal s\n\u22a2 tc.ton (ENNReal.ofReal s) \u2260 \u22a4",
        "url": "https://github.com/fpvandoorn/carleson/blob/6e8a15e60416137391f8f3a5431c1d297812589d/Carleson/ToMathlib/RealInterpolation/Main.lean#L383"
      },
      "metadata": {
        "blame_email_hash": "06ea44610ffb",
        "blame_date": "2025-07-04T09:38:11+02:00",
        "inclusion_date": "2025-07-05T04:18:31.626232+00:00"
      },
      "id": "e5865d8c85d4f80d52ab9b1d0f3f60556baeb1f45312ca2251ae28c14aec68bd"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-hardly-ramified",
        "commit": "60be88a841fa232b563ea16600befe5efbfb3d07",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FLT/HaarMeasure/HaarChar/AdeleRing.lean",
        "start_line": 121,
        "start_column": 89,
        "end_line": 121,
        "end_column": 94
      },
      "debug_info": {
        "goal": "inst\u271d\u2075 : MeasurableSpace (AdeleRing (RingOfIntegers \u211a) \u211a)\ninst\u271d\u2074 : BorelSpace (AdeleRing (RingOfIntegers \u211a) \u211a)\ninst\u271d\u00b3 : MeasurableSpace (InfiniteAdeleRing \u211a)\ninst\u271d\u00b2 : BorelSpace (InfiniteAdeleRing \u211a)\ninst\u271d\u00b9 :\n  (p : IsDedekindDomain.HeightOneSpectrum (RingOfIntegers \u211a)) \u2192\n    MeasurableSpace (IsDedekindDomain.HeightOneSpectrum.adicCompletion \u211a p)\ninst\u271d :\n  \u2200 (p : IsDedekindDomain.HeightOneSpectrum (RingOfIntegers \u211a)),\n    BorelSpace (IsDedekindDomain.HeightOneSpectrum.adicCompletion \u211a p)\nx : (AdeleRing (RingOfIntegers \u211a) \u211a)\u02e3\n\u22a2 ringHaarChar x =\n    ringHaarChar (MulEquiv.prodUnits x).1 *\n      \u220f\u1da0 (p : IsDedekindDomain.HeightOneSpectrum (RingOfIntegers \u211a)),\n        ringHaarChar ((MulEquiv.restrictedProductUnits (MulEquiv.prodUnits x).2) p)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/60be88a841fa232b563ea16600befe5efbfb3d07/FLT/HaarMeasure/HaarChar/AdeleRing.lean#L121"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-06-07T23:01:07+01:00",
        "inclusion_date": "2025-09-18T04:05:26.332171+00:00"
      },
      "id": "cafb0d21a8f3f902b8883bf51c0764f17d7c6d6182f692a0fd7d399028ce6134"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "9e8de5716b162ec8983a89711a186d13ff871c22",
        "lean_version": "v4.24.0-rc1"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 48,
        "start_column": 12,
        "end_line": 48,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case snd.fst\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : @MyProd \u03b1 (@MyProd \u03b2 \u03b3)\n\u22a2 @MyProd.fst \u03b2 \u03b3 (@MyProd.snd \u03b1 (@MyProd \u03b2 \u03b3) p) = @MyProd.fst \u03b2 \u03b3 (@MyProd.snd \u03b1 (@MyProd \u03b2 \u03b3) q)",
        "url": "https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/AesopTest/ExtScript.lean#L48"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-09-16T04:23:04.307662+00:00"
      },
      "id": "95b18e805a34e06efd70197ad0c7452a245dcb6bdcfc837498efa6b4e858a3b7"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "99a77d19845fb8083456331fd1256bf35a48f60c",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 130,
        "start_column": 6,
        "end_line": 130,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case refine_2.hs\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : NNReal\nhX : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 X p \u03bc\nhY : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\n\u22a2 MeasurableSet (\u22c2 i \u2208 s, {\u03c9 | X \u03c9 i})",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/99a77d19845fb8083456331fd1256bf35a48f60c/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L130"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-09-08T22:03:06.847248+00:00"
      },
      "id": "dcd4ff03fa74f56284dcd5e70dddc174fdd53580cec12553e43e1bdbb3fb6a7e"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "f4441d7327caa75ae7879ecfda33fc60ab0cf17e",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 7237,
        "start_column": 63,
        "end_line": 7237,
        "end_column": 68
      },
      "debug_info": {
        "goal": "\u03bd : \u211d \u2192 \u211d\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\nc_close : \u211d\nc_close_pos : c_close > 0\nh_close :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 (\u03b5 : \u211d),\n        0 < \u03b5 \u2192 \u03b5 < 1 \u2192 2 < X * \u03b5 \u2192 \u2016SmoothedChebyshev \u03bd \u03b5 X - \u2191(ChebyshevPsi X)\u2016 \u2264 c_close * \u03b5 * X * Real.log X\n\u03b5_main C_main : \u211d\n\u03b5_main_pos : 0 < \u03b5_main\nC_main_pos : 0 < C_main\nh_main : \u2200 \u03b5 \u2208 Ioo 0 \u03b5_main, \u2016MellinTransform (fun x => \u2191(Smooth1 \u03bd \u03b5 x)) 1 - 1\u2016 \u2264 C_main * \u03b5\nA C_bnd : \u211d\nC_bnd_pos : 0 < C_bnd\nA_in_Ioc : A \u2208 Ioc 0 (1 / 2)\nzeta_bnd : LogDerivZetaHasBound A C_bnd\nholo1 :\n  \u2200 (T : \u211d),\n    3 \u2264 T \u2192\n      HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (Icc (1 - A / Real.log T ^ 9) 2 \u00d7\u2102 Icc (-T) T \\ {1})\n\u03c3\u2082' : \u211d\n\u03c3\u2082 : \u211d := max \u03c3\u2082' (1 / 2)\n\u03c3\u2082_pos : 0 < \u03c3\u2082\n\u03c3\u2082_lt_one : \u03c3\u2082 < 1\nholo2 : HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (uIcc \u03c3\u2082 2 \u00d7\u2102 uIcc (-3) 3 \\ {1})\nc\u2081 : \u211d\nc\u2081pos : c\u2081 > 0\nhc\u2081 : \u2200 (\u03b5 : \u211d), 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2081 \u03bd \u03b5 X T\u2016 \u2264 c\u2081 * X * Real.log X / (\u03b5 * T)\nc\u2082 : \u211d\nc\u2082pos : 0 < c\u2082\nhc\u2082 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2082 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2082 * X / (\u03b5 * T)\nc\u2083 : \u211d\nc\u2083pos : 0 < c\u2083\nhc\u2083 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2083 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2083 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2085 : \u211d\nc\u2085pos : 0 < c\u2085\nhc\u2085 : \u2200 (X : \u211d), 3 < X \u2192 \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2016I\u2085 \u03bd \u03b5 X \u03c3\u2082\u2016 \u2264 c\u2085 * X ^ \u03c3\u2082 / \u03b5\nc\u2087 : \u211d\nc\u2087pos : 0 < c\u2087\nhc\u2087 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2087 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2087 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2088 : \u211d\nc\u2088pos : 0 < c\u2088\nhc\u2088 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2088 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2088 * X / (\u03b5 * T)\nc\u2089 : \u211d\nc\u2089pos : c\u2089 > 0\nhc\u2089 : \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2089 \u03bd \u03b5 X T\u2016 \u2264 c\u2089 * X * Real.log X / (\u03b5 * T)\nc\u2084 : \u211d\nc\u2084pos : 0 \u2264 c\u2084\nTlb\u2084 : \u211d\nTlb\u2084bnd : 3 < Tlb\u2084\nhc\u2084 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              Tlb\u2084 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2084 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 \u2264 c\u2084 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2086 : \u211d\nc\u2086pos : 0 \u2264 c\u2086\nTlb\u2086 : \u211d\nTlb\u2086bnd : 3 < Tlb\u2086\nhc\u2086 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              Tlb\u2086 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2086 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 \u2264 c\u2086 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nC' : \u211d := c_close + C_main\nC'' : \u211d := c\u2081 + c\u2082 + c\u2088 + c\u2089\nC''' : \u211d := c\u2083 + c\u2084 + c\u2086 + c\u2087\nc : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\n\u03b5x : \u211d \u2192 \u211d := fun x => Real.exp (-c * Real.log x ^ (1 / 10))\nTx : \u211d \u2192 \u211d := fun x => Real.exp (2 * c * Real.log x ^ (1 / 10))\neventually_\u03b5x_lt_one : \u2200\u1da0 (x : \u211d) in atTop, \u03b5x x < 1\neventually_2_lt : \u2200\u1da0 (x : \u211d) in atTop, 2 < x * \u03b5x x\n\u22a2 \u2200\u1da0 (x : \u211d) in atTop, 3 < Tx x",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/f4441d7327caa75ae7879ecfda33fc60ab0cf17e/PrimeNumberTheoremAnd/MediumPNT.lean#L7237"
      },
      "metadata": {
        "blame_email_hash": "bee09f470e62",
        "blame_date": "2025-07-19T18:28:56+01:00",
        "inclusion_date": "2025-07-22T23:05:23.619594+00:00"
      },
      "id": "7df705240ca25df7192310ff357a563f44175796f3161389030a4e9c0d805765"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "18461293dc1480999e1885c3b3d5e584aeabcd1a",
        "lean_version": "v4.22.0-rc2"
      },
      "location": {
        "path": "LeanByExample/Tactic/Induction.lean",
        "start_line": 83,
        "start_column": 4,
        "end_line": 83,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case succ\nn m : \u2115\nih : m + n = 0 \u2192 m = 0 \u2227 n = 0\nh : m + 1 + n = 0\n\u22a2 False",
        "url": "https://github.com/lean-ja/lean-by-example/blob/18461293dc1480999e1885c3b3d5e584aeabcd1a/LeanByExample/Tactic/Induction.lean#L83"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2024-11-07T02:25:02+09:00",
        "inclusion_date": "2025-07-05T04:59:30.172795+00:00"
      },
      "id": "6229297d834cdf61e0d1e91b18cdb3c80b424f804c13dd171d21b5f1c9d4649e"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "50207839e14910becf24aa4ef12b8b72223d0043",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/MoreRuzsaDist.lean",
        "start_line": 1047,
        "start_column": 108,
        "end_line": 1047,
        "end_column": 113
      },
      "debug_info": {
        "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\nhm : m \u2265 2\n\u03a9 : Fin m \u2192 Type u_9\nh\u03a9 : (i : Fin m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin m) \u2192 \u03a9 i \u2192 G\nhidenT : \u2200 (j k : Fin m), IdentDistrib (X j) (X k) volume volume\n\u22a2 \u2200 (i : Fin m), @multiDist G hG inst\u271d\u00b2 m \u03a9 h\u03a9 X \u2264 \u2191m * d[X i # X i]",
        "url": "https://github.com/teorth/pfr/blob/50207839e14910becf24aa4ef12b8b72223d0043/PFR/MoreRuzsaDist.lean#L1047"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-10-17T18:26:36+00:00",
        "inclusion_date": "2025-05-25T23:12:46.682441+00:00"
      },
      "id": "b089476b28cb4d588046e3aabc24f3c3f23b86cab3fdfab7c899f0b273b914da"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-fieldsimp",
        "commit": "d85670c33ad742e383d4cc47d1211411d616863b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/Tactic/FieldSimp2.lean",
        "start_line": 824,
        "start_column": 2,
        "end_line": 824,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x\u271d y\u271d z\u271d : \u211a\nK : Type u_1\ninst\u271d : Field K\nx y z : K\n\u22a2 x = (1 - y + y) * z",
        "url": "https://github.com/leanprover-community/mathlib4/blob/d85670c33ad742e383d4cc47d1211411d616863b/Mathlib/Tactic/FieldSimp2.lean#L824"
      },
      "metadata": {
        "blame_email_hash": "e6b953ae4684",
        "blame_date": "2025-06-14T21:34:58+01:00",
        "inclusion_date": "2025-06-17T03:07:09.828027+00:00"
      },
      "id": "7bf4229345c8919248e5810e01e90f0fe322cf7c719afcaa0aa7c4900da72f41"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 245,
        "start_column": 6,
        "end_line": 245,
        "end_column": 11
      },
      "debug_info": {
        "goal": "R : Type ?u.25702\ninst\u271d\u00b9 : CommRing R\nS : Type ?u.25708\ninst\u271d : CommRing S\nf : R \u2192+* S\nhf : Surjective \u21d1f\n\u22a2 \u2200 (x y : R \u29f8 ker f),\n    (@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f) (x * y) =\n      (@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f) x * (@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f) y",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L245"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "b09d6fd615dc1fb6910c141bb9559e4dccac5fc84f8509c2b0d7d05d91ddd38c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/CoreInteractionPhase.lean",
        "start_line": 154,
        "start_column": 28,
        "end_line": 154,
        "end_column": 33
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Fintype L\ninst\u271d\u2076 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2075 : Field \ud835\udd3dq\ninst\u271d\u2074 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u00b3 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b2 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u00b9 : NeZero \u03d1\ninst\u271d : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\ni : Fin \u2113\nchallenges : Fin \u2113 \u2192 L\ns : L\ntranscript : List L\nf_0 : \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e80, \u22ef\u27e9) \u2192 L\nt_star : \u21a5(restrictDegree (Fin \u2113) L 1)\nj : \u2115\n\u22a2 \u03d1 \u2223 j",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/CoreInteractionPhase.lean#L154"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "566d1166ba525f00ddd11f7fcbdea5cfa3aa97b272b83db088d9d3a6ffdbfd7c"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "master",
        "commit": "f407455715f319b6e43dcc840c47e1b881281964",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PhysLean/StatisticalMechanics/CanonicalEnsemble/Finite.lean",
        "start_line": 261,
        "start_column": 2,
        "end_line": 261,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\n\ud835\udcd2 : FiniteCanonicalEnsemble \u03b9\ninst\u271d : Fintype \u03b9\nn : \u2115\nT : Temperature\n\u22a2 FiniteCanonicalEnsemble.meanEnergy (Fin n \u2192 \u03b9) (FiniteCanonicalEnsemble.nsmul \u03b9 n \ud835\udcd2) Pi.instFintype T =\n    \u2191n * FiniteCanonicalEnsemble.meanEnergy \u03b9 \ud835\udcd2 inst\u271d T",
        "url": "https://github.com/HEPLean/PhysLean/blob/f407455715f319b6e43dcc840c47e1b881281964/PhysLean/StatisticalMechanics/CanonicalEnsemble/Finite.lean#L261"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-07-10T18:59:21+00:00",
        "inclusion_date": "2025-07-12T00:25:09.033847+00:00"
      },
      "id": "d1d6a55cad8dff60d2fa9546a16da7b41af48b9dcc661cf30a77eacd9e2ae851"
    },
    {
      "repo": {
        "remote": "https://github.com/ufmg-smite/lean-smt",
        "branch": "main",
        "commit": "e994ff05c81214b3397f8b59aaeca4c302bd41dc",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Test/Int/Binders.lean",
        "start_line": 27,
        "start_column": 2,
        "end_line": 27,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : Int\n\u22a2 mismatchNamesAdd a b = mismatchNamesAdd b a",
        "url": "https://github.com/ufmg-smite/lean-smt/blob/e994ff05c81214b3397f8b59aaeca4c302bd41dc/Test/Int/Binders.lean#L27"
      },
      "metadata": {
        "blame_email_hash": "2d71a621927f",
        "blame_date": "2022-07-14T12:41:05-04:00",
        "inclusion_date": "2025-05-17T23:11:31.262140+00:00"
      },
      "id": "ac9133a1fe234f6c3ac92487eb1756784d8c4fc5bb11aa42e4000d948e148a4c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 658,
        "start_column": 66,
        "end_line": 658,
        "end_column": 71
      },
      "debug_info": {
        "goal": "\u22a2 \u2211 k \u2208 Finset.Icc 2 10000, 1 / \u221a\u2191k < 198",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L658"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "bd4394587dbf68a173c3f28259d2009926cc4e64f37e5b9ddd63a1873a14b483"
    },
    {
      "repo": {
        "remote": "https://github.com/cmu-l3/llmlean",
        "branch": "kimina-pr",
        "commit": "126a6b2af37727c4d81bb49f6af6b354a380145e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LLMleanTest/Examples2.lean",
        "start_line": 48,
        "start_column": 2,
        "end_line": 48,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\nf : \u03b1 \u2192 \u03b2\ns t : Set \u03b1\nu v : Set \u03b2\n\u22a2 f '' (s \u2229 t) \u2286 f '' s \u2229 f '' t",
        "url": "https://github.com/cmu-l3/llmlean/blob/126a6b2af37727c4d81bb49f6af6b354a380145e/LLMleanTest/Examples2.lean#L48"
      },
      "metadata": {
        "blame_email_hash": "3ab0971ac342",
        "blame_date": "2024-07-23T17:17:09-04:00",
        "inclusion_date": "2025-06-11T03:39:01.065377+00:00"
      },
      "id": "d7d0caec1c0f9bcbf638465b4ef0d324d5c399eedc2acb624cfadc0ea3b8a6a7"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_04.lean",
        "start_line": 283,
        "start_column": 79,
        "end_line": 283,
        "end_column": 84
      },
      "debug_info": {
        "goal": "k : \u2115\nhk : Fact (Nat.Prime (4 * k + 1))\n\u22a2 (fixedPoints (ch04.trivialInvo k)).Nonempty",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_04.lean#L283"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2024-10-20T20:48:44+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "08392093604eef58e25d3f4d561d1968266002b5c2afd42f15c7f455fd381aca"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/10FunctionsAndOperators.lean",
        "start_line": 301,
        "start_column": 40,
        "end_line": 301,
        "end_column": 45
      },
      "debug_info": {
        "goal": "m : Type u_4\nn : Type u_5\ninst\u271d\u00b3 : Fintype m\ninst\u271d\u00b2 : Fintype n\ninst\u271d\u00b9 : DecidableEq m\ninst\u271d : DecidableEq n\nA : Matrix m n \u211d\n\u22a2 sorry A \u2264 \u221a\u2191A.rank * \u2016A\u2016",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/10FunctionsAndOperators.lean#L301"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2025-08-06T00:45:33+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "d1f3acf8577014a67c0ae0e850ff9da0d1b90bde1840092608aef683db0eb838"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 6 - 1, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "e5e44cbabf8ccde6e2b17551712341bbbb81bc84f5edcd799c24e3ff11403a2f"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "D-provlogic",
        "commit": "502486d0cdcfe147471cfb5fb9a7145b41e37f87",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/D/Completeness.lean",
        "start_line": 64,
        "start_column": 35,
        "end_line": 64,
        "end_column": 40
      },
      "debug_info": {
        "goal": "T : ArithmeticTheory\ninst\u271d\u00b2 : Theory.\u0394\u2081 T\ninst\u271d\u00b9 : \ud835\udddc\ud835\udeba\u2081 \u2aaf T\ninst\u271d : \u2115 \u22a7\u2098* T\nU : ArithmeticTheory\neU : T + \u2191(LO.FirstOrder.ArithmeticTheory.LocalReflection T inst\u271d\u00b2 (Arithmetic.Hierarchy \ud835\udeba 1)) = U\nA : Modal.Formula \u2115\nh : \u2200 (f : T.StandardRealization), U \u22a2!. \u2191f A\nf : T.StandardRealization\nV : ArithmeticTheory := T + \u2191(\u22c3 f, {x | x = \u2191f (\u223c\u25a1\u22a5) \u2228 x = \u2191f (\u25a1\u25a1Formula.atom 0 \u279d \u25a1Formula.atom 0)})\n\u03c3 : Sentence \u2112\u2092\u1d63\nh\u03c3 : \u03c3 \u2208 Arithmetic.Hierarchy \ud835\udeba 1\n\u03c0 : ArithmeticSentence\nh\u03c0\u2081 : Arithmetic.Hierarchy \ud835\udeba 1 \u03c0\nh\u03c0\u2082 :\n  V \u22a2!.\n    \u223cTheory.provabilityPred T \u22a5 \u22cf (Theory.provabilityPred T (Theory.provabilityPred T \u03c0) \u279d Theory.provabilityPred T \u03c0) \u279d\n      Theory.provabilityPred T \u03c3 \u279d \u03c3\ng : T.StandardRealization := { val := fun x => \u03c0 }\n\u22a2 V \u22a2!. \u2191g (\u223c\u25a1\u22a5)",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/502486d0cdcfe147471cfb5fb9a7145b41e37f87/Foundation/ProvabilityLogic/D/Completeness.lean#L64"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-09-11T00:07:47+09:00",
        "inclusion_date": "2025-09-12T03:28:19.860470+00:00"
      },
      "id": "91cacf902cedf223f2040a7097ae5f015451e7e85ddd31c4c1f17b01092fcf34"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "6e8a15e60416137391f8f3a5431c1d297812589d",
        "lean_version": "v4.22.0-rc2"
      },
      "location": {
        "path": "Carleson/ToMathlib/RealInterpolation/Main.lean",
        "start_line": 387,
        "start_column": 48,
        "end_line": 387,
        "end_column": 53
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b1' : Type u_2\nE\u2081 : Type u_4\nE\u2082 : Type u_5\nm : MeasurableSpace \u03b1\nm' : MeasurableSpace \u03b1'\np q p\u2080 q\u2080 p\u2081 q\u2081 : ENNReal\nC\u2080 C\u2081 : NNReal\n\u03bc : Measure \u03b1\n\u03bd : Measure \u03b1'\nf : \u03b1 \u2192 E\u2081\nT : (\u03b1 \u2192 E\u2081) \u2192 \u03b1' \u2192 E\u2082\ninst\u271d\u00b3 : TopologicalSpace E\u2081\ninst\u271d\u00b2 : ENormedAddCommMonoid E\u2081\ninst\u271d\u00b9 : TopologicalSpace E\u2082\ninst\u271d : ENormedAddCommMonoid E\u2082\nhp\u2080 : 0 < p\u2080\nhq\u2080 : 0 < q\u2080\nhq\u2081 : 0 < q\u2081\nhp\u2081p : p < p\u2081\nhp\u2080p : p\u2080 < p\ntc : ToneCouple\nhq\u2080' : q\u2080 = \u22a4 \u2192 \u2200 s > 0, distribution (T (truncCompl f (tc.ton s))) s \u03bd = 0\nhq\u2081' : q\u2081 = \u22a4 \u2192 \u2200 s > 0, distribution (T (trunc f (tc.ton s))) s \u03bd = 0\nhf : MemLp f p \u03bc\nhT\u2081 : HasWeakType T p\u2081 q\u2081 \u03bc \u03bd \u2191C\u2081\nhT\u2080 : HasWeakType T p\u2080 q\u2080 \u03bc \u03bd \u2191C\u2080\nthis\u271d\u00b2 : \u2200 (q' q : \u211d), -q' + (q - 1) = q - q' - 1\np_pos : 0 < p\nis_q\u2081top : q\u2081 < \u22a4\nis_q\u2080top : q\u2080 < \u22a4\ns : \u211d\ns_pos : 0 < s\nthis\u271d\u00b9 : 0 < ENNReal.ofReal s\nthis\u271d : p \u2260 \u22a4\nthis : p\u2080 \u2264 p\n\u22a2 0 < tc.ton (ENNReal.ofReal s)",
        "url": "https://github.com/fpvandoorn/carleson/blob/6e8a15e60416137391f8f3a5431c1d297812589d/Carleson/ToMathlib/RealInterpolation/Main.lean#L387"
      },
      "metadata": {
        "blame_email_hash": "06ea44610ffb",
        "blame_date": "2025-07-04T09:38:11+02:00",
        "inclusion_date": "2025-07-05T04:18:31.626232+00:00"
      },
      "id": "1bcce0f69889ca7dfa2b30a6f6c2767d2d5ad4dbc17efe0c6f1ab47d5327f1bf"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-hardly-ramified",
        "commit": "60be88a841fa232b563ea16600befe5efbfb3d07",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FLT/HaarMeasure/HaarChar/AdeleRing.lean",
        "start_line": 125,
        "start_column": 66,
        "end_line": 125,
        "end_column": 71
      },
      "debug_info": {
        "goal": "x : \u211a\u02e3\ninst\u271d\u00b9 : MeasurableSpace (AdeleRing (RingOfIntegers \u211a) \u211a)\ninst\u271d : BorelSpace (AdeleRing (RingOfIntegers \u211a) \u211a)\n\u22a2 ringHaarChar ((Units.map \u2191(algebraMap \u211a (AdeleRing (RingOfIntegers \u211a) \u211a))) x) = 1",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/60be88a841fa232b563ea16600befe5efbfb3d07/FLT/HaarMeasure/HaarChar/AdeleRing.lean#L125"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-06-07T23:01:07+01:00",
        "inclusion_date": "2025-09-18T04:05:26.332171+00:00"
      },
      "id": "4414edd602b1006afe32e5adbf0ac76a60683ecce401bec0d1edc6b328bb4b0e"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "9e8de5716b162ec8983a89711a186d13ff871c22",
        "lean_version": "v4.24.0-rc1"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 48,
        "start_column": 12,
        "end_line": 48,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case snd.snd\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : @MyProd \u03b1 (@MyProd \u03b2 \u03b3)\n\u22a2 @MyProd.snd \u03b2 \u03b3 (@MyProd.snd \u03b1 (@MyProd \u03b2 \u03b3) p) = @MyProd.snd \u03b2 \u03b3 (@MyProd.snd \u03b1 (@MyProd \u03b2 \u03b3) q)",
        "url": "https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/AesopTest/ExtScript.lean#L48"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-09-16T04:23:04.307662+00:00"
      },
      "id": "9f902235b6a40047d38cf3ba7abf7b843a98929ee86a5891ea9faf5d2dbbdadf"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "99a77d19845fb8083456331fd1256bf35a48f60c",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 131,
        "start_column": 6,
        "end_line": 131,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case refine_2.ht\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : NNReal\nhX : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 X p \u03bc\nhY : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\n\u22a2 MeasurableSet (\u22c2 i \u2208 s, {\u03c9 | Y \u03c9 i})",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/99a77d19845fb8083456331fd1256bf35a48f60c/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L131"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-09-08T22:03:06.847248+00:00"
      },
      "id": "f3e22de6006b633ded839aaac0a78e1bf83dfa301101da58e9b2feac7b62b677"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "f4441d7327caa75ae7879ecfda33fc60ab0cf17e",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 7216,
        "start_column": 23,
        "end_line": 7216,
        "end_column": 28
      },
      "debug_info": {
        "goal": "\u03bd : \u211d \u2192 \u211d\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\nc_close : \u211d\nc_close_pos : c_close > 0\nh_close :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 (\u03b5 : \u211d),\n        0 < \u03b5 \u2192 \u03b5 < 1 \u2192 2 < X * \u03b5 \u2192 \u2016SmoothedChebyshev \u03bd \u03b5 X - \u2191(ChebyshevPsi X)\u2016 \u2264 c_close * \u03b5 * X * Real.log X\n\u03b5_main C_main : \u211d\n\u03b5_main_pos : 0 < \u03b5_main\nC_main_pos : 0 < C_main\nh_main : \u2200 \u03b5 \u2208 Ioo 0 \u03b5_main, \u2016MellinTransform (fun x => \u2191(Smooth1 \u03bd \u03b5 x)) 1 - 1\u2016 \u2264 C_main * \u03b5\nA C_bnd : \u211d\nC_bnd_pos : 0 < C_bnd\nA_in_Ioc : A \u2208 Ioc 0 (1 / 2)\nzeta_bnd : LogDerivZetaHasBound A C_bnd\nholo1 :\n  \u2200 (T : \u211d),\n    3 \u2264 T \u2192\n      HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (Icc (1 - A / Real.log T ^ 9) 2 \u00d7\u2102 Icc (-T) T \\ {1})\n\u03c3\u2082' : \u211d\n\u03c3\u2082 : \u211d := \u22ef\n\u03c3\u2082_pos : 0 < \u03c3\u2082\n\u03c3\u2082_lt_one : \u03c3\u2082 < 1\nholo2 : HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (uIcc \u03c3\u2082 2 \u00d7\u2102 uIcc (-3) 3 \\ {1})\nc\u2081 : \u211d\nc\u2081pos : c\u2081 > 0\nhc\u2081 : \u2200 (\u03b5 : \u211d), 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2081 \u03bd \u03b5 X T\u2016 \u2264 c\u2081 * X * Real.log X / (\u03b5 * T)\nc\u2082 : \u211d\nc\u2082pos : 0 < c\u2082\nhc\u2082 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2082 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2082 * X / (\u03b5 * T)\nc\u2083 : \u211d\nc\u2083pos : 0 < c\u2083\nhc\u2083 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2083 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2083 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2085 : \u211d\nc\u2085pos : 0 < c\u2085\nhc\u2085 : \u2200 (X : \u211d), 3 < X \u2192 \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2016I\u2085 \u03bd \u03b5 X \u03c3\u2082\u2016 \u2264 c\u2085 * X ^ \u03c3\u2082 / \u03b5\nc\u2087 : \u211d\nc\u2087pos : 0 < c\u2087\nhc\u2087 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2087 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2087 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2088 : \u211d\nc\u2088pos : 0 < c\u2088\nhc\u2088 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2088 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2088 * X / (\u03b5 * T)\nc\u2089 : \u211d\nc\u2089pos : c\u2089 > 0\nhc\u2089 : \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2089 \u03bd \u03b5 X T\u2016 \u2264 c\u2089 * X * Real.log X / (\u03b5 * T)\nc\u2084 : \u211d\nc\u2084pos : 0 \u2264 c\u2084\nTlb\u2084 : \u211d\nTlb\u2084bnd : 3 < Tlb\u2084\nhc\u2084 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              Tlb\u2084 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2084 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 \u2264 c\u2084 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2086 : \u211d\nc\u2086pos : 0 \u2264 c\u2086\nTlb\u2086 : \u211d\nTlb\u2086bnd : 3 < Tlb\u2086\nhc\u2086 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              Tlb\u2086 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2086 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 \u2264 c\u2086 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nC' : \u211d := \u22ef\nC'' : \u211d := \u22ef\nC''' : \u211d := \u22ef\nc : \u211d := \u22ef\n\u22a2 0 < c",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/f4441d7327caa75ae7879ecfda33fc60ab0cf17e/PrimeNumberTheoremAnd/MediumPNT.lean#L7216"
      },
      "metadata": {
        "blame_email_hash": "bee09f470e62",
        "blame_date": "2025-07-19T18:28:56+01:00",
        "inclusion_date": "2025-07-22T23:05:23.619594+00:00"
      },
      "id": "4e8c85385a374344850115b2ce8875a1e0d9d0121515ce76a5252db964272de2"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "3d8e1994e2522b249c36b71db17765a779eaa787",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "LeanByExample/Tactic/Induction.lean",
        "start_line": 107,
        "start_column": 4,
        "end_line": 107,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case succ\nacc n : \u2115\nih : factorialTR.aux n acc = acc * factorialTR.aux n 1\n\u22a2 factorialTR.aux n (acc * (n + 1)) = acc * factorialTR.aux n (1 * (n + 1))",
        "url": "https://github.com/lean-ja/lean-by-example/blob/3d8e1994e2522b249c36b71db17765a779eaa787/LeanByExample/Tactic/Induction.lean#L107"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2024-11-07T02:25:02+09:00",
        "inclusion_date": "2025-09-15T04:41:33.921583+00:00"
      },
      "id": "7a526b9fd63713aad0525a48c5afecac4cf8a67e5c273425fc17bfb8dfe65e5f"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/MoreRuzsaDist.lean",
        "start_line": 2070,
        "start_column": 54,
        "end_line": 2070,
        "end_column": 59
      },
      "debug_info": {
        "goal": "G : Type u_5\nhG : MeasurableSpace G\ninst\u271d\u00b3 : MeasurableSingletonClass G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : Countable G\ninst\u271d : Fintype G\nm : \u2115\nhm : m \u2265 1\n\u03a9 : Type u_8\nh\u03a9 : MeasureSpace \u03a9\nX : Fin (m + 1) \u00d7 Fin (m + 1) \u2192 \u03a9 \u2192 G\nh_indep : iIndepFun X volume\n\u22a2 I[fun \u03c9 j => \u2211 i, X (i, j) \u03c9 : fun \u03c9 i => \u2211 j, X (i, j) \u03c9|\u2211 p, X p] \u2264\n    (\u2211 j,\n          ((@multiDist G hG inst\u271d\u00b2 (m + 1) (fun x => \u03a9) (fun x => h\u03a9) fun i => X (i, j)) -\n            @condMultiDist G hG inst\u271d\u00b2 (m + 1) (fun x => \u03a9) (fun x => h\u03a9) G inst\u271d (fun i => X (i, j)) fun i =>\n              \u2211 k \u2208 Finset.Ici j, X (i, k)) +\n        @multiDist G hG inst\u271d\u00b2 (m + 1) (fun x => \u03a9) (fun x => h\u03a9) fun i => X (i, \u2191m)) -\n      @multiDist G hG inst\u271d\u00b2 (m + 1) (fun x => \u03a9) (fun x => h\u03a9) fun i => \u2211 j, X (i, j)",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/MoreRuzsaDist.lean#L2070"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-10-17T18:26:36+00:00",
        "inclusion_date": "2025-06-01T03:03:10.481677+00:00"
      },
      "id": "1b142d902a81e04c62336cb7e4aa8b888fd1f6c73d3c44ccc48c28f49d023db0"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "CM-local-ring-is-catenary",
        "commit": "1502d6a0198864ee7092a76ab022e8ad69a92f4b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/RingTheory/CohenMacaulay/Catenary.lean",
        "start_line": 421,
        "start_column": 4,
        "end_line": 421,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case a\nR : Type u\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : IsNoetherianRing R\ninst\u271d : IsCohenMacaulayLocalRing R\nI : Ideal R\nnetop : I \u2260 \u22a4\nthis : Nontrivial (R \u29f8 I)\n\u22a2 (\u2a05 J, \u2a05 (h : J \u2208 I.minimalPrimes), J.primeHeight) + \u2a06 p, @nonnegRingKrullDim (R \u29f8 \u2191p) (Quotient.commSemiring \u2191p) \u2264\n    @nonnegRingKrullDim R CommRing.toCommSemiring",
        "url": "https://github.com/leanprover-community/mathlib4/blob/1502d6a0198864ee7092a76ab022e8ad69a92f4b/Mathlib/RingTheory/CohenMacaulay/Catenary.lean#L421"
      },
      "metadata": {
        "blame_email_hash": "4351a1f9903a",
        "blame_date": "2025-06-14T19:45:16+08:00",
        "inclusion_date": "2025-06-17T03:04:15.410526+00:00"
      },
      "id": "b398286a2b7d3e78440346dbe105d0ac446968f0e1aa02fdc154c6af87f3bc84"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 247,
        "start_column": 6,
        "end_line": 247,
        "end_column": 11
      },
      "debug_info": {
        "goal": "R : Type ?u.25702\ninst\u271d\u00b9 : CommRing R\nS : Type ?u.25708\ninst\u271d : CommRing S\nf : R \u2192+* S\nhf : Surjective \u21d1f\n\u22a2 \u2200 (x y : R \u29f8 ker f),\n    (@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f) (x + y) =\n      (@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f) x + (@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f) y",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L247"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "3f54b2da96f46fe1d5be9a3c0aa343f59c76284372e84f5326230571c93b9c63"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/CoreInteractionPhase.lean",
        "start_line": 255,
        "start_column": 4,
        "end_line": 255,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case e_\u03c3.e_n.h\nL : Type\ninst\u271d\u2077 : Field L\ninst\u271d\u2076 : Fintype L\ninst\u271d\u2075 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2074 : Field \ud835\udd3dq\ninst\u271d\u00b3 : Fintype \ud835\udd3dq\ninst\u271d\u00b2 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b9 : NeZero r\n\u2113 \ud835\udce1 : \u2115\ninst\u271d : NeZero \u2113\n\ud835\udcd1 : Fin 2 \u21aa L\ni : Fin \u2113\nh : \u21a5(restrictDegree (Fin (\u2113 - \u2191i.castSucc)) L 1)\n\u22a2 1 \u2264 \u2113 - \u2191i.castSucc",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/CoreInteractionPhase.lean#L255"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "44a76e88ca7ea9b5e1c337b00a16dc2ca4e45f84b0d45a893a8a046bf5148aa6"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "master",
        "commit": "f407455715f319b6e43dcc840c47e1b881281964",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PhysLean/StatisticalMechanics/CanonicalEnsemble/Finite.lean",
        "start_line": 325,
        "start_column": 47,
        "end_line": 325,
        "end_column": 52
      },
      "debug_info": {
        "goal": "\u03b9 : Type\n\ud835\udcd2 : FiniteCanonicalEnsemble \u03b9\ninst\u271d : Fintype \u03b9\nn : \u2115\nT : Temperature\n\u22a2 FiniteCanonicalEnsemble.entropy (Fin n \u2192 \u03b9) (FiniteCanonicalEnsemble.nsmul \u03b9 n \ud835\udcd2) Pi.instFintype T =\n    \u2191n * FiniteCanonicalEnsemble.entropy \u03b9 \ud835\udcd2 inst\u271d T",
        "url": "https://github.com/HEPLean/PhysLean/blob/f407455715f319b6e43dcc840c47e1b881281964/PhysLean/StatisticalMechanics/CanonicalEnsemble/Finite.lean#L325"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-07-10T18:59:21+00:00",
        "inclusion_date": "2025-07-12T00:25:09.033847+00:00"
      },
      "id": "9e7718703374aa96f19535380d0a6c18805b567f7d66d70cf0f7d97960a5b9a7"
    },
    {
      "repo": {
        "remote": "https://github.com/ufmg-smite/lean-smt",
        "branch": "main",
        "commit": "e994ff05c81214b3397f8b59aaeca4c302bd41dc",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Test/Int/DefineSort.lean",
        "start_line": 8,
        "start_column": 2,
        "end_line": 8,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : MyInt\n\u22a2 MyInt.add a b = MyInt.add b a",
        "url": "https://github.com/ufmg-smite/lean-smt/blob/e994ff05c81214b3397f8b59aaeca4c302bd41dc/Test/Int/DefineSort.lean#L8"
      },
      "metadata": {
        "blame_email_hash": "2d71a621927f",
        "blame_date": "2022-07-14T12:41:05-04:00",
        "inclusion_date": "2025-05-17T23:11:31.262140+00:00"
      },
      "id": "0d9944a0ca335cee494beb1bb7ce91fc4fcb01f4e5ba50725acc2abcbec6f495"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 779,
        "start_column": 66,
        "end_line": 779,
        "end_column": 71
      },
      "debug_info": {
        "goal": "\u22a2 \u220f k \u2208 Finset.range 7, (2 ^ 2 ^ k + 3 ^ 2 ^ k) = 3 ^ 128 - 2 ^ 128",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L779"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "f04587b315bad20004a3f69870a416cf9e0cd5c18d7d81c341eb449c9ceaf213"
    },
    {
      "repo": {
        "remote": "https://github.com/cmu-l3/llmlean",
        "branch": "kimina-pr",
        "commit": "126a6b2af37727c4d81bb49f6af6b354a380145e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LLMleanTest/Examples2.lean",
        "start_line": 51,
        "start_column": 2,
        "end_line": 51,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\nf : \u03b1 \u2192 \u03b2\ns t : Set \u03b1\nu v : Set \u03b2\nh : Injective f\n\u22a2 f '' s \u2229 f '' t \u2286 f '' (s \u2229 t)",
        "url": "https://github.com/cmu-l3/llmlean/blob/126a6b2af37727c4d81bb49f6af6b354a380145e/LLMleanTest/Examples2.lean#L51"
      },
      "metadata": {
        "blame_email_hash": "3ab0971ac342",
        "blame_date": "2024-07-23T17:17:09-04:00",
        "inclusion_date": "2025-06-11T03:39:01.065377+00:00"
      },
      "id": "1de89eebe56e87bf100050748db8140c9b74d49a65b18835150a53738a033b16"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_21.lean",
        "start_line": 30,
        "start_column": 2,
        "end_line": 30,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : Polynomial \u2102\nh : \u00ac0 < f.degree\n\u22a2 \u2203 z, f.IsRoot z",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_21.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2024-10-06T13:06:05+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "69a10f53f5ceacdbef54c6c1cce36d70a7d93def5f98040d2c51d378273167dc"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/10FunctionsAndOperators.lean",
        "start_line": 308,
        "start_column": 65,
        "end_line": 308,
        "end_column": 70
      },
      "debug_info": {
        "goal": "n : Type u_5\ninst\u271d\u00b9 : Fintype n\ninst\u271d : DecidableEq n\nA : Matrix n n \u211d\n\u22a2 \u2016A\u2016 * \u2016A\u207b\u00b9\u2016 = sorry / sorry",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/10FunctionsAndOperators.lean#L308"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2025-08-06T00:45:33+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "13631b0d43688a0cd416509ad9969e5699aec3c5cce251d0257929f4708787cf"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 7 - 1, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "1242d7ce42b24197936bf10666d41b7af4016a6c0aa0b232d9283a169fc37599"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "D-provlogic",
        "commit": "502486d0cdcfe147471cfb5fb9a7145b41e37f87",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/D/Completeness.lean",
        "start_line": 65,
        "start_column": 8,
        "end_line": 65,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case d\u2081\nT : ArithmeticTheory\ninst\u271d\u00b2 : Theory.\u0394\u2081 T\ninst\u271d\u00b9 : \ud835\udddc\ud835\udeba\u2081 \u2aaf T\ninst\u271d : \u2115 \u22a7\u2098* T\nU : ArithmeticTheory\neU : T + \u2191(LO.FirstOrder.ArithmeticTheory.LocalReflection T inst\u271d\u00b2 (Arithmetic.Hierarchy \ud835\udeba 1)) = U\nA : Modal.Formula \u2115\nh : \u2200 (f : T.StandardRealization), U \u22a2!. \u2191f A\nf : T.StandardRealization\nV : ArithmeticTheory := T + \u2191(\u22c3 f, {x | x = \u2191f (\u223c\u25a1\u22a5) \u2228 x = \u2191f (\u25a1\u25a1Formula.atom 0 \u279d \u25a1Formula.atom 0)})\n\u03c3 : Sentence \u2112\u2092\u1d63\nh\u03c3 : \u03c3 \u2208 Arithmetic.Hierarchy \ud835\udeba 1\n\u03c0 : ArithmeticSentence\nh\u03c0\u2081 : Arithmetic.Hierarchy \ud835\udeba 1 \u03c0\nh\u03c0\u2082 :\n  V \u22a2!.\n    \u223cTheory.provabilityPred T \u22a5 \u22cf (Theory.provabilityPred T (Theory.provabilityPred T \u03c0) \u279d Theory.provabilityPred T \u03c0) \u279d\n      Theory.provabilityPred T \u03c3 \u279d \u03c3\ng : T.StandardRealization := { val := fun x => \u03c0 }\nthis : V \u22a2!. \u2191g (\u223c\u25a1\u22a5)\n\u22a2 \u2191V \u22a2! \u223cTheory.provabilityPred T \u22a5",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/502486d0cdcfe147471cfb5fb9a7145b41e37f87/Foundation/ProvabilityLogic/D/Completeness.lean#L65"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-09-11T00:07:47+09:00",
        "inclusion_date": "2025-09-12T03:28:19.860470+00:00"
      },
      "id": "f7804cad2e7de1fd0ec39c40938d5a3f7120effa073067030c3a146d478344b4"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "ineq_6_3_30",
        "commit": "50d8e9adca7e109fca68ac5572b4e515a70ae9a0",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainTileCount.lean",
        "start_line": 516,
        "start_column": 2,
        "end_line": 516,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro.intro\nX : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Finset (\ud835\udd13 X)\n\u03d1 : \u0398 X\nN : \u2115\nhS0 : defaultS X \u2260 0\nL : Grid X\nhL : L \u2208 @Antichain.\ud835\udcdb' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N\np' : { x // x \u2208 @Antichain.\ud835\udd04' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N }\nhp' : L \u2264 \ud835\udcd8 \u2191p'\nhle : @Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N hS0 L hL \u2264 \ud835\udcd8 \u2191p'\nhL' :\n  @Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N hS0 L hL \u2209\n    @Antichain.\ud835\udcdb X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N\np'' : { x // x \u2208 @Antichain.\ud835\udd04' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N }\nhp'' : \ud835\udcd8 \u2191p'' \u2264 @Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N hS0 L hL\n\u22a2 \u2203 p, \ud835\udcd8 p = @Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N hS0 L hL \u2227 \u03d1 \u2208 \u03a9 p",
        "url": "https://github.com/fpvandoorn/carleson/blob/50d8e9adca7e109fca68ac5572b4e515a70ae9a0/Carleson/Antichain/AntichainTileCount.lean#L516"
      },
      "metadata": {
        "blame_email_hash": "b2f50b2f722a",
        "blame_date": "2025-07-02T17:48:35+02:00",
        "inclusion_date": "2025-07-03T03:51:24.001986+00:00"
      },
      "id": "992ed62f2e42303bc4d5e211be943b6ed96080cd463608b5c8ccc7fc7f46fad7"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-hardly-ramified",
        "commit": "60be88a841fa232b563ea16600befe5efbfb3d07",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FLT/HaarMeasure/HaarChar/AdeleRing.lean",
        "start_line": 138,
        "start_column": 26,
        "end_line": 138,
        "end_column": 31
      },
      "debug_info": {
        "goal": "K : Type u_1\nL : Type u_2\ninst\u271d\u00b2\u2074 : Field K\ninst\u271d\u00b2\u00b3 : Field L\ninst\u271d\u00b2\u00b2 : Algebra K L\ninst\u271d\u00b2\u00b9 : NumberField K\ninst\u271d\u00b2\u2070 : NumberField L\nV : Type u_3\ninst\u271d\u00b9\u2079 : AddCommGroup V\ninst\u271d\u00b9\u2078 : Module L V\ninst\u271d\u00b9\u2077 : Module K V\ninst\u271d\u00b9\u2076 : IsScalarTower K L V\ninst\u271d\u00b9\u2075 : FiniteDimensional L V\ninst\u271d\u00b9\u2074 : FiniteDimensional K V\nB : Type u_4\ninst\u271d\u00b9\u00b3 : Ring B\ninst\u271d\u00b9\u00b2 : Algebra K B\ninst\u271d\u00b9\u00b9 : FiniteDimensional K B\nR : Type u_5\ninst\u271d\u00b9\u2070 : CommRing R\nA : Type u_6\ninst\u271d\u2079 : CommRing A\ninst\u271d\u2078 : Algebra R A\ninst\u271d\u2077 : TopologicalSpace A\ninst\u271d\u2076 : IsTopologicalRing A\nM : Type u_7\nN : Type u_8\ninst\u271d\u2075 : AddCommGroup M\ninst\u271d\u2074 : Module R M\ninst\u271d\u00b3 : AddCommGroup N\ninst\u271d\u00b2 : Module R N\ninst\u271d\u00b9 : Module.Finite R M\ninst\u271d : Module.Finite R N\n\u03c6 : M \u2243\u2097[R] N\n\u22a2 Continuous (\u2191(TensorProduct.RightActions.LinearEquiv.baseChange R M N A \u03c6)).toFun",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/60be88a841fa232b563ea16600befe5efbfb3d07/FLT/HaarMeasure/HaarChar/AdeleRing.lean#L138"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-06-07T23:01:07+01:00",
        "inclusion_date": "2025-09-18T04:05:26.332171+00:00"
      },
      "id": "293760a56389c1a880cefbc4b0f8772ae57a9feacdf5f326d27fd2bb83cfef0e"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "9e8de5716b162ec8983a89711a186d13ff871c22",
        "lean_version": "v4.24.0-rc1"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 64,
        "start_column": 12,
        "end_line": 64,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case fst.h\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : @MyProd (\u03b1 \u2192 \u03b2) \u03b3\nx : \u03b1\n\u22a2 @MyProd.fst (\u03b1 \u2192 \u03b2) \u03b3 p x = @MyProd.fst (\u03b1 \u2192 \u03b2) \u03b3 q x",
        "url": "https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/AesopTest/ExtScript.lean#L64"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-09-16T04:23:04.307662+00:00"
      },
      "id": "75837ede49701378db8d1f2d57b4be3f70dd551ed51c5f77659f7454633cc227"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "99a77d19845fb8083456331fd1256bf35a48f60c",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 59,
        "start_column": 4,
        "end_line": 59,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case intro.intro.intro.refine_2\nG : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(A ^ 2).card \u2264 K * \u2191A.card\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191A.card / (2 * K) \u2264 \u2191(MulOpposite.op g \u2022 A \u2229 A).card}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191S.card \u2264 K ^ 2 * \u2191A.card\nF : Finset G\nhFA : F \u2286 A\nhFcard : \u2191F.card \u2264 2 * K\nhASF : A \u2286 S * F\n\u22a2 \u2191(S ^ 2).card \u2264 16 * K ^ 12 * \u2191A.card",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/99a77d19845fb8083456331fd1256bf35a48f60c/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L59"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-09-08T22:03:06.847248+00:00"
      },
      "id": "25d4c7f2defbde052e327ff3ffe2fa359b91d644c68513b17b6e4db709e9bb87"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "b5313cfd2308dfb6b98d7321bf26243984e4d291",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 7231,
        "start_column": 4,
        "end_line": 7231,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case h\n\u03bd : \u211d \u2192 \u211d\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\nc_close : \u211d\nc_close_pos : c_close > 0\nh_close :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 (\u03b5 : \u211d),\n        0 < \u03b5 \u2192 \u03b5 < 1 \u2192 2 < X * \u03b5 \u2192 \u2016SmoothedChebyshev \u03bd \u03b5 X - \u2191(ChebyshevPsi X)\u2016 \u2264 c_close * \u03b5 * X * Real.log X\n\u03b5_main C_main : \u211d\n\u03b5_main_pos : 0 < \u03b5_main\nC_main_pos : 0 < C_main\nh_main : \u2200 \u03b5 \u2208 Ioo 0 \u03b5_main, \u2016MellinTransform (fun x => \u2191(Smooth1 \u03bd \u03b5 x)) 1 - 1\u2016 \u2264 C_main * \u03b5\nA C_bnd : \u211d\nC_bnd_pos : 0 < C_bnd\nA_in_Ioc : A \u2208 Ioc 0 (1 / 2)\nzeta_bnd : LogDerivZetaHasBound A C_bnd\nholo1 :\n  \u2200 (T : \u211d),\n    3 \u2264 T \u2192\n      HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (Icc (1 - A / Real.log T ^ 9) 2 \u00d7\u2102 Icc (-T) T \\ {1})\n\u03c3\u2082' : \u211d\n\u03c3\u2082 : \u211d := max \u03c3\u2082' (1 / 2)\n\u03c3\u2082_pos : 0 < \u03c3\u2082\n\u03c3\u2082_lt_one : \u03c3\u2082 < 1\nholo2 : HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (uIcc \u03c3\u2082 2 \u00d7\u2102 uIcc (-3) 3 \\ {1})\nc\u2081 : \u211d\nc\u2081pos : c\u2081 > 0\nhc\u2081 : \u2200 (\u03b5 : \u211d), 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2081 \u03bd \u03b5 X T\u2016 \u2264 c\u2081 * X * Real.log X / (\u03b5 * T)\nc\u2082 : \u211d\nc\u2082pos : 0 < c\u2082\nhc\u2082 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2082 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2082 * X / (\u03b5 * T)\nc\u2083 : \u211d\nc\u2083pos : 0 < c\u2083\nhc\u2083 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2083 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2083 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2085 : \u211d\nc\u2085pos : 0 < c\u2085\nhc\u2085 : \u2200 (X : \u211d), 3 < X \u2192 \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2016I\u2085 \u03bd \u03b5 X \u03c3\u2082\u2016 \u2264 c\u2085 * X ^ \u03c3\u2082 / \u03b5\nc\u2087 : \u211d\nc\u2087pos : 0 < c\u2087\nhc\u2087 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2087 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2087 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2088 : \u211d\nc\u2088pos : 0 < c\u2088\nhc\u2088 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2088 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2088 * X / (\u03b5 * T)\nc\u2089 : \u211d\nc\u2089pos : c\u2089 > 0\nhc\u2089 : \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2089 \u03bd \u03b5 X T\u2016 \u2264 c\u2089 * X * Real.log X / (\u03b5 * T)\nc\u2084 : \u211d\nc\u2084pos : 0 \u2264 c\u2084\nTlb\u2084 : \u211d\nTlb\u2084bnd : 3 < Tlb\u2084\nhc\u2084 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              Tlb\u2084 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2084 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 \u2264 c\u2084 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2086 : \u211d\nc\u2086pos : 0 \u2264 c\u2086\nTlb\u2086 : \u211d\nTlb\u2086bnd : 3 < Tlb\u2086\nhc\u2086 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              Tlb\u2086 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2086 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 \u2264 c\u2086 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\n\u03b5x : \u211d \u2192 \u211d := fun x => Real.exp (-c * Real.log x ^ (1 / 10))\nTx : \u211d \u2192 \u211d := fun x => Real.exp (2 * c * Real.log x ^ (1 / 10))\neventually_\u03b5x_lt_one : \u2200\u1da0 (x : \u211d) in atTop, \u03b5x x < 1\nx : \u211d\nhx : x \u2265 sorry\n\u22a2 2 < x * Real.exp (-c * Real.log x ^ (1 / 10))",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/b5313cfd2308dfb6b98d7321bf26243984e4d291/PrimeNumberTheoremAnd/MediumPNT.lean#L7231"
      },
      "metadata": {
        "blame_email_hash": "bee09f470e62",
        "blame_date": "2025-07-19T18:28:56+01:00",
        "inclusion_date": "2025-07-22T23:27:42.532828+00:00"
      },
      "id": "e20712be93bb8d762a526377c07de944f32fbb6a6753b76a137b7680f4103b57"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "3d8e1994e2522b249c36b71db17765a779eaa787",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "LeanByExample/Declarative/ProofWanted.lean",
        "start_line": 16,
        "start_column": 41,
        "end_line": 16,
        "end_column": 46
      },
      "debug_info": {
        "goal": "n : Nat\n\u22a2 n + 0 = n",
        "url": "https://github.com/lean-ja/lean-by-example/blob/3d8e1994e2522b249c36b71db17765a779eaa787/LeanByExample/Declarative/ProofWanted.lean#L16"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2024-06-19T23:24:32+09:00",
        "inclusion_date": "2025-09-15T04:41:33.921583+00:00"
      },
      "id": "b2cb61a65ad37318ea61a8b3c917fee5dc988201fccb875077bd57efbb3d79a5"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "58ff9ddb3f6bc3860fb0316cc210fca5d488ba62",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PFR/MoreRuzsaDist.lean",
        "start_line": 2012,
        "start_column": 54,
        "end_line": 2012,
        "end_column": 59
      },
      "debug_info": {
        "goal": "G : Type u_5\nhG : MeasurableSpace G\ninst\u271d\u00b3 : MeasurableSingletonClass G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : Countable G\ninst\u271d : Fintype G\nm : \u2115\nhm : m \u2265 1\n\u03a9 : Type u_8\nh\u03a9 : MeasureSpace \u03a9\nX : Fin (m + 1) \u00d7 Fin (m + 1) \u2192 \u03a9 \u2192 G\nh_indep : iIndepFun X volume\n\u22a2 I[fun \u03c9 j => \u2211 i, X (i, j) \u03c9 : fun \u03c9 i => \u2211 j, X (i, j) \u03c9|\u2211 p, X p] \u2264\n    (\u2211 j,\n          ((@multiDist G hG inst\u271d\u00b2 (m + 1) (fun x => \u03a9) (fun x => h\u03a9) fun i => X (i, j)) -\n            @condMultiDist G hG inst\u271d\u00b2 (m + 1) (fun x => \u03a9) (fun x => h\u03a9) G inst\u271d (fun i => X (i, j)) fun i =>\n              \u2211 k \u2208 Finset.Ici j, X (i, k)) +\n        @multiDist G hG inst\u271d\u00b2 (m + 1) (fun x => \u03a9) (fun x => h\u03a9) fun i => X (i, \u22a4)) -\n      @multiDist G hG inst\u271d\u00b2 (m + 1) (fun x => \u03a9) (fun x => h\u03a9) fun i => \u2211 j, X (i, j)",
        "url": "https://github.com/teorth/pfr/blob/58ff9ddb3f6bc3860fb0316cc210fca5d488ba62/PFR/MoreRuzsaDist.lean#L2012"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-10-17T18:26:36+00:00",
        "inclusion_date": "2025-07-05T05:06:27.171280+00:00"
      },
      "id": "0dc81625f6be9db51cf8ba60bee11517cf581aba32dc109485e3ddbcadbce67d"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "CM-local-ring-is-catenary",
        "commit": "1502d6a0198864ee7092a76ab022e8ad69a92f4b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/RingTheory/CohenMacaulay/Catenary.lean",
        "start_line": 422,
        "start_column": 4,
        "end_line": 422,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case a\nR : Type u\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : IsNoetherianRing R\ninst\u271d : IsCohenMacaulayLocalRing R\nI : Ideal R\nnetop : I \u2260 \u22a4\nthis : Nontrivial (R \u29f8 I)\n\u22a2 @nonnegRingKrullDim R CommRing.toCommSemiring \u2264\n    (\u2a05 J, \u2a05 (h : J \u2208 I.minimalPrimes), J.primeHeight) + \u2a06 p, @nonnegRingKrullDim (R \u29f8 \u2191p) (Quotient.commSemiring \u2191p)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/1502d6a0198864ee7092a76ab022e8ad69a92f4b/Mathlib/RingTheory/CohenMacaulay/Catenary.lean#L422"
      },
      "metadata": {
        "blame_email_hash": "4351a1f9903a",
        "blame_date": "2025-06-14T19:45:16+08:00",
        "inclusion_date": "2025-06-17T03:04:15.410526+00:00"
      },
      "id": "76f8e62ce78a09a0bc8db3cc15d81bf0dc4e5db25343d8a2486313749d8048d1"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 293,
        "start_column": 8,
        "end_line": 293,
        "end_column": 13
      },
      "debug_info": {
        "goal": "R : Type ?u.27608\ninst\u271d : CommRing R\n\u03b9 : Type\nI : \u03b9 \u2192 Ideal R\n\u22a2 \u2200 a \u2208 \u2a05 i, I i, (Pi.ringHom fun i => Quotient.mk (I i)) a = 0",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L293"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "de993a4776c20c764cf5fd825b849b27f5b2b91f66f96e12380f5b9c37ff9ae8"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/CoreInteractionPhase.lean",
        "start_line": 266,
        "start_column": 70,
        "end_line": 266,
        "end_column": 75
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2077 : Field L\ninst\u271d\u2076 : Fintype L\ninst\u271d\u2075 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2074 : Field \ud835\udd3dq\ninst\u271d\u00b3 : Fintype \ud835\udd3dq\ninst\u271d\u00b2 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b9 : NeZero r\n\u2113 \ud835\udce1 : \u2115\ninst\u271d : NeZero \u2113\n\ud835\udcd1 : Fin 2 \u21aa L\ni : Fin \u2113\nh : \u21a5(restrictDegree (Fin (\u2113 - \u2191i.castSucc)) L 1)\nh_eq : MvPolynomial (Fin (\u2113 - \u2191i.castSucc - 1 + 1)) L = MvPolynomial (Fin (\u2113 - \u2191i.castSucc)) L\nh_le :\n  (\u2211 i_1 \u2208 Fintype.piFinset fun i => Finset.map \ud835\udcd1 univ,\n        Polynomial.map (MvPolynomial.eval (i_1 \u2218 id)) ((finSuccEquivNth L 0) (h_eq.mpr \u2191h))).degree \u2264\n    (Fintype.piFinset fun i => Finset.map \ud835\udcd1 univ).sup fun b =>\n      (Polynomial.map (MvPolynomial.eval (b \u2218 id)) ((finSuccEquivNth L 0) (h_eq.mpr \u2191h))).degree\nx : Fin (\u2113 - \u2191i - 1) \u2192 L\nhx : \u2200 (a : Fin (\u2113 - \u2191i - 1)), \u2203 a_1, \ud835\udcd1 a_1 = x a\n\u22a2 0 < \u2113 - \u2191i.castSucc",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/CoreInteractionPhase.lean#L266"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "a9f5957ee42073762186115fa76f275ebfcb6fc9d48b59ff81262d943005cf14"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "master",
        "commit": "f407455715f319b6e43dcc840c47e1b881281964",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PhysLean/StatisticalMechanics/CanonicalEnsemble/Finite.lean",
        "start_line": 349,
        "start_column": 71,
        "end_line": 349,
        "end_column": 76
      },
      "debug_info": {
        "goal": "\u03b9 : Type\n\ud835\udcd2 : FiniteCanonicalEnsemble \u03b9\ninst\u271d : Fintype \u03b9\nn : \u2115\nT : Temperature\n\u22a2 FiniteCanonicalEnsemble.helmholtzFreeEnergy (Fin n \u2192 \u03b9) (FiniteCanonicalEnsemble.nsmul \u03b9 n \ud835\udcd2) Pi.instFintype T =\n    \u2191n * FiniteCanonicalEnsemble.helmholtzFreeEnergy \u03b9 \ud835\udcd2 inst\u271d T",
        "url": "https://github.com/HEPLean/PhysLean/blob/f407455715f319b6e43dcc840c47e1b881281964/PhysLean/StatisticalMechanics/CanonicalEnsemble/Finite.lean#L349"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-07-10T18:59:21+00:00",
        "inclusion_date": "2025-07-12T00:25:09.033847+00:00"
      },
      "id": "0d5dbd808f30c7ef77ddf08187e04b19cfede3a116702523f97429be892aab9c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 785,
        "start_column": 51,
        "end_line": 785,
        "end_column": 56
      },
      "debug_info": {
        "goal": "u : \u2115 \u2192 \u211a\nh\u2080 : \u2200 (n : \u2115), u (n + 1) = u n + 1\nh\u2081 : \u2211 k \u2208 Finset.range 98, u k.succ = 137\n\u22a2 \u2211 k \u2208 Finset.range 49, u (2 * k.succ) = 93",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L785"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "d62a366f6f30afdd29da7773737321a121cb642ce5ac6c64e46d128a521eb3ee"
    },
    {
      "repo": {
        "remote": "https://github.com/cmu-l3/llmlean",
        "branch": "kimina-pr",
        "commit": "126a6b2af37727c4d81bb49f6af6b354a380145e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LLMleanTest/Examples2.lean",
        "start_line": 54,
        "start_column": 2,
        "end_line": 54,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\nf : \u03b1 \u2192 \u03b2\ns t : Set \u03b1\nu v : Set \u03b2\n\u22a2 f '' s \\ f '' t \u2286 f '' (s \\ t)",
        "url": "https://github.com/cmu-l3/llmlean/blob/126a6b2af37727c4d81bb49f6af6b354a380145e/LLMleanTest/Examples2.lean#L54"
      },
      "metadata": {
        "blame_email_hash": "3ab0971ac342",
        "blame_date": "2024-07-23T17:17:09-04:00",
        "inclusion_date": "2025-06-11T03:39:01.065377+00:00"
      },
      "id": "9520f4f052a352102e0332378e5a69c9d10d13a903476803037264bc4a77a227"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_20.lean",
        "start_line": 96,
        "start_column": 47,
        "end_line": 96,
        "end_column": 52
      },
      "debug_info": {
        "goal": "n : \u2115\nhn : 1 \u2264 n\na : { x // x \u2208 Finset.Icc 1 n } \u2192 \u211d\nhpos : \u2200 (i : { x // x \u2208 Finset.Icc 1 n }), 0 < a i\n\u22a2 let harmonic := \u2191n / \u2211 i, 1 / a i;\n  let geometric := (\u220f i, a i) ^ (1 / \u2191n);\n  let arithmetic := (\u2211 i, a i) / \u2191n;\n  let all_equal := \u2200 (i : { x // x \u2208 Finset.Icc 1 n }), a i = a \u27e81, \u22ef\u27e9;\n  harmonic \u2264 geometric \u2227\n    geometric \u2264 arithmetic \u2227 (harmonic = geometric \u2194 all_equal) \u2227 (geometric = arithmetic \u2194 all_equal)",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_20.lean#L96"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2024-10-06T12:13:38+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "26d80e60c96603b4923e7fd23bc26ffa9cb0966d9a2b6e9772acbf3ab979d0da"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/10FunctionsAndOperators.lean",
        "start_line": 247,
        "start_column": 99,
        "end_line": 247,
        "end_column": 104
      },
      "debug_info": {
        "goal": "m : Type u_4\nn : Type u_5\ninst\u271d\u00b3 : Fintype m\ninst\u271d\u00b2 : Fintype n\ninst\u271d\u00b9 : DecidableEq m\ninst\u271d : DecidableEq n\nA : Matrix m n \u211d\n\u22a2 \u2016A\u2016 = \u2191(NNReal.sqrt (Finset.univ.sup fun i => \u27e8\u22ef.eigenvalues i, \u22ef\u27e9))",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/10FunctionsAndOperators.lean#L247"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2025-08-03T00:28:28+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "e4c51bb661ae5f42a903768bf35fc9e967968ef2011e7c1da564f9ebc11f2d6a"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 hj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 8 - 1, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "f1f835af412ae1808f2381cfd6f798b1fc0fc43b42152709891c9eeaea4a3a77"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "D-provlogic",
        "commit": "502486d0cdcfe147471cfb5fb9a7145b41e37f87",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/D/Completeness.lean",
        "start_line": 67,
        "start_column": 56,
        "end_line": 67,
        "end_column": 61
      },
      "debug_info": {
        "goal": "T : ArithmeticTheory\ninst\u271d\u00b2 : Theory.\u0394\u2081 T\ninst\u271d\u00b9 : \ud835\udddc\ud835\udeba\u2081 \u2aaf T\ninst\u271d : \u2115 \u22a7\u2098* T\nU : ArithmeticTheory\neU : T + \u2191(LO.FirstOrder.ArithmeticTheory.LocalReflection T inst\u271d\u00b2 (Arithmetic.Hierarchy \ud835\udeba 1)) = U\nA : Modal.Formula \u2115\nh : \u2200 (f : T.StandardRealization), U \u22a2!. \u2191f A\nf : T.StandardRealization\nV : ArithmeticTheory := T + \u2191(\u22c3 f, {x | x = \u2191f (\u223c\u25a1\u22a5) \u2228 x = \u2191f (\u25a1\u25a1Formula.atom 0 \u279d \u25a1Formula.atom 0)})\n\u03c3 : Sentence \u2112\u2092\u1d63\nh\u03c3 : \u03c3 \u2208 Arithmetic.Hierarchy \ud835\udeba 1\n\u03c0 : ArithmeticSentence\nh\u03c0\u2081 : Arithmetic.Hierarchy \ud835\udeba 1 \u03c0\nh\u03c0\u2082 :\n  V \u22a2!.\n    \u223cTheory.provabilityPred T \u22a5 \u22cf (Theory.provabilityPred T (Theory.provabilityPred T \u03c0) \u279d Theory.provabilityPred T \u03c0) \u279d\n      Theory.provabilityPred T \u03c3 \u279d \u03c3\ng : T.StandardRealization := { val := fun x => \u03c0 }\n\u22a2 V \u22a2!. \u2191g (\u25a1\u25a1Formula.atom 0 \u279d \u25a1Formula.atom 0)",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/502486d0cdcfe147471cfb5fb9a7145b41e37f87/Foundation/ProvabilityLogic/D/Completeness.lean#L67"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-09-11T00:07:47+09:00",
        "inclusion_date": "2025-09-12T03:28:19.860470+00:00"
      },
      "id": "2c6668a25ed6e6f5a477612c6a04a046bbda51e881e72f780221a007295128c3"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "ineq_6_3_30",
        "commit": "50d8e9adca7e109fca68ac5572b4e515a70ae9a0",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainTileCount.lean",
        "start_line": 507,
        "start_column": 33,
        "end_line": 507,
        "end_column": 38
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Finset (\ud835\udd13 X)\n\u03d1 : \u0398 X\nN : \u2115\nhS0 : defaultS X \u2260 0\nL : Grid X\nhL : L \u2208 @Antichain.\ud835\udcdb' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N\np' : { x // x \u2208 @Antichain.\ud835\udd04' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N }\nhp' : L \u2264 \ud835\udcd8 \u2191p'\n\u22a2 @Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N hS0 L hL \u2264 \ud835\udcd8 \u2191p'",
        "url": "https://github.com/fpvandoorn/carleson/blob/50d8e9adca7e109fca68ac5572b4e515a70ae9a0/Carleson/Antichain/AntichainTileCount.lean#L507"
      },
      "metadata": {
        "blame_email_hash": "b2f50b2f722a",
        "blame_date": "2025-07-02T17:48:35+02:00",
        "inclusion_date": "2025-07-03T03:51:24.001986+00:00"
      },
      "id": "3ad15c324187820003dfde1a01aee491aff8e98b1885590ac8f488727041e3b1"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-hardly-ramified",
        "commit": "60be88a841fa232b563ea16600befe5efbfb3d07",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FLT/HaarMeasure/HaarChar/AdeleRing.lean",
        "start_line": 139,
        "start_column": 27,
        "end_line": 139,
        "end_column": 32
      },
      "debug_info": {
        "goal": "K : Type u_1\nL : Type u_2\ninst\u271d\u00b2\u2074 : Field K\ninst\u271d\u00b2\u00b3 : Field L\ninst\u271d\u00b2\u00b2 : Algebra K L\ninst\u271d\u00b2\u00b9 : NumberField K\ninst\u271d\u00b2\u2070 : NumberField L\nV : Type u_3\ninst\u271d\u00b9\u2079 : AddCommGroup V\ninst\u271d\u00b9\u2078 : Module L V\ninst\u271d\u00b9\u2077 : Module K V\ninst\u271d\u00b9\u2076 : IsScalarTower K L V\ninst\u271d\u00b9\u2075 : FiniteDimensional L V\ninst\u271d\u00b9\u2074 : FiniteDimensional K V\nB : Type u_4\ninst\u271d\u00b9\u00b3 : Ring B\ninst\u271d\u00b9\u00b2 : Algebra K B\ninst\u271d\u00b9\u00b9 : FiniteDimensional K B\nR : Type u_5\ninst\u271d\u00b9\u2070 : CommRing R\nA : Type u_6\ninst\u271d\u2079 : CommRing A\ninst\u271d\u2078 : Algebra R A\ninst\u271d\u2077 : TopologicalSpace A\ninst\u271d\u2076 : IsTopologicalRing A\nM : Type u_7\nN : Type u_8\ninst\u271d\u2075 : AddCommGroup M\ninst\u271d\u2074 : Module R M\ninst\u271d\u00b3 : AddCommGroup N\ninst\u271d\u00b2 : Module R N\ninst\u271d\u00b9 : Module.Finite R M\ninst\u271d : Module.Finite R N\n\u03c6 : M \u2243\u2097[R] N\n\u22a2 Continuous (TensorProduct.RightActions.LinearEquiv.baseChange R M N A \u03c6).invFun",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/60be88a841fa232b563ea16600befe5efbfb3d07/FLT/HaarMeasure/HaarChar/AdeleRing.lean#L139"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-06-07T23:01:07+01:00",
        "inclusion_date": "2025-09-18T04:05:26.332171+00:00"
      },
      "id": "8a3e40586268e104592a878c696a42ea0ce286ad6ef2e84456836323e92ecb47"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "9e8de5716b162ec8983a89711a186d13ff871c22",
        "lean_version": "v4.24.0-rc1"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 64,
        "start_column": 12,
        "end_line": 64,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case snd\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : @MyProd (\u03b1 \u2192 \u03b2) \u03b3\n\u22a2 @MyProd.snd (\u03b1 \u2192 \u03b2) \u03b3 p = @MyProd.snd (\u03b1 \u2192 \u03b2) \u03b3 q",
        "url": "https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/AesopTest/ExtScript.lean#L64"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-09-16T04:23:04.307662+00:00"
      },
      "id": "f041fce9e3c64c4b5dcee0531561ab7fc88eb357ec931b87f41b22d1a28a9e14"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "99a77d19845fb8083456331fd1256bf35a48f60c",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 60,
        "start_column": 4,
        "end_line": 60,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case intro.intro.intro.refine_3\nG : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(A ^ 2).card \u2264 K * \u2191A.card\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191A.card / (2 * K) \u2264 \u2191(MulOpposite.op g \u2022 A \u2229 A).card}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191S.card \u2264 K ^ 2 * \u2191A.card\nF : Finset G\nhFA : F \u2286 A\nhFcard : \u2191F.card \u2264 2 * K\nhASF : A \u2286 S * F\n\u22a2 \u2203 a \u2208 A, \u2191A.card / (2 * K) \u2264 \u2191(A \u2229 MulOpposite.op a \u2022 S ^ 2).card",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/99a77d19845fb8083456331fd1256bf35a48f60c/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L60"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-09-08T22:03:06.847248+00:00"
      },
      "id": "5d06adb692891a5b0663582de1c49f93422258f589770d41e07eb8422d1df7b2"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "b5313cfd2308dfb6b98d7321bf26243984e4d291",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 7232,
        "start_column": 63,
        "end_line": 7232,
        "end_column": 68
      },
      "debug_info": {
        "goal": "\u03bd : \u211d \u2192 \u211d\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\nc_close : \u211d\nc_close_pos : c_close > 0\nh_close :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 (\u03b5 : \u211d),\n        0 < \u03b5 \u2192 \u03b5 < 1 \u2192 2 < X * \u03b5 \u2192 \u2016SmoothedChebyshev \u03bd \u03b5 X - \u2191(ChebyshevPsi X)\u2016 \u2264 c_close * \u03b5 * X * Real.log X\n\u03b5_main C_main : \u211d\n\u03b5_main_pos : 0 < \u03b5_main\nC_main_pos : 0 < C_main\nh_main : \u2200 \u03b5 \u2208 Ioo 0 \u03b5_main, \u2016MellinTransform (fun x => \u2191(Smooth1 \u03bd \u03b5 x)) 1 - 1\u2016 \u2264 C_main * \u03b5\nA C_bnd : \u211d\nC_bnd_pos : 0 < C_bnd\nA_in_Ioc : A \u2208 Ioc 0 (1 / 2)\nzeta_bnd : LogDerivZetaHasBound A C_bnd\nholo1 :\n  \u2200 (T : \u211d),\n    3 \u2264 T \u2192\n      HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (Icc (1 - A / Real.log T ^ 9) 2 \u00d7\u2102 Icc (-T) T \\ {1})\n\u03c3\u2082' : \u211d\n\u03c3\u2082 : \u211d := max \u03c3\u2082' (1 / 2)\n\u03c3\u2082_pos : 0 < \u03c3\u2082\n\u03c3\u2082_lt_one : \u03c3\u2082 < 1\nholo2 : HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (uIcc \u03c3\u2082 2 \u00d7\u2102 uIcc (-3) 3 \\ {1})\nc\u2081 : \u211d\nc\u2081pos : c\u2081 > 0\nhc\u2081 : \u2200 (\u03b5 : \u211d), 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2081 \u03bd \u03b5 X T\u2016 \u2264 c\u2081 * X * Real.log X / (\u03b5 * T)\nc\u2082 : \u211d\nc\u2082pos : 0 < c\u2082\nhc\u2082 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2082 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2082 * X / (\u03b5 * T)\nc\u2083 : \u211d\nc\u2083pos : 0 < c\u2083\nhc\u2083 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2083 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2083 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2085 : \u211d\nc\u2085pos : 0 < c\u2085\nhc\u2085 : \u2200 (X : \u211d), 3 < X \u2192 \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2016I\u2085 \u03bd \u03b5 X \u03c3\u2082\u2016 \u2264 c\u2085 * X ^ \u03c3\u2082 / \u03b5\nc\u2087 : \u211d\nc\u2087pos : 0 < c\u2087\nhc\u2087 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2087 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2087 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2088 : \u211d\nc\u2088pos : 0 < c\u2088\nhc\u2088 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2088 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2088 * X / (\u03b5 * T)\nc\u2089 : \u211d\nc\u2089pos : c\u2089 > 0\nhc\u2089 : \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2089 \u03bd \u03b5 X T\u2016 \u2264 c\u2089 * X * Real.log X / (\u03b5 * T)\nc\u2084 : \u211d\nc\u2084pos : 0 \u2264 c\u2084\nTlb\u2084 : \u211d\nTlb\u2084bnd : 3 < Tlb\u2084\nhc\u2084 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              Tlb\u2084 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2084 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 \u2264 c\u2084 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2086 : \u211d\nc\u2086pos : 0 \u2264 c\u2086\nTlb\u2086 : \u211d\nTlb\u2086bnd : 3 < Tlb\u2086\nhc\u2086 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              Tlb\u2086 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2086 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 \u2264 c\u2086 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\n\u03b5x : \u211d \u2192 \u211d := fun x => Real.exp (-c * Real.log x ^ (1 / 10))\nTx : \u211d \u2192 \u211d := fun x => Real.exp (2 * c * Real.log x ^ (1 / 10))\neventually_\u03b5x_lt_one : \u2200\u1da0 (x : \u211d) in atTop, \u03b5x x < 1\neventually_2_lt : \u2200\u1da0 (x : \u211d) in atTop, 2 < x * \u03b5x x\n\u22a2 \u2200\u1da0 (x : \u211d) in atTop, 3 < Tx x",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/b5313cfd2308dfb6b98d7321bf26243984e4d291/PrimeNumberTheoremAnd/MediumPNT.lean#L7232"
      },
      "metadata": {
        "blame_email_hash": "bee09f470e62",
        "blame_date": "2025-07-19T18:28:56+01:00",
        "inclusion_date": "2025-07-22T23:27:42.532828+00:00"
      },
      "id": "4a9c1e4061828db99b2c9d1559ad7400d05b9584b07ff402e48a6abcbc0e6f77"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "LeanByExample/Tactic/Sorry.lean",
        "start_line": 12,
        "start_column": 2,
        "end_line": 12,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 FermatLastTheorem",
        "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Tactic/Sorry.lean#L12"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2024-01-08T13:38:12+09:00",
        "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
      },
      "id": "c1a5136e850b138a20962c448ffd3c5e1cfdf7d06860186676464fba8bbbf968"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/MoreRuzsaDist.lean",
        "start_line": 1504,
        "start_column": 8,
        "end_line": 1504,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case bc.h.e_11\nm : \u2115\nhm : m > 0\nG : Fin (m + 1) \u2192 Type u_8\nhG : (i : Fin (m + 1)) \u2192 MeasurableSpace (G i)\nhGs : \u2200 (i : Fin (m + 1)), MeasurableSingletonClass (G i)\nhGa : (i : Fin (m + 1)) \u2192 AddCommGroup (G i)\nhGcount : (i : Fin (m + 1)) \u2192 Fintype (G i)\n\u03c6 : (i : Fin m) \u2192 G i.succ \u2192+ G i.castSucc\n\u03c0 : (d : Fin (m + 1)) \u2192 G \u2191m \u2192+ G d\nh\u03c00 : \u03c0 0 = 0\nhcomp : \u2200 (i : Fin m), \u21d1(\u03c0 i.castSucc) = \u21d1(\u03c6 i) \u2218 \u21d1(\u03c0 i.succ)\n\u03a9 : Type u_9\nh\u03a9 : MeasureSpace \u03a9\nX : Fin m \u2192 \u03a9 \u2192 G \u2191m\nhX : \u2200 (i : Fin m), Measurable (X i)\nh_indep : iIndepFun X \u2119\nthis\u271d : IsProbabilityMeasure \u2119\nthis : NeZero m\nf : Fin m \u2192 \u211d :=\n  fun i => I[\u2211 i', X i' : fun \u03c9 i' => (\u03c0 i.succ) (X i' \u03c9)|\u27e8\u21d1(\u03c0 i.succ) \u2218 \u2211 i', X i', fun \u03c9 i' => (\u03c0 \u2191\u2191i) (X i' \u03c9)\u27e9]\nhf : \u2200 (i : Fin m), 0 \u2264 f i\nF : G 1 \u2192 G 1 \u00d7 (Fin m \u2192 G 0) := fun x => (x, fun x => 0)\nhF : Injective F\n\u22a2 HEq (fun x => (\u2211 x_1, (\u03c0 1) (X x_1 x), fun x => 0))\n    (\u27e8fun x => \u2211 x_1, (\u03c0 (Fin.succ 0)) (X x_1 x), fun \u03c9 i' => (\u03c0 \u21910) (X i' \u03c9)\u27e9)",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L1504"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-10-14T04:44:11+00:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "7249c84cd6c3a75dd2d0ba153f332dc341ed72e13fe5478ca8df0d5bbf887cc9"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "fae_PR_IsDiscrete",
        "commit": "2c02013936b32937da9ec346ee96411bf8071c48",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/Algebra/GroupWithZero/Range.lean",
        "start_line": 248,
        "start_column": 14,
        "end_line": 248,
        "end_column": 19
      },
      "debug_info": {
        "goal": "A : Type u_1\nB : Type u_2\nF : Type u_3\ninst\u271d\u2074 : FunLike F A B\nf : F\ninst\u271d\u00b3 : GroupWithZero B\ninst\u271d\u00b2 : MonoidWithZero A\ninst\u271d\u00b9 : Nontrivial A\ninst\u271d : MonoidWithZeroHomClass F A B\nh : \u2200 {a : A}, f a \u2260 0 \u2194 a \u2260 0\n\u22a2 0\u207b\u00b9 = 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/2c02013936b32937da9ec346ee96411bf8071c48/Mathlib/Algebra/GroupWithZero/Range.lean#L248"
      },
      "metadata": {
        "blame_email_hash": "0a3759cf16cc",
        "blame_date": "2025-06-12T16:57:47+02:00",
        "inclusion_date": "2025-06-13T03:10:27.835467+00:00"
      },
      "id": "92b2a511911c7629e636339f5a7eb4c9d93153b14b61646a9d4ed584358ef6fc"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 308,
        "start_column": 2,
        "end_line": 308,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommRing R\n\u03b9 : Type\nI : \u03b9 \u2192 Ideal R\n\u22a2 Injective \u21d1(@Ideal.chineseMap R inst\u271d \u03b9 I)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L308"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "e7181c4b071cbe1d8e12b7f95000295b58ac15e33beea09cfe8672bdb7d01cfa"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/CoreInteractionPhase.lean",
        "start_line": 273,
        "start_column": 4,
        "end_line": 273,
        "end_column": 9
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2077 : Field L\ninst\u271d\u2076 : Fintype L\ninst\u271d\u2075 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2074 : Field \ud835\udd3dq\ninst\u271d\u00b3 : Fintype \ud835\udd3dq\ninst\u271d\u00b2 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b9 : NeZero r\n\u2113 \ud835\udce1 : \u2115\ninst\u271d : NeZero \u2113\n\ud835\udcd1 : Fin 2 \u21aa L\ni : Fin \u2113\nh : \u21a5(restrictDegree (Fin (\u2113 - \u2191i.castSucc)) L 1)\nh_eq : MvPolynomial (Fin (\u2113 - \u2191i.castSucc - 1 + 1)) L = MvPolynomial (Fin (\u2113 - \u2191i.castSucc)) L\nh_le :\n  (\u2211 i_1 \u2208 Fintype.piFinset fun i => Finset.map \ud835\udcd1 univ,\n        Polynomial.map (MvPolynomial.eval (i_1 \u2218 id)) ((finSuccEquivNth L 0) (h_eq.mpr \u2191h))).degree \u2264\n    (Fintype.piFinset fun i => Finset.map \ud835\udcd1 univ).sup fun b =>\n      (Polynomial.map (MvPolynomial.eval (b \u2218 id)) ((finSuccEquivNth L 0) (h_eq.mpr \u2191h))).degree\nx : Fin (\u2113 - \u2191i - 1) \u2192 L\nhx : \u2200 (a : Fin (\u2113 - \u2191i - 1)), \u2203 a_1, \ud835\udcd1 a_1 = x a\nm : Fin (\u2113 - \u2191i.castSucc) \u2192\u2080 \u2115\na : m \u2208 (\u2191h).support\n\u22a2 m \u27e80, \u22ef\u27e9 \u2264 1",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/CoreInteractionPhase.lean#L273"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "92bfad36aa988a7e40a77f895bac78043f25f6fd6ae5ecf482711402b14f3832"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "SpaceDocs",
        "commit": "dc122ed7c5705e99a9ea5e7c635dda37d091d8e7",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PhysLean/StatisticalMechanics/CanonicalEnsemble/Basic.lean",
        "start_line": 300,
        "start_column": 4,
        "end_line": 300,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case refine_1\n\u03b9 : Type\ninst\u271d : MeasurableSpace \u03b9\n\ud835\udcd2 : CanonicalEnsemble \u03b9 inst\u271d\nT : Temperature\nhT : \u2191T \u2260 0\nh0 :\n  \u2200 (i : \u03b9),\n    HasFDerivAt (fun T => -(1 / (kB * T)) * CanonicalEnsemble.energy \u03b9 inst\u271d \ud835\udcd2 i)\n      (fderiv \u211d (fun T => -(1 / (kB * T)) * CanonicalEnsemble.energy \u03b9 inst\u271d \ud835\udcd2 i) T.toReal) T.toReal\nF' : \u211d \u2192 \u03b9 \u2192 \u211d \u2192L[\u211d] \u211d :=\n  fun T i =>\n    exp (-(1 / (kB * T)) * CanonicalEnsemble.energy \u03b9 inst\u271d \ud835\udcd2 i) \u2022\n      fderiv \u211d (fun T => -(1 / (kB * T)) * CanonicalEnsemble.energy \u03b9 inst\u271d \ud835\udcd2 i) T\nh :\n  \u2200 (i : \u03b9),\n    HasFDerivAt (fun T => exp (-(1 / (kB * T)) * CanonicalEnsemble.energy \u03b9 inst\u271d \ud835\udcd2 i)) (F' T.toReal i) T.toReal\nF : \u211d \u2192 \u03b9 \u2192 \u211d := fun T i => exp (-(1 / (kB * T)) * CanonicalEnsemble.energy \u03b9 inst\u271d \ud835\udcd2 i)\n\u22a2 HasFDerivAt (fun T => \u222b (i : \u03b9), F T i \u2202CanonicalEnsemble.\u03bc \u03b9 inst\u271d \ud835\udcd2)\n    (\u222b (i : \u03b9), F' T.toReal i \u2202CanonicalEnsemble.\u03bc \u03b9 inst\u271d \ud835\udcd2) T.toReal",
        "url": "https://github.com/HEPLean/PhysLean/blob/dc122ed7c5705e99a9ea5e7c635dda37d091d8e7/PhysLean/StatisticalMechanics/CanonicalEnsemble/Basic.lean#L300"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-07-10T18:59:21+00:00",
        "inclusion_date": "2025-07-12T00:18:46.378762+00:00"
      },
      "id": "9db735db21d38fbc0caf8e684d81b951c0326ef331ed885a1dcc408f97f67a13"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 951,
        "start_column": 38,
        "end_line": 951,
        "end_column": 43
      },
      "debug_info": {
        "goal": "a : \u2115 \u2192 NNReal\nn : \u2115\nh\u2080 : \u2211 x \u2208 Finset.range n, a x = \u2191n\n\u22a2 \u220f x \u2208 Finset.range n, a x \u2264 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L951"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "2aa78a41ee4f8904c2c5d4621c78d401eb7f23a283ddcf3a2bc898e93bf691dd"
    },
    {
      "repo": {
        "remote": "https://github.com/cmu-l3/llmlean",
        "branch": "kimina-pr",
        "commit": "126a6b2af37727c4d81bb49f6af6b354a380145e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LLMleanTest/Examples2.lean",
        "start_line": 57,
        "start_column": 2,
        "end_line": 57,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\nf : \u03b1 \u2192 \u03b2\ns t : Set \u03b1\nu v : Set \u03b2\n\u22a2 f \u207b\u00b9' u \\ f \u207b\u00b9' v \u2286 f \u207b\u00b9' (u \\ v)",
        "url": "https://github.com/cmu-l3/llmlean/blob/126a6b2af37727c4d81bb49f6af6b354a380145e/LLMleanTest/Examples2.lean#L57"
      },
      "metadata": {
        "blame_email_hash": "3ab0971ac342",
        "blame_date": "2024-07-23T17:17:09-04:00",
        "inclusion_date": "2025-06-11T03:39:01.065377+00:00"
      },
      "id": "76f45ce6c5c6da401edc981118a97a744d0add071cc0fe049b084b581f4e04c2"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_09.lean",
        "start_line": 27,
        "start_column": 2,
        "end_line": 27,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 \u2211' (n : \u2115+), 1 / \u2191\u2191n = Real.pi ^ 2 / 6",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_09.lean#L27"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2024-09-26T08:28:24+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "eec61a56e3828434756b7646657cac5e9ffa86fc4003d124f7da1c7157bd1d94"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/5SolutionsAndDecompositions.lean",
        "start_line": 187,
        "start_column": 4,
        "end_line": 187,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case right\nn : Type u_2\ninst\u271d\u00b9 : Fintype n\ninst\u271d : DecidableEq n\nA : Matrix n n \u211d\nhA : A.PosDef\n\u22a2 \u22ef.eigenvalues = \u22ef.eigenvalues ^ 2",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/5SolutionsAndDecompositions.lean#L187"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2025-05-08T01:07:44+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "6df98cf419fe84173513494edbc8d6b8c94ee082759aecb9446315cfe7cc1528"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 1 - 2, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "7866919956bea21f27eadf5c1c009558e99ca771dab48b0c9b59630270de39dd"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "D-provlogic",
        "commit": "502486d0cdcfe147471cfb5fb9a7145b41e37f87",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/D/Completeness.lean",
        "start_line": 68,
        "start_column": 8,
        "end_line": 68,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case d\u2082\nT : ArithmeticTheory\ninst\u271d\u00b2 : Theory.\u0394\u2081 T\ninst\u271d\u00b9 : \ud835\udddc\ud835\udeba\u2081 \u2aaf T\ninst\u271d : \u2115 \u22a7\u2098* T\nU : ArithmeticTheory\neU : T + \u2191(LO.FirstOrder.ArithmeticTheory.LocalReflection T inst\u271d\u00b2 (Arithmetic.Hierarchy \ud835\udeba 1)) = U\nA : Modal.Formula \u2115\nh : \u2200 (f : T.StandardRealization), U \u22a2!. \u2191f A\nf : T.StandardRealization\nV : ArithmeticTheory := T + \u2191(\u22c3 f, {x | x = \u2191f (\u223c\u25a1\u22a5) \u2228 x = \u2191f (\u25a1\u25a1Formula.atom 0 \u279d \u25a1Formula.atom 0)})\n\u03c3 : Sentence \u2112\u2092\u1d63\nh\u03c3 : \u03c3 \u2208 Arithmetic.Hierarchy \ud835\udeba 1\n\u03c0 : ArithmeticSentence\nh\u03c0\u2081 : Arithmetic.Hierarchy \ud835\udeba 1 \u03c0\nh\u03c0\u2082 :\n  V \u22a2!.\n    \u223cTheory.provabilityPred T \u22a5 \u22cf (Theory.provabilityPred T (Theory.provabilityPred T \u03c0) \u279d Theory.provabilityPred T \u03c0) \u279d\n      Theory.provabilityPred T \u03c3 \u279d \u03c3\ng : T.StandardRealization := { val := fun x => \u03c0 }\nthis : V \u22a2!. \u2191g (\u25a1\u25a1Formula.atom 0 \u279d \u25a1Formula.atom 0)\n\u22a2 \u2191V \u22a2! Theory.provabilityPred T (Theory.provabilityPred T \u03c0) \u279d Theory.provabilityPred T \u03c0",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/502486d0cdcfe147471cfb5fb9a7145b41e37f87/Foundation/ProvabilityLogic/D/Completeness.lean#L68"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-09-11T00:07:47+09:00",
        "inclusion_date": "2025-09-12T03:28:19.860470+00:00"
      },
      "id": "3594c16024ba6b9b9e928f294206ed38d2a09c0b0d564b0121dfe2ba7835b03e"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "ineq_6_3_30",
        "commit": "50d8e9adca7e109fca68ac5572b4e515a70ae9a0",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainTileCount.lean",
        "start_line": 515,
        "start_column": 68,
        "end_line": 515,
        "end_column": 73
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Finset (\ud835\udd13 X)\n\u03d1 : \u0398 X\nN : \u2115\nhS0 : defaultS X \u2260 0\nL : Grid X\nhL : L \u2208 @Antichain.\ud835\udcdb' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N\np' : { x // x \u2208 @Antichain.\ud835\udd04' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N }\nhp' : L \u2264 \ud835\udcd8 \u2191p'\nhle : @Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N hS0 L hL \u2264 \ud835\udcd8 \u2191p'\nhL' :\n  @Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N hS0 L hL \u2209\n    @Antichain.\ud835\udcdb X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N\n\u22a2 \u2203 p, \ud835\udcd8 \u2191p \u2264 @Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N hS0 L hL",
        "url": "https://github.com/fpvandoorn/carleson/blob/50d8e9adca7e109fca68ac5572b4e515a70ae9a0/Carleson/Antichain/AntichainTileCount.lean#L515"
      },
      "metadata": {
        "blame_email_hash": "b2f50b2f722a",
        "blame_date": "2025-07-02T17:48:35+02:00",
        "inclusion_date": "2025-07-03T03:51:24.001986+00:00"
      },
      "id": "dea4da203812b2a2cbcc45c6f2d695605036b58de41c12b05aecfc4ded93a795"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-hardly-ramified",
        "commit": "60be88a841fa232b563ea16600befe5efbfb3d07",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FLT/HaarMeasure/HaarChar/AdeleRing.lean",
        "start_line": 147,
        "start_column": 2,
        "end_line": 147,
        "end_column": 7
      },
      "debug_info": {
        "goal": "K : Type u_1\ninst\u271d\u2076 : Field K\ninst\u271d\u2075 : NumberField K\nV : Type u_3\ninst\u271d\u2074 : AddCommGroup V\ninst\u271d\u00b3 : Module K V\ninst\u271d\u00b2 : FiniteDimensional K V\n\u03c6 : V \u2243\u2097[K] V\ninst\u271d\u00b9 : MeasurableSpace (TensorProduct K V (AdeleRing (RingOfIntegers K) K))\ninst\u271d : BorelSpace (TensorProduct K V (AdeleRing (RingOfIntegers K) K))\n\u22a2 addEquivAddHaarChar\n      (ContinuousLinearEquiv.toContinuousAddEquiv\n        (@ContinuousLinearEquiv.baseChange K Field.toEuclideanDomain.toCommRing (AdeleRing (RingOfIntegers K) K)\n          (AdeleRing.instCommRing (RingOfIntegers K) K) (AdeleRing.instAlgebraRingOfIntegers_fLT K K)\n          (AdeleRing.instTopologicalSpace (RingOfIntegers K) K) \u22ef V V inst\u271d\u2074 inst\u271d\u00b3 inst\u271d\u2074 inst\u271d\u00b3 inst\u271d\u00b2 inst\u271d\u00b2 \u03c6)) =\n    1",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/60be88a841fa232b563ea16600befe5efbfb3d07/FLT/HaarMeasure/HaarChar/AdeleRing.lean#L147"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-06-07T23:01:07+01:00",
        "inclusion_date": "2025-09-18T04:05:26.332171+00:00"
      },
      "id": "5b825d08bdd54828ffeb36f6aa646062ac48d4b4236787c094ca23c54da12830"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "9e8de5716b162ec8983a89711a186d13ff871c22",
        "lean_version": "v4.24.0-rc1"
      },
      "location": {
        "path": "AesopTest/SplitScript.lean",
        "start_line": 27,
        "start_column": 12,
        "end_line": 27,
        "end_column": 17
      },
      "debug_info": {
        "goal": "P A B : Prop\nh : P\n\u22a2 A",
        "url": "https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/AesopTest/SplitScript.lean#L27"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-05-31T19:36:28+02:00",
        "inclusion_date": "2025-09-16T04:23:04.307662+00:00"
      },
      "id": "a9ec946db926e537873a6827de4f0c4ebc616c465186f45468a6912a53ec307e"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 24,
        "start_column": 6,
        "end_line": 24,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case refine_2\n\u03b9 : Type u_2\nG : \u03b9 \u2192 Type u_3\ninst\u271d\u00b9 : Fintype \u03b9\ninst\u271d : (i : \u03b9) \u2192 Group (G i)\nA : (i : \u03b9) \u2192 Set (G i)\nK : \u03b9 \u2192 \u211d\nhA : \u2200 (i : \u03b9), IsApproximateSubgroup (K i) (A i)\nF : (i : \u03b9) \u2192 Finset (G i)\nhF : \u2200 (i : \u03b9), \u2191(#(F i)) \u2264 K i\nhFS : \u2200 (i : \u03b9), A i ^ 2 \u2286 \u2191(F i) \u2022 A i\n\u22a2 Set.univ.pi A ^ 2 \u2286 \u2191(Fintype.piFinset F) \u2022 Set.univ.pi A",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L24"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "edd13d8191b120ebea432442b2ba6f559c7fac2d3401253ce8d4c99e15ebfac8"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "b5313cfd2308dfb6b98d7321bf26243984e4d291",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 7211,
        "start_column": 23,
        "end_line": 7211,
        "end_column": 28
      },
      "debug_info": {
        "goal": "\u03bd : \u211d \u2192 \u211d\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\nc_close : \u211d\nc_close_pos : c_close > 0\nh_close :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 (\u03b5 : \u211d),\n        0 < \u03b5 \u2192 \u03b5 < 1 \u2192 2 < X * \u03b5 \u2192 \u2016SmoothedChebyshev \u03bd \u03b5 X - \u2191(ChebyshevPsi X)\u2016 \u2264 c_close * \u03b5 * X * Real.log X\n\u03b5_main C_main : \u211d\n\u03b5_main_pos : 0 < \u03b5_main\nC_main_pos : 0 < C_main\nh_main : \u2200 \u03b5 \u2208 Ioo 0 \u03b5_main, \u2016MellinTransform (fun x => \u2191(Smooth1 \u03bd \u03b5 x)) 1 - 1\u2016 \u2264 C_main * \u03b5\nA C_bnd : \u211d\nC_bnd_pos : 0 < C_bnd\nA_in_Ioc : A \u2208 Ioc 0 (1 / 2)\nzeta_bnd : LogDerivZetaHasBound A C_bnd\nholo1 :\n  \u2200 (T : \u211d),\n    3 \u2264 T \u2192\n      HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (Icc (1 - A / Real.log T ^ 9) 2 \u00d7\u2102 Icc (-T) T \\ {1})\n\u03c3\u2082' : \u211d\n\u03c3\u2082 : \u211d := \u22ef\n\u03c3\u2082_pos : 0 < \u03c3\u2082\n\u03c3\u2082_lt_one : \u03c3\u2082 < 1\nholo2 : HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (uIcc \u03c3\u2082 2 \u00d7\u2102 uIcc (-3) 3 \\ {1})\nc\u2081 : \u211d\nc\u2081pos : c\u2081 > 0\nhc\u2081 : \u2200 (\u03b5 : \u211d), 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2081 \u03bd \u03b5 X T\u2016 \u2264 c\u2081 * X * Real.log X / (\u03b5 * T)\nc\u2082 : \u211d\nc\u2082pos : 0 < c\u2082\nhc\u2082 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2082 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2082 * X / (\u03b5 * T)\nc\u2083 : \u211d\nc\u2083pos : 0 < c\u2083\nhc\u2083 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2083 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2083 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2085 : \u211d\nc\u2085pos : 0 < c\u2085\nhc\u2085 : \u2200 (X : \u211d), 3 < X \u2192 \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2016I\u2085 \u03bd \u03b5 X \u03c3\u2082\u2016 \u2264 c\u2085 * X ^ \u03c3\u2082 / \u03b5\nc\u2087 : \u211d\nc\u2087pos : 0 < c\u2087\nhc\u2087 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2087 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2087 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2088 : \u211d\nc\u2088pos : 0 < c\u2088\nhc\u2088 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2088 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2088 * X / (\u03b5 * T)\nc\u2089 : \u211d\nc\u2089pos : c\u2089 > 0\nhc\u2089 : \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2089 \u03bd \u03b5 X T\u2016 \u2264 c\u2089 * X * Real.log X / (\u03b5 * T)\nc\u2084 : \u211d\nc\u2084pos : 0 \u2264 c\u2084\nTlb\u2084 : \u211d\nTlb\u2084bnd : 3 < Tlb\u2084\nhc\u2084 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              Tlb\u2084 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2084 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 \u2264 c\u2084 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2086 : \u211d\nc\u2086pos : 0 \u2264 c\u2086\nTlb\u2086 : \u211d\nTlb\u2086bnd : 3 < Tlb\u2086\nhc\u2086 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              Tlb\u2086 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2086 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 \u2264 c\u2086 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc : \u211d := \u22ef\n\u22a2 0 < c",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/b5313cfd2308dfb6b98d7321bf26243984e4d291/PrimeNumberTheoremAnd/MediumPNT.lean#L7211"
      },
      "metadata": {
        "blame_email_hash": "bee09f470e62",
        "blame_date": "2025-07-19T18:28:56+01:00",
        "inclusion_date": "2025-07-22T23:27:42.532828+00:00"
      },
      "id": "776eb65bee6fc377b20a68c5d02c4fa79219c19672b9e8e024ec7fe7126afeec"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 50,
        "start_column": 77,
        "end_line": 50,
        "end_column": 82
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure \u2119\n\u22a2 I[\u2211 i, \u2211 j, \u2191\u2191i \u2022 Y (i, j) : \u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j)|\u2211 i, \u2211 j, Y (i, j)] \u2264 4 * \u2191p.m ^ 2 * p.\u03b7 * multiTau p \u03a9 h\u03a9 X",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L50"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-09-30T22:19:50+00:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "98735a10acb5a7bc5abf67cfa46478b3c359bf0d874a18624b81e3d09011393c"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "fae_PR_IsDiscrete",
        "commit": "2c02013936b32937da9ec346ee96411bf8071c48",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/Algebra/GroupWithZero/Range.lean",
        "start_line": 254,
        "start_column": 59,
        "end_line": 254,
        "end_column": 64
      },
      "debug_info": {
        "goal": "A : Type u_1\nB : Type u_2\nF : Type u_3\ninst\u271d\u2074 : FunLike F A B\nf : F\ninst\u271d\u00b3 : GroupWithZero B\ninst\u271d\u00b2 : MonoidWithZero A\ninst\u271d\u00b9 : Nontrivial A\ninst\u271d : MonoidWithZeroHomClass F A B\ny : B\n\u22a2 y \u2208 @MonoidHomWithZero.range\u2080 A B F inst\u271d\u2074 f inst\u271d\u00b3 \u2194 \u2203 a, f a \u2260 0 \u2227 \u2203 x, f a * y = f x",
        "url": "https://github.com/leanprover-community/mathlib4/blob/2c02013936b32937da9ec346ee96411bf8071c48/Mathlib/Algebra/GroupWithZero/Range.lean#L254"
      },
      "metadata": {
        "blame_email_hash": "0a3759cf16cc",
        "blame_date": "2025-06-12T16:57:47+02:00",
        "inclusion_date": "2025-06-13T03:10:27.835467+00:00"
      },
      "id": "49ac8a7f788c5d9ec3b47d254e6bdf2276421ffd4216f8ac30a57afe3c58450a"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 346,
        "start_column": 6,
        "end_line": 346,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case empty\nR : Type u_1\ninst\u271d : CommRing R\n\u03b9 : Type\nI : Ideal R\nJ : \u03b9 \u2192 Ideal R\n\u22a2 (\u2200 j \u2208 \u2205, I + J j = 1) \u2192 I + \u2a05 j \u2208 \u2205, J j = 1",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L346"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "bf75ce7fd1fe890f2134cb3d67d81cd5493aa5d4c886cc01dc90d96125b3abcc"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/CoreInteractionPhase.lean",
        "start_line": 275,
        "start_column": 83,
        "end_line": 275,
        "end_column": 88
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2077 : Field L\ninst\u271d\u2076 : Fintype L\ninst\u271d\u2075 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2074 : Field \ud835\udd3dq\ninst\u271d\u00b3 : Fintype \ud835\udd3dq\ninst\u271d\u00b2 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b9 : NeZero r\n\u2113 \ud835\udce1 : \u2115\ninst\u271d : NeZero \u2113\n\ud835\udcd1 : Fin 2 \u21aa L\ni : Fin \u2113\nh : \u21a5(restrictDegree (Fin (\u2113 - \u2191i.castSucc)) L 1)\nh_eq : MvPolynomial (Fin (\u2113 - \u2191i.castSucc - 1 + 1)) L = MvPolynomial (Fin (\u2113 - \u2191i.castSucc)) L\nh_le :\n  (\u2211 i_1 \u2208 Fintype.piFinset fun i => Finset.map \ud835\udcd1 univ,\n        Polynomial.map (MvPolynomial.eval (i_1 \u2218 id)) ((finSuccEquivNth L 0) (h_eq.mpr \u2191h))).degree \u2264\n    (Fintype.piFinset fun i => Finset.map \ud835\udcd1 univ).sup fun b =>\n      (Polynomial.map (MvPolynomial.eval (b \u2218 id)) ((finSuccEquivNth L 0) (h_eq.mpr \u2191h))).degree\nx : Fin (\u2113 - \u2191i - 1) \u2192 L\nhx : \u2200 (a : Fin (\u2113 - \u2191i - 1)), \u2203 a_1, \ud835\udcd1 a_1 = x a\nh_deg_h : degreeOf \u27e80, \u22ef\u27e9 \u2191h \u2264 1\n\u22a2 0 < \u2113 - \u2191i.castSucc - 1 + 1",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/CoreInteractionPhase.lean#L275"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "85ed028f5b47c294ef97bd123c382bdd7c44c2930afc402900ba66f975545625"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "SpaceDocs",
        "commit": "dc122ed7c5705e99a9ea5e7c635dda37d091d8e7",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PhysLean/StatisticalMechanics/CanonicalEnsemble/Basic.lean",
        "start_line": 301,
        "start_column": 4,
        "end_line": 301,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case refine_2\n\u03b9 : Type\ninst\u271d : MeasurableSpace \u03b9\n\ud835\udcd2 : CanonicalEnsemble \u03b9 inst\u271d\nT : Temperature\nhT : \u2191T \u2260 0\n\u22a2 (fun T => (CanonicalEnsemble.partitionFunction \u03b9 inst\u271d \ud835\udcd2 \u2218 toNNReal) T) =\u1da0[nhds T.toReal] fun T =>\n    \u222b (i : \u03b9), exp (-(1 / (kB * T)) * CanonicalEnsemble.energy \u03b9 inst\u271d \ud835\udcd2 i) \u2202CanonicalEnsemble.\u03bc \u03b9 inst\u271d \ud835\udcd2",
        "url": "https://github.com/HEPLean/PhysLean/blob/dc122ed7c5705e99a9ea5e7c635dda37d091d8e7/PhysLean/StatisticalMechanics/CanonicalEnsemble/Basic.lean#L301"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-07-10T18:59:21+00:00",
        "inclusion_date": "2025-07-12T00:18:46.378762+00:00"
      },
      "id": "6b30d6fccb25c12022d81df06c80b2afd3ea69a8fa0dc239d208f046f2fc4276"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1046,
        "start_column": 42,
        "end_line": 1046,
        "end_column": 47
      },
      "debug_info": {
        "goal": "f : \u211d \u2192 \u211d\nh\u2080 : \u2200 (x : \u211d), f x = x ^ 2 + (18 * x + 30) - 2 * \u221a(x ^ 2 + (18 * x + 45))\nh\u2081 : Fintype \u2191(f \u207b\u00b9' {0})\n\u22a2 \u220f x \u2208 (f \u207b\u00b9' {0}).toFinset, x = 20",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L1046"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "9dba2c1263ce927b9996b6dcd24730f4b5468d73765ddef4177fc2fe246b3b37"
    },
    {
      "repo": {
        "remote": "https://github.com/cmu-l3/llmlean",
        "branch": "kimina-pr",
        "commit": "126a6b2af37727c4d81bb49f6af6b354a380145e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LLMleanTest/Examples2.lean",
        "start_line": 60,
        "start_column": 2,
        "end_line": 60,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\nf : \u03b1 \u2192 \u03b2\ns t : Set \u03b1\nu v : Set \u03b2\n\u22a2 f '' s \u2229 v = f '' (s \u2229 f \u207b\u00b9' v)",
        "url": "https://github.com/cmu-l3/llmlean/blob/126a6b2af37727c4d81bb49f6af6b354a380145e/LLMleanTest/Examples2.lean#L60"
      },
      "metadata": {
        "blame_email_hash": "3ab0971ac342",
        "blame_date": "2024-07-23T17:17:09-04:00",
        "inclusion_date": "2025-06-11T03:39:01.065377+00:00"
      },
      "id": "d890f4b9b8206501fa49cdf4d2d4f23324103497827376f18fc1d27539f5e5b5"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_09.lean",
        "start_line": 31,
        "start_column": 2,
        "end_line": 31,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 \u2211' (k : \u2115), 1 / (2 * \u2191k + 1) ^ 2 = Real.pi ^ 2 / 8",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_09.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2024-09-26T08:28:24+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "2e6b7eadb8cf280c3b8c3ab873906bd97b5293248143d0de4f5b3a88567f067a"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/10FunctionsAndOperators.lean",
        "start_line": 116,
        "start_column": 33,
        "end_line": 116,
        "end_column": 38
      },
      "debug_info": {
        "goal": "\u22a2 sorry",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/10FunctionsAndOperators.lean#L116"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2025-05-08T00:30:10+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "3c805f3398c399b475ddba49e0711948db132e52cfba607238a4c738f8be0905"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 2 - 2, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "4c2d40fbe36ea72d6f40744e439689d30e273cc8bb3a2fc9587ebef04f4f0b70"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "D-provlogic",
        "commit": "502486d0cdcfe147471cfb5fb9a7145b41e37f87",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/D/Completeness.lean",
        "start_line": 69,
        "start_column": 40,
        "end_line": 69,
        "end_column": 45
      },
      "debug_info": {
        "goal": "T : ArithmeticTheory\ninst\u271d\u00b2 : Theory.\u0394\u2081 T\ninst\u271d\u00b9 : \ud835\udddc\ud835\udeba\u2081 \u2aaf T\ninst\u271d : \u2115 \u22a7\u2098* T\nU : ArithmeticTheory\neU : T + \u2191(LO.FirstOrder.ArithmeticTheory.LocalReflection T inst\u271d\u00b2 (Arithmetic.Hierarchy \ud835\udeba 1)) = U\nA : Modal.Formula \u2115\nh : \u2200 (f : T.StandardRealization), U \u22a2!. \u2191f A\nf : T.StandardRealization\nV : ArithmeticTheory := T + \u2191(\u22c3 f, {x | x = \u2191f (\u223c\u25a1\u22a5) \u2228 x = \u2191f (\u25a1\u25a1Formula.atom 0 \u279d \u25a1Formula.atom 0)})\nthis : \u2200 \u03c3 \u2208 LO.FirstOrder.ArithmeticTheory.LocalReflection T inst\u271d\u00b2 (Arithmetic.Hierarchy \ud835\udeba 1), V \u22a2!. \u03c3\n\u22a2 \u2200 (\u03c3 : Sentence \u2112\u2092\u1d63), U \u22a2!. \u03c3 \u2192 V \u22a2!. \u03c3",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/502486d0cdcfe147471cfb5fb9a7145b41e37f87/Foundation/ProvabilityLogic/D/Completeness.lean#L69"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-09-11T00:07:47+09:00",
        "inclusion_date": "2025-09-12T03:28:19.860470+00:00"
      },
      "id": "52bb43049aec94d3f343e82865b88fde50cf909b9c547b88f39f7340448cfe84"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "ineq_6_3_30",
        "commit": "50d8e9adca7e109fca68ac5572b4e515a70ae9a0",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainTileCount.lean",
        "start_line": 526,
        "start_column": 2,
        "end_line": 526,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Finset (\ud835\udd13 X)\n\u03d1 : \u0398 X\nN : \u2115\nhS0 : defaultS X \u2260 0\nL : Grid X\nhL : L \u2208 @Antichain.\ud835\udcdb' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N\n\u22a2 volume (E\u2082 (2 ^ (N + 3)) (@Antichain.p'' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N hS0 L hL)) \u2264\n    2 ^ (a * N + a * 3) * (dens\u2081 \u2191\ud835\udd04 * volume \u2191(@Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N hS0 L hL))",
        "url": "https://github.com/fpvandoorn/carleson/blob/50d8e9adca7e109fca68ac5572b4e515a70ae9a0/Carleson/Antichain/AntichainTileCount.lean#L526"
      },
      "metadata": {
        "blame_email_hash": "b2f50b2f722a",
        "blame_date": "2025-07-02T17:48:35+02:00",
        "inclusion_date": "2025-07-03T03:51:24.001986+00:00"
      },
      "id": "11b9dd2b57f960add9202e2eaca296c6fc536fabe0010c3aea758e38f3f0824a"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-hardly-ramified",
        "commit": "60be88a841fa232b563ea16600befe5efbfb3d07",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FLT/HaarMeasure/HaarChar/AdeleRing.lean",
        "start_line": 158,
        "start_column": 51,
        "end_line": 158,
        "end_column": 56
      },
      "debug_info": {
        "goal": "K : Type u_1\ninst\u271d\u2076 : Field K\ninst\u271d\u2075 : NumberField K\nB : Type u_4\ninst\u271d\u2074 : Ring B\ninst\u271d\u00b3 : Algebra K B\ninst\u271d\u00b2 : FiniteDimensional K B\ninst\u271d\u00b9 : MeasurableSpace (TensorProduct K B (AdeleRing (RingOfIntegers K) K))\ninst\u271d : BorelSpace (TensorProduct K B (AdeleRing (RingOfIntegers K) K))\nb : B\u02e3\n\u22a2 (Units.map \u2191Algebra.TensorProduct.includeLeftRingHom) b \u2208\n    ringHaarChar_ker (TensorProduct K B (AdeleRing (RingOfIntegers K) K))",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/60be88a841fa232b563ea16600befe5efbfb3d07/FLT/HaarMeasure/HaarChar/AdeleRing.lean#L158"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-06-07T23:01:07+01:00",
        "inclusion_date": "2025-09-18T04:05:26.332171+00:00"
      },
      "id": "4724800c3992df90528db6f2e38809a89849541909610382bb30d43124065b64"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "9e8de5716b162ec8983a89711a186d13ff871c22",
        "lean_version": "v4.24.0-rc1"
      },
      "location": {
        "path": "AesopTest/SplitScript.lean",
        "start_line": 27,
        "start_column": 12,
        "end_line": 27,
        "end_column": 17
      },
      "debug_info": {
        "goal": "P A B : Prop\nh : \u00acP\n\u22a2 B",
        "url": "https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/AesopTest/SplitScript.lean#L27"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-05-31T19:36:28+02:00",
        "inclusion_date": "2025-09-16T04:23:04.307662+00:00"
      },
      "id": "cfbb942b94d1180d69905243f2d9d17afdb4dd8e61e1d278c0411c1611b98e7c"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 42,
        "start_column": 64,
        "end_line": 42,
        "end_column": 69
      },
      "debug_info": {
        "goal": "case h\nG : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(#(A ^ 2)) \u2264 K * \u2191(#A)\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 g \u2229 A))}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\na\u271d : G\n\u22a2 a\u271d \u2208 A\u207b\u00b9 * A \u2192 (\u2191(#A) / (2 * K) \u2264 \u2191(#((MulOpposite.op a\u271d)\u207b\u00b9 \u2022> A \u2229 A)) \u2194 \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 a\u271d \u2229 A)))",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L42"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "cb50e1caabd09046920c755e06c55399a308100ee27c75b2936f66ac91ebb5f0"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "e99e6f7b4a57098ded666cd0ed64aae7078440a3",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 6723,
        "start_column": 6,
        "end_line": 6723,
        "end_column": 11
      },
      "debug_info": {
        "goal": "reOne : re 1 = 1\nimOne : im 1 = 0\nreThree : re 3 = 3\nimThree : im 3 = 0\nelt3 : Real.exp 1 < 3\nSmoothingF : \u211d \u2192 \u211d\nsupportSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\nContDiffSmoothingF : ContDiff \u211d 1 SmoothingF\n\u03c3\u2082' : \u211d\n\u03c3\u2082'_lt_one : \u03c3\u2082' < 1\nholoOn : HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (uIcc \u03c3\u2082' 2 \u00d7\u2102 uIcc (-3) 3 \\ {1})\n\u03c3\u2082 : \u211d := max (1 / 2) \u03c3\u2082'\n\u03c3\u2082InIoo : \u03c3\u2082 \u2208 Ioo 0 1\nC' : \u211d :=\n  sSup\n    ((fun t => \u2191\u2016-deriv riemannZeta (\u2191\u03c3\u2082 + \u2191t * (1 - \u2191\u03c3\u2082) + 3 * I) / riemannZeta (\u2191\u03c3\u2082 + \u2191t * (1 - \u2191\u03c3\u2082) + 3 * I)\u2016\u208a) ''\n      Icc 0 1)\nS : Set \u211d :=\n  (fun t => \u2191\u2016-deriv riemannZeta (\u2191\u03c3\u2082 + \u2191t * (1 - \u2191\u03c3\u2082) + 3 * I) / riemannZeta (\u2191\u03c3\u2082 + \u2191t * (1 - \u2191\u03c3\u2082) + 3 * I)\u2016\u208a) ''\n    Icc 0 1\nsSupS :\n  sSup\n      ((fun t => \u2191\u2016-deriv riemannZeta (\u2191\u03c3\u2082 + \u2191t * (1 - \u2191\u03c3\u2082) + 3 * I) / riemannZeta (\u2191\u03c3\u2082 + \u2191t * (1 - \u2191\u03c3\u2082) + 3 * I)\u2016\u208a) ''\n        Icc 0 1) =\n    sSup S\nbddAboveS : BddAbove S\n\u22a2 \u2203 b \u2208 S, 0 < b",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/e99e6f7b4a57098ded666cd0ed64aae7078440a3/PrimeNumberTheoremAnd/MediumPNT.lean#L6723"
      },
      "metadata": {
        "blame_email_hash": "cb0b0d4d503a",
        "blame_date": "2025-07-18T16:34:25-04:00",
        "inclusion_date": "2025-07-21T23:21:07.188403+00:00"
      },
      "id": "95a56b203aa34366f9e35f600b6b3785cf89c236c50ecd45fec08b7dd79a49c1"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 52,
        "start_column": 77,
        "end_line": 52,
        "end_column": 82
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure \u2119\n\u22a2 I[\u2211 i, \u2211 j, \u2191\u2191i \u2022 Y (i, j) : \u2211 i, \u2211 j, (-\u2191\u2191i - \u2191\u2191j) \u2022 Y (i, j)|\u2211 i, \u2211 j, Y (i, j)] \u2264\n    4 * \u2191p.m ^ 2 * p.\u03b7 * multiTau p \u03a9 h\u03a9 X",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L52"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-09-30T22:19:50+00:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "fee3a567bc7cda147b664bb160c06767e4b1e54d07160e5d1ed6250cf2efe99a"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "fae_PR_IsDiscrete",
        "commit": "021e880306684ec119d45c14dffe71109c4d80a3",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/Algebra/GroupWithZero/Range.lean",
        "start_line": 175,
        "start_column": 2,
        "end_line": 175,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro\nA : Type u_1\nB : Type u_2\nF : Type u_3\ninst\u271d\u2074 : FunLike F A B\nf : F\ninst\u271d\u00b3 : MonoidWithZero A\ninst\u271d\u00b2 : Nontrivial A\ninst\u271d\u00b9 : CommGroupWithZero B\ninst\u271d : MonoidWithZeroHomClass F A B\nh : \u2200 {a : A}, f a \u2260 0 \u2194 a \u2260 0\nb : B\u02e3\na : A\nha : f a = \u2191b\n\u22a2 a \u2208 nonZeroDivisors A",
        "url": "https://github.com/leanprover-community/mathlib4/blob/021e880306684ec119d45c14dffe71109c4d80a3/Mathlib/Algebra/GroupWithZero/Range.lean#L175"
      },
      "metadata": {
        "blame_email_hash": "0a3759cf16cc",
        "blame_date": "2025-06-11T19:00:22+02:00",
        "inclusion_date": "2025-06-12T03:10:42.562420+00:00"
      },
      "id": "218dafdfa78f1c2f99599fb25dcf4bc3296be613efea9661c9664d77ed45a2e2"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 351,
        "start_column": 6,
        "end_line": 351,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case insert\nR : Type u_1\ninst\u271d : CommRing R\n\u03b9 : Type\nI : Ideal R\nJ : \u03b9 \u2192 Ideal R\ni : \u03b9\ns : Finset \u03b9\na\u271d : i \u2209 s\nh : \u2200 j \u2208 insert i s, I + J j = 1\nK : Ideal R := \u2a05 j \u2208 s, J j\nhs : (\u2200 j \u2208 s, I + J j = 1) \u2192 I + K = 1\n\u22a2 1 \u2264 I + min K (J i)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L351"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "fd45460753d0faa14318efb8ff00176bf950f34fb4cd0a5ce57c05342d365820"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/CoreInteractionPhase.lean",
        "start_line": 276,
        "start_column": 28,
        "end_line": 276,
        "end_column": 33
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2077 : Field L\ninst\u271d\u2076 : Fintype L\ninst\u271d\u2075 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2074 : Field \ud835\udd3dq\ninst\u271d\u00b3 : Fintype \ud835\udd3dq\ninst\u271d\u00b2 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b9 : NeZero r\n\u2113 \ud835\udce1 : \u2115\ninst\u271d : NeZero \u2113\n\ud835\udcd1 : Fin 2 \u21aa L\ni : Fin \u2113\nh : \u21a5(restrictDegree (Fin (\u2113 - \u2191i.castSucc)) L 1)\nh_eq : MvPolynomial (Fin (\u2113 - \u2191i.castSucc - 1 + 1)) L = MvPolynomial (Fin (\u2113 - \u2191i.castSucc)) L\nh_le :\n  (\u2211 i_1 \u2208 Fintype.piFinset fun i => Finset.map \ud835\udcd1 univ,\n        Polynomial.map (MvPolynomial.eval (i_1 \u2218 id)) ((finSuccEquivNth L 0) (h_eq.mpr \u2191h))).degree \u2264\n    (Fintype.piFinset fun i => Finset.map \ud835\udcd1 univ).sup fun b =>\n      (Polynomial.map (MvPolynomial.eval (b \u2218 id)) ((finSuccEquivNth L 0) (h_eq.mpr \u2191h))).degree\nx : Fin (\u2113 - \u2191i - 1) \u2192 L\nhx : \u2200 (a : Fin (\u2113 - \u2191i - 1)), \u2203 a_1, \ud835\udcd1 a_1 = x a\nh_deg_h : degreeOf \u27e80, \u22ef\u27e9 \u2191h \u2264 1\n\u22a2 degreeOf \u27e80, \u22ef\u27e9 (h_eq.mpr \u2191h) \u2264 1",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/CoreInteractionPhase.lean#L276"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "bde4591014d5d9e4dab9e6e61357eb734a4a6e3b471355fe0bc4a50204d0e3d8"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "StringsCharges",
        "commit": "25c552a2c25a922bf5dbdb120a212ea73b365f5b",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "PhysLean/Relativity/Tensors/RealTensor/ToComplex.lean",
        "start_line": 112,
        "start_column": 2,
        "end_line": 112,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nc : Fin n \u2192 Color\nv : realLorentzTensor.Tensor c\n\u039b : SpecialLinearGroup (Fin 2) \u2102\n\u22a2 \u039b \u2022 (realLorentzTensor.toComplex n c) v = (realLorentzTensor.toComplex n c) (toLorentzGroup \u039b \u2022 v)",
        "url": "https://github.com/HEPLean/PhysLean/blob/25c552a2c25a922bf5dbdb120a212ea73b365f5b/PhysLean/Relativity/Tensors/RealTensor/ToComplex.lean#L112"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-07-03T10:07:51+00:00",
        "inclusion_date": "2025-09-17T03:53:50.079672+00:00"
      },
      "id": "89b38f95655d729093b369cb5cd199b67f2c99a64497c623d41f54c566e24b97"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1065,
        "start_column": 43,
        "end_line": 1065,
        "end_column": 48
      },
      "debug_info": {
        "goal": "\u22a2 (\u2211 k \u2208 Finset.Icc 1 12, k) % 4 = 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L1065"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "0bce425b609de165f86e63a4fba869d6787b51f2bc428fe7cd0e1a24307779d2"
    },
    {
      "repo": {
        "remote": "https://github.com/cmu-l3/llmlean",
        "branch": "kimina-pr",
        "commit": "126a6b2af37727c4d81bb49f6af6b354a380145e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LLMleanTest/Examples2.lean",
        "start_line": 63,
        "start_column": 2,
        "end_line": 63,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\nf : \u03b1 \u2192 \u03b2\ns t : Set \u03b1\nu v : Set \u03b2\n\u22a2 f '' (s \u2229 f \u207b\u00b9' u) \u2286 f '' s \u2229 u",
        "url": "https://github.com/cmu-l3/llmlean/blob/126a6b2af37727c4d81bb49f6af6b354a380145e/LLMleanTest/Examples2.lean#L63"
      },
      "metadata": {
        "blame_email_hash": "3ab0971ac342",
        "blame_date": "2024-07-23T17:17:09-04:00",
        "inclusion_date": "2025-06-11T03:39:01.065377+00:00"
      },
      "id": "0106dd64ff138046d52652167b752aaa010aed6d8afa716adb56be9a34557e74"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_08.lean",
        "start_line": 109,
        "start_column": 2,
        "end_line": 109,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n k : \u2115\n\u22a2 (iteratedDeriv k (book.irrational.f_aux n) 0 \u2208 Set.range fun q => \u2191q) \u2227\n    iteratedDeriv k (book.irrational.f_aux n) 1 \u2208 Set.range fun q => \u2191q",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_08.lean#L109"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2024-09-25T22:35:58+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "fd5cbe0a15a867e760189ed043bb2a2717c6865d59079bdf77c9fa1fec6a9a92"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/10FunctionsAndOperators.lean",
        "start_line": 118,
        "start_column": 88,
        "end_line": 118,
        "end_column": 93
      },
      "debug_info": {
        "goal": "R : Type u_2\nl : Type u_3\nm : Type u_4\np : Type u_6\nq : Type u_7\ninst\u271d\u2078 : Fintype l\ninst\u271d\u2077 : Fintype m\ninst\u271d\u2076 : Fintype p\ninst\u271d\u2075 : Fintype q\ninst\u271d\u2074 : DecidableEq l\ninst\u271d\u00b3 : DecidableEq m\ninst\u271d\u00b2 : DecidableEq p\ninst\u271d\u00b9 : DecidableEq q\ninst\u271d : Field R\nA : Matrix l m R\nB : Matrix p q R\n\u22a2 (kroneckerMap (fun x1 x2 => x1 * x2) A B).rank = A.rank * B.rank",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/10FunctionsAndOperators.lean#L118"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2024-01-14T23:02:26+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "a3a1109dd511e8cac28d54b0642c8f5fc98de808c2dfcdc305fe4f0c530cc105"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 3 - 2, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "71e0d3357fad98db3158a08af93ea86e07bae53f7510a6825744878675a5f186"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "D-provlogic",
        "commit": "502486d0cdcfe147471cfb5fb9a7145b41e37f87",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/D/Completeness.lean",
        "start_line": 71,
        "start_column": 4,
        "end_line": 71,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case h.mp\nT : ArithmeticTheory\ninst\u271d\u00b2 : Theory.\u0394\u2081 T\ninst\u271d\u00b9 : \ud835\udddc\ud835\udeba\u2081 \u2aaf T\ninst\u271d : \u2115 \u22a7\u2098* T\nU : ArithmeticTheory\neU : T + \u2191(LO.FirstOrder.ArithmeticTheory.LocalReflection T inst\u271d\u00b2 (Arithmetic.Hierarchy \ud835\udeba 1)) = U\nA : Modal.Formula \u2115\nh : \u2200 (f : T.StandardRealization), U \u22a2!. \u2191f A\nf : T.StandardRealization\nV : ArithmeticTheory := T + \u2191(\u22c3 f, {x | x = \u2191f (\u223c\u25a1\u22a5) \u2228 x = \u2191f (\u25a1\u25a1Formula.atom 0 \u279d \u25a1Formula.atom 0)})\nthis\u271d\u00b9 : \u2200 \u03c3 \u2208 LO.FirstOrder.ArithmeticTheory.LocalReflection T inst\u271d\u00b2 (Arithmetic.Hierarchy \ud835\udeba 1), V \u22a2!. \u03c3\nthis\u271d : \u2200 (\u03c3 : Sentence \u2112\u2092\u1d63), U \u22a2!. \u03c3 \u2192 V \u22a2!. \u03c3\nthis : V \u22a2!. \u2191f A\n\u22a2 T \u22a2!. \u2191f A.dzSubformula.conj \u279d \u2191f A",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/502486d0cdcfe147471cfb5fb9a7145b41e37f87/Foundation/ProvabilityLogic/D/Completeness.lean#L71"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-09-11T00:07:47+09:00",
        "inclusion_date": "2025-09-12T03:28:19.860470+00:00"
      },
      "id": "293a4c7065ab5b71c31734ba0b9908fad2c05c1bd2b2bc7695d0d9a85323002b"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "ineq_6_3_30",
        "commit": "bc8a66ae53b6783c978681f53ed56302733ab997",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainTileCount.lean",
        "start_line": 551,
        "start_column": 2,
        "end_line": 551,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro\nX : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Finset (\ud835\udd13 X)\n\u03d1 : \u0398 X\nN : \u2115\nL : Grid X\nhL : L \u2208 @Antichain.\ud835\udcdb' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N\np' : \ud835\udd13 X := @Antichain.p' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL\nhp' : L \u2264 \ud835\udcd8 p'\nhle : @Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL \u2264 \ud835\udcd8 p'\nhL' :\n  @Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL \u2209\n    @Antichain.\ud835\udcdb X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N\np'' : { x // x \u2208 @Antichain.\ud835\udd04' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N }\nhp'' : \ud835\udcd8 \u2191p'' \u2264 @Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL\n\u22a2 \u2203 p, \ud835\udcd8 p = @Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL \u2227 \u03d1 \u2208 \u03a9 p",
        "url": "https://github.com/fpvandoorn/carleson/blob/bc8a66ae53b6783c978681f53ed56302733ab997/Carleson/Antichain/AntichainTileCount.lean#L551"
      },
      "metadata": {
        "blame_email_hash": "b2f50b2f722a",
        "blame_date": "2025-07-02T17:48:35+02:00",
        "inclusion_date": "2025-07-05T03:56:58.007111+00:00"
      },
      "id": "ab1427e423c27be3c00184f0e63d461069cc76a8bad598a9d15d92a86fc9e312"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-hardly-ramified",
        "commit": "60be88a841fa232b563ea16600befe5efbfb3d07",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FLT/HaarMeasure/HaarChar/AdeleRing.lean",
        "start_line": 171,
        "start_column": 2,
        "end_line": 171,
        "end_column": 7
      },
      "debug_info": {
        "goal": "K : Type u_1\ninst\u271d\u2076 : Field K\ninst\u271d\u2075 : NumberField K\nB : Type u_4\ninst\u271d\u2074 : Ring B\ninst\u271d\u00b3 : Algebra K B\ninst\u271d\u00b2 : FiniteDimensional K B\ninst\u271d\u00b9 : MeasurableSpace (TensorProduct K B (AdeleRing (RingOfIntegers K) K))\ninst\u271d : BorelSpace (TensorProduct K B (AdeleRing (RingOfIntegers K) K))\nb : B\u02e3\n\u22a2 addEquivAddHaarChar (ContinuousAddEquiv.mulRight ((Units.map \u2191Algebra.TensorProduct.includeLeftRingHom) b)) = 1",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/60be88a841fa232b563ea16600befe5efbfb3d07/FLT/HaarMeasure/HaarChar/AdeleRing.lean#L171"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-06-07T23:01:07+01:00",
        "inclusion_date": "2025-09-18T04:05:26.332171+00:00"
      },
      "id": "ed6c47783c089ca139149b5b9873b201a8821721814902bafaa3322715d28d2b"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 45,
        "start_column": 22,
        "end_line": 45,
        "end_column": 27
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(#(A ^ 2)) \u2264 K * \u2191(#A)\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 g \u2229 A))}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\n\u22a2 \u2191(#(A\u207b\u00b9 * A)) \u2264 K ^ 2 * \u2191(#A)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L45"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "58fc57b29c1148d6decafbb5b43525f88aa71e1cffaea3fcc32a423d64b34705"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "51c6063c647276f7c01e848976e6721033829c90",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 6423,
        "start_column": 32,
        "end_line": 6423,
        "end_column": 37
      },
      "debug_info": {
        "goal": "c : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\nX\u2080 : \u211d := sorry\nX : \u211d\nX_ge_X\u2080 : X \u2265 X\u2080\nX_gt_3 : 3 < X\n\u03b5 : \u211d := sorry\n\u03b5_pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\n\u03b5_X : 2 < X * \u03b5\n\u03bd : \u211d \u2192 \u211d\nContDiff\u03bd : ContDiff \u211d (\u2191\u22a4) \u03bd\n\u03bd_nonneg' : \u2200 (x : \u211d), 0 \u2264 \u03bd x\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\n\u03bd_massOne' : \u222b (x : \u211d) in Ici 0, \u03bd x / x = 1\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\n\u03c8_\u03b5_of_X : \u2102 := SmoothedChebyshev \u03bd \u03b5 X\nC_unsmoothing : \u211d\nC_unsmoothing_pos : C_unsmoothing > 0\n\u03c8_\u03c8_\u03b5_diff : \u2016\u2191(ChebyshevPsi X) - \u03c8_\u03b5_of_X\u2016 \u2264 C_unsmoothing * X * \u03b5 * Real.log X\nT : \u211d := sorry\nT_gt_3 : 3 < T\nA : \u211d\nA_in_Ioc : A \u2208 Ioc 0 (1 / 2)\nholo1 :\n  HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (Icc (1 - A / Real.log T ^ 9) 2 \u00d7\u2102 Icc (-T) T \\ {1})\n\u03c3\u2081 : \u211d := 1 - A / Real.log T ^ 9\n\u03c3\u2081pos : 0 < \u03c3\u2081\n\u03c3\u2081_lt_one : \u03c3\u2081 < 1\n\u03c3\u2082' : \u211d\n\u03c3\u2082'_lt_one : \u03c3\u2082' < 1\nholo2' : HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (uIcc \u03c3\u2082' 2 \u00d7\u2102 uIcc (-3) 3 \\ {1})\n\u03c3\u2082 : \u211d := max \u03c3\u2082' (1 / 2)\n\u03c3\u2082_pos : 0 < \u03c3\u2082\n\u22a2 \u03c3\u2082 < 1",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/51c6063c647276f7c01e848976e6721033829c90/PrimeNumberTheoremAnd/MediumPNT.lean#L6423"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-07-13T14:26:24-04:00",
        "inclusion_date": "2025-07-13T23:20:18.124737+00:00"
      },
      "id": "239b7a4e2fc9c42a682a37a887356ad59f7c2857203370241c31fec75d3262e1"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 54,
        "start_column": 77,
        "end_line": 54,
        "end_column": 82
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure \u2119\n\u22a2 I[\u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j) : \u2211 i, \u2211 j, (-\u2191\u2191i - \u2191\u2191j) \u2022 Y (i, j)|\u2211 i, \u2211 j, Y (i, j)] \u2264\n    4 * \u2191p.m ^ 2 * p.\u03b7 * multiTau p \u03a9 h\u03a9 X",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L54"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-09-30T22:19:50+00:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "451fb0015c6418b9727b1aee983e4d8fbc52cc07f588aac5fd1254c79e4cb470"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "loki-specialize",
        "commit": "f044c2dcd83f0a53b685d64098a705165e6d1b2c",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/Tactic/Specialize.lean",
        "start_line": 26,
        "start_column": 2,
        "end_line": 26,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : Foo\n\u22a2 specialFoo = x",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f044c2dcd83f0a53b685d64098a705165e6d1b2c/Mathlib/Tactic/Specialize.lean#L26"
      },
      "metadata": {
        "blame_email_hash": "39e74c63615f",
        "blame_date": "2025-06-11T17:17:19+02:00",
        "inclusion_date": "2025-06-12T03:13:39.065720+00:00"
      },
      "id": "da3f2283e4a06c77dfb9b0c2af9f550e61abea0b2420fb2d36a43ea205c202af"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 370,
        "start_column": 6,
        "end_line": 370,
        "end_column": 11
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : CommRing R\n\u03b9 : Type\ninst\u271d : Fintype \u03b9\nI : \u03b9 \u2192 Ideal R\nhI : \u2200 (i j : \u03b9), i \u2260 j \u2192 I i + I j = 1\ng : (i : \u03b9) \u2192 R \u29f8 I i\nf : \u03b9 \u2192 R\nhf : \u2200 (i : \u03b9), (Quotient.mk (I i)) (f i) = g i\ni : \u03b9\n\u22a2 \u2200 j \u2208 {i}\u1d9c, I i + I j = 1",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L370"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "d1f546dceefaaed4377d354cb4f17665c5b746dec27d20a5214b3edd7f052022"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/CoreInteractionPhase.lean",
        "start_line": 516,
        "start_column": 20,
        "end_line": 516,
        "end_column": 25
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u00b9\u00b2 : Field L\ninst\u271d\u00b9\u00b9 : Fintype L\ninst\u271d\u00b9\u2070 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2079 : Field \ud835\udd3dq\ninst\u271d\u2078 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u2077 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u2076 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u2075 : NeZero \u03d1\ninst\u271d\u2074 : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : DecidableEq R\ninst\u271d\u00b9 : SelectableType R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03c3 : Type\ninit : ProbComp \u03c3\nimpl : QueryImpl []\u2092 (StateT \u03c3 ProbComp)\ninst\u271d : SelectableType L\ni : Fin \u2113\nerr_SC : NNReal := 1 / \u2191(Fintype.card L)\nk : \u2115 := \u2191i / \u03d1\n\u22a2 \u2191i + \u03d1 < r",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/CoreInteractionPhase.lean#L516"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "a60ccfbfaf05a6167e4264132c9e55f9d32bc22d16d8ae3cc513671fc0c45643"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "StringsCharges",
        "commit": "25c552a2c25a922bf5dbdb120a212ea73b365f5b",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "PhysLean/Relativity/LorentzGroup/Boosts/Generalized.lean",
        "start_line": 466,
        "start_column": 2,
        "end_line": 466,
        "end_column": 7
      },
      "debug_info": {
        "goal": "d : \u2115\nu v : \u2191(Velocity d)\n\u22a2 \u2191(LorentzGroup.generalizedBoost d u v) (Sum.inl 0) (Sum.inl 0) =\n    1 + \u2016(\u2191u).timeComponent \u2022 (\u2191v).spatialPart - (\u2191v).timeComponent \u2022 (\u2191u).spatialPart\u2016 / (1 + (minkowskiProduct \u2191u) \u2191v)",
        "url": "https://github.com/HEPLean/PhysLean/blob/25c552a2c25a922bf5dbdb120a212ea73b365f5b/PhysLean/Relativity/LorentzGroup/Boosts/Generalized.lean#L466"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-07-03T10:07:51+00:00",
        "inclusion_date": "2025-09-17T03:53:50.079672+00:00"
      },
      "id": "3cbef08e0fe82854e123014c7516909465f835ac1fae08c64a61ec5d03a287e3"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1075,
        "start_column": 23,
        "end_line": 1075,
        "end_column": 28
      },
      "debug_info": {
        "goal": "S : Finset \u211d\nh\u2080 : \u2200 (x : \u211d), x \u2208 S \u2194 |2 - x| = 3\n\u22a2 \u2211 k \u2208 S, k = 4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L1075"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "d4f019a0b37adc405ebeac2ad742e14a0dd31c398e934139d6b55098c5d4b0a1"
    },
    {
      "repo": {
        "remote": "https://github.com/cmu-l3/llmlean",
        "branch": "kimina-pr",
        "commit": "126a6b2af37727c4d81bb49f6af6b354a380145e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LLMleanTest/Examples2.lean",
        "start_line": 66,
        "start_column": 2,
        "end_line": 66,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\nf : \u03b1 \u2192 \u03b2\ns t : Set \u03b1\nu v : Set \u03b2\n\u22a2 s \u2229 f \u207b\u00b9' u \u2286 f \u207b\u00b9' (f '' s \u2229 u)",
        "url": "https://github.com/cmu-l3/llmlean/blob/126a6b2af37727c4d81bb49f6af6b354a380145e/LLMleanTest/Examples2.lean#L66"
      },
      "metadata": {
        "blame_email_hash": "3ab0971ac342",
        "blame_date": "2024-07-23T17:17:09-04:00",
        "inclusion_date": "2025-06-11T03:39:01.065377+00:00"
      },
      "id": "1a244f5b61f1c3dc3bd5cae5002a3972c86f1288aedadbdf9bf15acd12ba01ef"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_02.lean",
        "start_line": 227,
        "start_column": 50,
        "end_line": 227,
        "end_column": 55
      },
      "debug_info": {
        "goal": "k n : \u2115\n\u22a2 n.choose k \u2264 n ^ k / n.factorial \u2227 n ^ k / n.factorial \u2264 n ^ k / 2 ^ (k - 1)",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_02.lean#L227"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2024-09-22T20:29:32+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "23c70b7c55be649a18b399fbf87da0080d1b52522c421ebed68e87b52259b27c"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/10FunctionsAndOperators.lean",
        "start_line": 243,
        "start_column": 63,
        "end_line": 243,
        "end_column": 68
      },
      "debug_info": {
        "goal": "m : Type u_4\nn : Type u_5\ninst\u271d\u00b3 : Fintype m\ninst\u271d\u00b2 : Fintype n\ninst\u271d\u00b9 : DecidableEq m\ninst\u271d : DecidableEq n\nA : Matrix m n \u211d\n\u22a2 sorry = \u2a06 j, \u2211 i, \u2016A i j\u2016",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/10FunctionsAndOperators.lean#L243"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2024-01-14T23:02:26+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "a3b34e163ce50eb1791659b3fb8ff484d1726e3d26c41459141a63d3ad6a4ae5"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 4 - 2, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "12034a8c19e0cd8a3821ca2b86cace0e9cda9afba573af42a01b58a591902f56"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "D-provlogic",
        "commit": "502486d0cdcfe147471cfb5fb9a7145b41e37f87",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/D/Completeness.lean",
        "start_line": 94,
        "start_column": 55,
        "end_line": 94,
        "end_column": 60
      },
      "debug_info": {
        "goal": "T : ArithmeticTheory\ninst\u271d\u00b2 : Theory.\u0394\u2081 T\ninst\u271d\u00b9 : \ud835\udddc\ud835\udeba\u2081 \u2aaf T\ninst\u271d : \u2115 \u22a7\u2098* T\nU : ArithmeticTheory\neU : T + \u2191(LO.FirstOrder.ArithmeticTheory.LocalReflection T inst\u271d\u00b2 (Arithmetic.Hierarchy \ud835\udeba 1)) = U\nA : Modal.Formula \u2115\nh : \u2200 (f : T.StandardRealization), T \u22a2!. \u2191f A.dzSubformula.conj \u279d \u2191f A\nf : T.StandardRealization\nthis : T \u22a2!. \u2191f A.dzSubformula.conj \u279d \u2191f A\n\u22a2 U \u22a2!. \u2191f A.dzSubformula.conj \u279d \u2191f A",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/502486d0cdcfe147471cfb5fb9a7145b41e37f87/Foundation/ProvabilityLogic/D/Completeness.lean#L94"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-09-11T00:07:47+09:00",
        "inclusion_date": "2025-09-12T03:28:19.860470+00:00"
      },
      "id": "178fc0b6288e158138b4e07768ac43c1c2f797f3da5ac4cd8f4269665632833a"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "ineq_6_3_30",
        "commit": "bc8a66ae53b6783c978681f53ed56302733ab997",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainTileCount.lean",
        "start_line": 561,
        "start_column": 2,
        "end_line": 561,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Finset (\ud835\udd13 X)\n\u03d1 : \u0398 X\nN : \u2115\nL : Grid X\nhL : L \u2208 @Antichain.\ud835\udcdb' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N\n\u22a2 volume (E\u2082 (2 ^ (N + 3)) (@Antichain.p'' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL)) \u2264\n    2 ^ (a * N + a * 3) * (dens\u2081 \u2191\ud835\udd04 * volume \u2191(@Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL))",
        "url": "https://github.com/fpvandoorn/carleson/blob/bc8a66ae53b6783c978681f53ed56302733ab997/Carleson/Antichain/AntichainTileCount.lean#L561"
      },
      "metadata": {
        "blame_email_hash": "b2f50b2f722a",
        "blame_date": "2025-07-02T17:48:35+02:00",
        "inclusion_date": "2025-07-05T03:56:58.007111+00:00"
      },
      "id": "e4c6d817286f6fb95cf3321e02795ceb416364697282daa5b65f69fe9d33633e"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "d4d53cd1b6db8169e99c67fced54a69bd72a24bf",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "FLT/AutomorphicRepresentation/Example.lean",
        "start_line": 219,
        "start_column": 34,
        "end_line": 219,
        "end_column": 39
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u2074 : CommRing R\nM : Type u_2\ninst\u271d\u00b3 : AddCommGroup M\ninst\u271d\u00b2 : Module R M\ninst\u271d\u00b9 : IsPrincipalIdealRing R\ninst\u271d : IsDomain R\n\u22a2 Flat R M \u2194 torsion R M = \u22a5",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/d4d53cd1b6db8169e99c67fced54a69bd72a24bf/FLT/AutomorphicRepresentation/Example.lean#L219"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-06-01T11:10:47+01:00",
        "inclusion_date": "2025-07-30T22:50:40.863495+00:00"
      },
      "id": "e89163918d2bff39b2affe2604ba6ddea38327089a30d533eb8a7b6a83fd0a4e"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 46,
        "start_column": 69,
        "end_line": 46,
        "end_column": 74
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(#(A ^ 2)) \u2264 K * \u2191(#A)\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 g \u2229 A))}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191(#S) \u2264 K ^ 2 * \u2191(#A)\n\u22a2 \u2203 F \u2286 A, \u2191(#F) \u2264 2 * K \u2227 A \u2286 S * F",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "19c0481c5bc3939a05949d6d735fc88f540a6fac6a649b96ac38c8dacf7ded32"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "51c6063c647276f7c01e848976e6721033829c90",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 6424,
        "start_column": 89,
        "end_line": 6424,
        "end_column": 94
      },
      "debug_info": {
        "goal": "c : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\nX\u2080 : \u211d := sorry\nX : \u211d\nX_ge_X\u2080 : X \u2265 X\u2080\nX_gt_3 : 3 < X\n\u03b5 : \u211d := sorry\n\u03b5_pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\n\u03b5_X : 2 < X * \u03b5\n\u03bd : \u211d \u2192 \u211d\nContDiff\u03bd : ContDiff \u211d (\u2191\u22a4) \u03bd\n\u03bd_nonneg' : \u2200 (x : \u211d), 0 \u2264 \u03bd x\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\n\u03bd_massOne' : \u222b (x : \u211d) in Ici 0, \u03bd x / x = 1\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\n\u03c8_\u03b5_of_X : \u2102 := SmoothedChebyshev \u03bd \u03b5 X\nC_unsmoothing : \u211d\nC_unsmoothing_pos : C_unsmoothing > 0\n\u03c8_\u03c8_\u03b5_diff : \u2016\u2191(ChebyshevPsi X) - \u03c8_\u03b5_of_X\u2016 \u2264 C_unsmoothing * X * \u03b5 * Real.log X\nT : \u211d := sorry\nT_gt_3 : 3 < T\nA : \u211d\nA_in_Ioc : A \u2208 Ioc 0 (1 / 2)\nholo1 :\n  HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (Icc (1 - A / Real.log T ^ 9) 2 \u00d7\u2102 Icc (-T) T \\ {1})\n\u03c3\u2081 : \u211d := 1 - A / Real.log T ^ 9\n\u03c3\u2081pos : 0 < \u03c3\u2081\n\u03c3\u2081_lt_one : \u03c3\u2081 < 1\n\u03c3\u2082' : \u211d\n\u03c3\u2082'_lt_one : \u03c3\u2082' < 1\nholo2' : HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (uIcc \u03c3\u2082' 2 \u00d7\u2102 uIcc (-3) 3 \\ {1})\n\u03c3\u2082 : \u211d := max \u03c3\u2082' (1 / 2)\n\u03c3\u2082_pos : 0 < \u03c3\u2082\n\u03c3\u2082_lt_one : \u03c3\u2082 < 1\n\u22a2 HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (uIcc \u03c3\u2082 2 \u00d7\u2102 uIcc (-3) 3 \\ {1})",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/51c6063c647276f7c01e848976e6721033829c90/PrimeNumberTheoremAnd/MediumPNT.lean#L6424"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-07-13T14:26:24-04:00",
        "inclusion_date": "2025-07-13T23:20:18.124737+00:00"
      },
      "id": "9da84084ae8f4f86495d69f096dd48a5a2373b6a9004d329b8227a3f0702a86f"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "58ff9ddb3f6bc3860fb0316cc210fca5d488ba62",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 50,
        "start_column": 77,
        "end_line": 50,
        "end_column": 82
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure volume\n\u22a2 I[\u2211 i, \u2211 j, \u2191\u2191i \u2022 Y (i, j) : \u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j)|\u2211 i, \u2211 j, Y (i, j)] \u2264 4 * \u2191p.m ^ 2 * p.\u03b7 * multiTau p \u03a9 h\u03a9 X",
        "url": "https://github.com/teorth/pfr/blob/58ff9ddb3f6bc3860fb0316cc210fca5d488ba62/PFR/TorsionEndgame.lean#L50"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-09-30T22:19:50+00:00",
        "inclusion_date": "2025-07-05T05:06:27.171280+00:00"
      },
      "id": "d8e16c1360f191305b476e1f90465a889b0d60cadfb6f2841507ef194a806fb7"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "CM-local-ring-is-catenary",
        "commit": "289728ba8f6bc3aa92fe63ebf878ca37221f591a",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/RingTheory/CohenMacaulay/Catenary.lean",
        "start_line": 373,
        "start_column": 4,
        "end_line": 373,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case a\n\u03b9 : Type u_1\ninst\u271d\u00b9 : CompleteLattice \u2115\u221e\ninst\u271d : Nonempty \u03b9\ns : Set \u03b9\nhs : s.Nonempty\nf : \u03b9 \u2192 \u2115\u221e\nhf : BddAbove (Set.range f)\nh : \u2200 (i : \u03b9), \u2191(\u2a06 (_ : i \u2208 s), f i) \u2264 \u2a06 i \u2208 s, \u2191(f i)\ng : \u03b9 \u2192 WithBot \u2115\u221e := fun i => \u2191(\u2a06 (_ : i \u2208 s), f i)\n\u22a2 \u2a06 i, \u2191(\u2a06 (_ : i \u2208 s), f i) \u2264 \u2a06 i \u2208 s, \u2191(f i)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/289728ba8f6bc3aa92fe63ebf878ca37221f591a/Mathlib/RingTheory/CohenMacaulay/Catenary.lean#L373"
      },
      "metadata": {
        "blame_email_hash": "4351a1f9903a",
        "blame_date": "2025-06-10T18:51:40+08:00",
        "inclusion_date": "2025-06-11T03:01:47.663859+00:00"
      },
      "id": "b423897393d8f4fc88a812082b45ba74fe737c5d66183671952047f854c3e842"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 371,
        "start_column": 4,
        "end_line": 371,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : CommRing R\n\u03b9 : Type\ninst\u271d : Fintype \u03b9\nI : \u03b9 \u2192 Ideal R\nhI : \u2200 (i j : \u03b9), i \u2260 j \u2192 I i + I j = 1\ng : (i : \u03b9) \u2192 R \u29f8 I i\nf : \u03b9 \u2192 R\nhf : \u2200 (i : \u03b9), (Quotient.mk (I i)) (f i) = g i\ni : \u03b9\nhI' : \u2200 j \u2208 {i}\u1d9c, I i + I j = 1\n\u22a2 \u2203 e, (Quotient.mk (I i)) e = 1 \u2227 \u2200 (j : \u03b9), j \u2260 i \u2192 (Quotient.mk (I j)) e = 0",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L371"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "d2cea25c6df1bf412f587e8d19d3cd34498bc5b460d0a16c818ce57f15c025ba"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean",
        "start_line": 733,
        "start_column": 30,
        "end_line": 733,
        "end_column": 35
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Fintype L\ninst\u271d\u2076 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2075 : Field \ud835\udd3dq\ninst\u271d\u2074 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u00b3 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b2 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u00b9 : NeZero \u03d1\ninst\u271d : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\ni : Fin (\u2113 + 1)\nh\u271d : \u2191i < \u2113\n\u22a2 \u2191i < \u2113",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean#L733"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "192a66ce80185b11e17b0471530c0780927e22ffd548d7c2bece8ed096d5f20f"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "StringsCharges",
        "commit": "25c552a2c25a922bf5dbdb120a212ea73b365f5b",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "PhysLean/Mathematics/Calculus/Divergence.lean",
        "start_line": 141,
        "start_column": 2,
        "end_line": 141,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u2074 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b3 : NormedAddCommGroup E\ninst\u271d\u00b2 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9 : InnerProductSpace' \ud835\udd5c E\nf : E \u2192 \ud835\udd5c\ng : E \u2192 E\nx : E\nhf : DifferentiableAt \ud835\udd5c f x\nhg : DifferentiableAt \ud835\udd5c g x\ninst\u271d : FiniteDimensional \ud835\udd5c E\n\u22a2 (LinearMap.trace \ud835\udd5c E) \u2191((fderiv \ud835\udd5c f x).smulRight (g x)) = inner \ud835\udd5c (adjFDeriv \ud835\udd5c f x 1) (g x)",
        "url": "https://github.com/HEPLean/PhysLean/blob/25c552a2c25a922bf5dbdb120a212ea73b365f5b/PhysLean/Mathematics/Calculus/Divergence.lean#L141"
      },
      "metadata": {
        "blame_email_hash": "c7c59fe619b9",
        "blame_date": "2025-07-01T07:53:27+02:00",
        "inclusion_date": "2025-09-17T03:53:50.079672+00:00"
      },
      "id": "a184e3ffef3d9689a2eead7110560adcf17d8d894e0fa35aca0f62a5df25b5c0"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1267,
        "start_column": 48,
        "end_line": 1267,
        "end_column": 53
      },
      "debug_info": {
        "goal": "\u22a2 (\u2211 k \u2208 Finset.range 101, 2 ^ k) % 7 = 3",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L1267"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "b70995e69b4e10d8c1521c44bee31d586e71bee913163bc58a74b2b7be43378d"
    },
    {
      "repo": {
        "remote": "https://github.com/cmu-l3/llmlean",
        "branch": "kimina-pr",
        "commit": "126a6b2af37727c4d81bb49f6af6b354a380145e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LLMleanTest/Examples2.lean",
        "start_line": 69,
        "start_column": 2,
        "end_line": 69,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\nf : \u03b1 \u2192 \u03b2\ns t : Set \u03b1\nu v : Set \u03b2\n\u22a2 s \u222a f \u207b\u00b9' u \u2286 f \u207b\u00b9' (f '' s \u222a u)",
        "url": "https://github.com/cmu-l3/llmlean/blob/126a6b2af37727c4d81bb49f6af6b354a380145e/LLMleanTest/Examples2.lean#L69"
      },
      "metadata": {
        "blame_email_hash": "3ab0971ac342",
        "blame_date": "2024-07-23T17:17:09-04:00",
        "inclusion_date": "2025-06-11T03:39:01.065377+00:00"
      },
      "id": "91ead93e7bce8ebf9d8a396045a2952c37772d7dc4ef056bfe169095688d1978"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_02.lean",
        "start_line": 218,
        "start_column": 39,
        "end_line": 218,
        "end_column": 44
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 Real.log \u2191n + 1 / \u2191n < \u2191(harmonic n) \u2227 \u2191(harmonic n) < Real.log \u2191n + 1",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_02.lean#L218"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2024-09-22T09:48:51+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "8a8999c557f45adaa4a609e7e9b56718f351e416d3813c221bdd7835023be43e"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/10FunctionsAndOperators.lean",
        "start_line": 316,
        "start_column": 3,
        "end_line": 316,
        "end_column": 8
      },
      "debug_info": {
        "goal": "m : Type u_4\nn : Type u_5\nr : Type u_8\ninst\u271d\u2075 : Fintype m\ninst\u271d\u2074 : Fintype n\ninst\u271d\u00b3 : Fintype r\ninst\u271d\u00b2 : DecidableEq m\ninst\u271d\u00b9 : DecidableEq n\ninst\u271d : DecidableEq r\nA : Matrix m n \u211d\nB : Matrix n r \u211d\n\u22a2 A.rank + B.rank - Fintype.card n \u2264 (A * B).rank",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/10FunctionsAndOperators.lean#L316"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2023-10-11T15:16:39+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "e9c36bccc0e5cc615cc8885a0eb8f901a7b8077574833f6d9eb608b7fe256dd7"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 5 - 2, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "7fff431ac7296b360b5ddc858760e0033054c8ffec73a8c6163bd5debf63c704"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "D-provlogic",
        "commit": "502486d0cdcfe147471cfb5fb9a7145b41e37f87",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/D/Completeness.lean",
        "start_line": 96,
        "start_column": 48,
        "end_line": 96,
        "end_column": 53
      },
      "debug_info": {
        "goal": "T : ArithmeticTheory\ninst\u271d\u00b2 : Theory.\u0394\u2081 T\ninst\u271d\u00b9 : \ud835\udddc\ud835\udeba\u2081 \u2aaf T\ninst\u271d : \u2115 \u22a7\u2098* T\nU : ArithmeticTheory\neU : T + \u2191(LO.FirstOrder.ArithmeticTheory.LocalReflection T inst\u271d\u00b2 (Arithmetic.Hierarchy \ud835\udeba 1)) = U\nA : Modal.Formula \u2115\nh : \u2200 (f : T.StandardRealization), T \u22a2!. \u2191f A.dzSubformula.conj \u279d \u2191f A\nf : T.StandardRealization\nthis\u271d\u00b9 : T \u22a2!. \u2191f A.dzSubformula.conj \u279d \u2191f A\nthis\u271d : U \u22a2!. \u2191f A.dzSubformula.conj \u279d \u2191f A\nthis : \u2200 D \u2208 A.dzSubformula, U \u22a2!. \u2191f D\n\u22a2 \u2191U \u22a2! \u2191f A.dzSubformula.conj",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/502486d0cdcfe147471cfb5fb9a7145b41e37f87/Foundation/ProvabilityLogic/D/Completeness.lean#L96"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-09-11T00:07:47+09:00",
        "inclusion_date": "2025-09-12T03:28:19.860470+00:00"
      },
      "id": "80cf9713db16d563141db3a4f1c7084df9d0a8302f00758ce390870e0c2c0d1b"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "ineq_6_3_30",
        "commit": "bcc07a3b1282c61371f9cc8748d1be4765325b7b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainTileCount.lean",
        "start_line": 569,
        "start_column": 2,
        "end_line": 569,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro\nX : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Set (\ud835\udd13 X)\n\u03d1 : \u0398 X\nN : \u2115\nL : Grid X\nhL : L \u2208 @Antichain.\ud835\udcdb' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N\np' : \ud835\udd13 X := @Antichain.p' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL\nhp' : L \u2264 \ud835\udcd8 p'\nhle : @Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL \u2264 \ud835\udcd8 p'\nhL' :\n  @Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL \u2209\n    @Antichain.\ud835\udcdb X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N\np'' : \u2191(@Antichain.\ud835\udd04' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N)\nhp'' : \ud835\udcd8 \u2191p'' \u2264 @Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL\n\u22a2 \u2203 p, \ud835\udcd8 p = @Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL \u2227 \u03d1 \u2208 \u03a9 p",
        "url": "https://github.com/fpvandoorn/carleson/blob/bcc07a3b1282c61371f9cc8748d1be4765325b7b/Carleson/Antichain/AntichainTileCount.lean#L569"
      },
      "metadata": {
        "blame_email_hash": "b2f50b2f722a",
        "blame_date": "2025-07-02T17:48:35+02:00",
        "inclusion_date": "2025-07-08T03:23:00.070461+00:00"
      },
      "id": "4a23c42aaef42958e15140637c53a3503dec45ee74120f9587cc38c59dbaf990"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "pitmonticone/code_of_conduct",
        "commit": "faee09f005172dc474f0b790aa128fc71c50542b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "FLT/Mathlib/Algebra/FixedPoints/Basic.lean",
        "start_line": 134,
        "start_column": 19,
        "end_line": 134,
        "end_column": 24
      },
      "debug_info": {
        "goal": "M : Type u_1\nA : Type u_2\nR : Type u_3\ninst\u271d\u2074 : CommRing R\ninst\u271d\u00b3 : AddCommGroup A\ninst\u271d\u00b2 : Module R A\ninst\u271d\u00b9 : DistribSMul M A\ninst\u271d : SMulCommClass M R A\n\u22a2 \u2200 (a : R),\n    @HSMul.hSMul R (@MulAction.FixedPoints M A inst\u271d\u00b9.toSMul) (@MulAction.FixedPoints M A inst\u271d\u00b9.toSMul) instHSMul a 0 =\n      0",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/faee09f005172dc474f0b790aa128fc71c50542b/FLT/Mathlib/Algebra/FixedPoints/Basic.lean#L134"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-05-31T23:45:42+01:00",
        "inclusion_date": "2025-06-17T04:57:20.745994+00:00"
      },
      "id": "a7d190bcb236f71470088a7912c7d1289c629aebead108cf15803b6d341760b3"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 54,
        "start_column": 29,
        "end_line": 54,
        "end_column": 34
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(#(A ^ 2)) \u2264 K * \u2191(#A)\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 g \u2229 A))}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191(#S) \u2264 K ^ 2 * \u2191(#A)\nF : Finset G\nhFA : F \u2286 A\nhFcard : \u2191(#F) \u2264 2 * K\nhASF : A \u2286 S * F\n\u22a2 \u2191(#(A * S ^ 3 * A\u207b\u00b9)) \u2264 8 * K ^ 11 * \u2191(#A)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L54"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "03aa836926fe6e9fa2eb93286d620ec46ac808bb6783d3f72983bf8b132889ef"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "51c6063c647276f7c01e848976e6721033829c90",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 6391,
        "start_column": 26,
        "end_line": 6391,
        "end_column": 31
      },
      "debug_info": {
        "goal": "c : \u211d := \u22ef\ncpos : 0 < c\nC : \u211d := \u22ef\nX\u2080 : \u211d := \u22ef\nX : \u211d\nX_ge_X\u2080 : X \u2265 X\u2080\nX_gt_3 : 3 < X\n\u03b5 : \u211d := \u22ef\n\u03b5_pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\n\u22a2 2 < X * \u03b5",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/51c6063c647276f7c01e848976e6721033829c90/PrimeNumberTheoremAnd/MediumPNT.lean#L6391"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-07-13T14:26:24-04:00",
        "inclusion_date": "2025-07-13T23:20:18.124737+00:00"
      },
      "id": "1161d77549fce3ccfa085bd81884d7bf59711e6c5c977a8a3c89cf4ce965e56a"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "58ff9ddb3f6bc3860fb0316cc210fca5d488ba62",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 52,
        "start_column": 77,
        "end_line": 52,
        "end_column": 82
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure volume\n\u22a2 I[\u2211 i, \u2211 j, \u2191\u2191i \u2022 Y (i, j) : \u2211 i, \u2211 j, (-\u2191\u2191i - \u2191\u2191j) \u2022 Y (i, j)|\u2211 i, \u2211 j, Y (i, j)] \u2264\n    4 * \u2191p.m ^ 2 * p.\u03b7 * multiTau p \u03a9 h\u03a9 X",
        "url": "https://github.com/teorth/pfr/blob/58ff9ddb3f6bc3860fb0316cc210fca5d488ba62/PFR/TorsionEndgame.lean#L52"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-09-30T22:19:50+00:00",
        "inclusion_date": "2025-07-05T05:06:27.171280+00:00"
      },
      "id": "b23070f31c708bfcc553ace91063b11114db301861b7c32ec85620dac04c2517"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "CM-local-ring-is-catenary",
        "commit": "289728ba8f6bc3aa92fe63ebf878ca37221f591a",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/RingTheory/CohenMacaulay/Catenary.lean",
        "start_line": 374,
        "start_column": 4,
        "end_line": 374,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case a\n\u03b9 : Type u_1\ninst\u271d\u00b9 : CompleteLattice \u2115\u221e\ninst\u271d : Nonempty \u03b9\ns : Set \u03b9\nhs : s.Nonempty\nf : \u03b9 \u2192 \u2115\u221e\nhf : BddAbove (Set.range f)\n\u22a2 \u2a06 i \u2208 s, \u2191(f i) \u2264 \u2a06 i, \u2191(\u2a06 (_ : i \u2208 s), f i)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/289728ba8f6bc3aa92fe63ebf878ca37221f591a/Mathlib/RingTheory/CohenMacaulay/Catenary.lean#L374"
      },
      "metadata": {
        "blame_email_hash": "4351a1f9903a",
        "blame_date": "2025-06-10T18:51:40+08:00",
        "inclusion_date": "2025-06-11T03:01:47.663859+00:00"
      },
      "id": "638309c0d60a5479e8148792b4a8606c4112b174fd28091c57beb0fd725ee50e"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 373,
        "start_column": 2,
        "end_line": 373,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : CommRing R\n\u03b9 : Type\ninst\u271d : Fintype \u03b9\nI : \u03b9 \u2192 Ideal R\nhI : \u2200 (i j : \u03b9), i \u2260 j \u2192 I i + I j = 1\ng : (i : \u03b9) \u2192 R \u29f8 I i\nf : \u03b9 \u2192 R\nhf : \u2200 (i : \u03b9), (Quotient.mk (I i)) (f i) = g i\ne : \u03b9 \u2192 R\nhe : \u2200 (i : \u03b9), (Quotient.mk (I i)) (e i) = 1 \u2227 \u2200 (j : \u03b9), j \u2260 i \u2192 (Quotient.mk (I j)) (e i) = 0\n\u22a2 \u2203 a, (@Ideal.chineseMap R inst\u271d\u00b9 \u03b9 I) a = g",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L373"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "7de7af60a6a6b05364ff715469f512a37a0e918c543d4ca9ac959ccdceedc06c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean",
        "start_line": 740,
        "start_column": 34,
        "end_line": 740,
        "end_column": 39
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Fintype L\ninst\u271d\u2076 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2075 : Field \ud835\udd3dq\ninst\u271d\u2074 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u00b3 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b2 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u00b9 : NeZero \u03d1\ninst\u271d : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\ni : Fin (\u2113 + 1)\nh\u271d : \u00ac\u2191i < \u2113\nh_i_eq_\u2113 : i = \u27e8\u2113, \u22ef\u27e9\n\u22a2 \u2113 - 1 < \u2113",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean#L740"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "cc2136d0611c4da60748c5d838fc0b7a446cba4d3afb90f2d3a69ddbb5eb517a"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "StringsCharges",
        "commit": "25c552a2c25a922bf5dbdb120a212ea73b365f5b",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "PhysLean/Electromagnetism/LorentzAction.lean",
        "start_line": 37,
        "start_column": 2,
        "end_line": 37,
        "end_column": 7
      },
      "debug_info": {
        "goal": "d : \u2115\ng : \u2191(LorentzGroup 3)\nE : ElectricField\nB : MagneticField\nx : SpaceTime\n\u22a2 \u2191(toElectricMagneticField.symm (SMul.smul g (E, B))) x =\n    ((realLorentzTensor.F.obj (IndexNotation.OverColor.mk ![realLorentzTensor.Color.up, realLorentzTensor.Color.up])).\u03c1\n        g)\n      (\u2191(toElectricMagneticField.symm (E, B)) x)",
        "url": "https://github.com/HEPLean/PhysLean/blob/25c552a2c25a922bf5dbdb120a212ea73b365f5b/PhysLean/Electromagnetism/LorentzAction.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-06-28T08:23:46+00:00",
        "inclusion_date": "2025-09-17T03:53:50.079672+00:00"
      },
      "id": "a64131502160bc4083a9c186b3b13625a6f19c375f18aff8a18ff165a16473c4"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1271,
        "start_column": 91,
        "end_line": 1271,
        "end_column": 96
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 \u00ac5 \u2223 \u2211 k \u2208 Finset.range (n + 1), (2 * n + 1).choose (2 * k + 1) * 2 ^ (3 * k)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L1271"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "2dcad727f0ff2b2deaa943786ac956cb8d9bf6c52e63f694b9d707846d8f8646"
    },
    {
      "repo": {
        "remote": "https://github.com/cmu-l3/llmlean",
        "branch": "kimina-pr",
        "commit": "126a6b2af37727c4d81bb49f6af6b354a380145e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LLMleanTest/Examples2.lean",
        "start_line": 74,
        "start_column": 2,
        "end_line": 74,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\nf : \u03b1 \u2192 \u03b2\ns t : Set \u03b1\nu v : Set \u03b2\nI : Type u_3\nA : I \u2192 Set \u03b1\nB : I \u2192 Set \u03b2\n\u22a2 f '' \u22c3 i, A i = \u22c3 i, f '' A i",
        "url": "https://github.com/cmu-l3/llmlean/blob/126a6b2af37727c4d81bb49f6af6b354a380145e/LLMleanTest/Examples2.lean#L74"
      },
      "metadata": {
        "blame_email_hash": "3ab0971ac342",
        "blame_date": "2024-07-23T17:17:09-04:00",
        "inclusion_date": "2025-06-11T03:39:01.065377+00:00"
      },
      "id": "8814fd78cc5c3ee260f933bf5e8ad9b5f0b258c8aaa98ced6c1bb34405c98b26"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_02.lean",
        "start_line": 223,
        "start_column": 34,
        "end_line": 223,
        "end_column": 39
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 \u2191n.factorial < chapter2.e * (\u2191n / chapter2.e) ^ n",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_02.lean#L223"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2024-09-22T09:48:51+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "b005fefa1065b1a6f9a12eabbe347e062530f668732a145e4acd7ed07c052ec6"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/2Derivatives.lean",
        "start_line": 87,
        "start_column": 2,
        "end_line": 87,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_2\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\ninst\u271d\u00b9 : DecidableEq n\ninst\u271d : NontriviallyNormedField R\nX : R \u2192 Matrix n n R\nhX : Differentiable R X\n\u22a2 (deriv fun a => (X a).det) = fun a => ((X a).adjugate * deriv X a).trace",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/2Derivatives.lean#L87"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2023-10-11T15:16:39+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "3ffe8cad70c4dee5140b3c27dbd73a2ff9d5ae11fc32dd4be38a33484d286dcb"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 6 - 2, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "af9433f7bed0a9d895eb5bcd10de53d73aad83db0529aa177255dce1f49e2872"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "D-provlogic",
        "commit": "502486d0cdcfe147471cfb5fb9a7145b41e37f87",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/D/Completeness.lean",
        "start_line": 101,
        "start_column": 4,
        "end_line": 101,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case intro.intro\nT : ArithmeticTheory\ninst\u271d\u00b2 : Theory.\u0394\u2081 T\ninst\u271d\u00b9 : \ud835\udddc\ud835\udeba\u2081 \u2aaf T\ninst\u271d : \u2115 \u22a7\u2098* T\nU : ArithmeticTheory\neU : T + \u2191(LO.FirstOrder.ArithmeticTheory.LocalReflection T inst\u271d\u00b2 (Arithmetic.Hierarchy \ud835\udeba 1)) = U\nA : Modal.Formula \u2115\nh : \u2200 (f : T.StandardRealization), T \u22a2!. \u2191f A.dzSubformula.conj \u279d \u2191f A\nf : T.StandardRealization\nthis\u271d : T \u22a2!. \u2191f A.dzSubformula.conj \u279d \u2191f A\nthis : U \u22a2!. \u2191f A.dzSubformula.conj \u279d \u2191f A\ns : Finset (Modal.Formula \u2115)\nhs : s \u2286 Finset.prebox A.subformulas\n\u22a2 U \u22a2!. \u2191f (\u25a1s.box.disj) \u279d \u2191f s.box.disj",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/502486d0cdcfe147471cfb5fb9a7145b41e37f87/Foundation/ProvabilityLogic/D/Completeness.lean#L101"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-09-11T00:07:47+09:00",
        "inclusion_date": "2025-09-12T03:28:19.860470+00:00"
      },
      "id": "01ad5a39bbb6fdd6940e7d8549c581a7c3e692ee10fdc54e0792d0412dba2a4b"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "ineq_6_3_30",
        "commit": "bcc07a3b1282c61371f9cc8748d1be4765325b7b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainTileCount.lean",
        "start_line": 585,
        "start_column": 2,
        "end_line": 585,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Set (\ud835\udd13 X)\n\u03d1 : \u0398 X\nN : \u2115\nL : Grid X\nhL : L \u2208 @Antichain.\ud835\udcdb' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N\n\u22a2 volume (E\u2082 (2 ^ (N + 3)) (@Antichain.p'' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL)) \u2264\n    2 ^ (a * N + a * 3) * (dens\u2081 \ud835\udd04 * volume \u2191(@Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL))",
        "url": "https://github.com/fpvandoorn/carleson/blob/bcc07a3b1282c61371f9cc8748d1be4765325b7b/Carleson/Antichain/AntichainTileCount.lean#L585"
      },
      "metadata": {
        "blame_email_hash": "b2f50b2f722a",
        "blame_date": "2025-07-02T17:48:35+02:00",
        "inclusion_date": "2025-07-08T03:23:00.070461+00:00"
      },
      "id": "3bad4e0caeed72f6de0c79553728fc83e6e1b1017ac37be02f51abeca62921e5"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "pitmonticone/add_lean-action",
        "commit": "56d140fd9d66920231c780a25a004f3144ab7740",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "FLT/Mathlib/Topology/Algebra/RestrictedProduct.lean",
        "start_line": 369,
        "start_column": 4,
        "end_line": 369,
        "end_column": 9
      },
      "debug_info": {
        "goal": "\u03b9\u271d\u00b9 : Type u_1\n\u2131\u271d : Filter \u03b9\u271d\u00b9\nG : \u03b9\u271d\u00b9 \u2192 Type u_2\nH : \u03b9\u271d\u00b9 \u2192 Type u_3\nC\u271d : (i : \u03b9\u271d\u00b9) \u2192 Set (G i)\nD : (i : \u03b9\u271d\u00b9) \u2192 Set (H i)\n\u03b9\u271d : Type u_4\n\u2131 : Filter \u03b9\u271d\nn : Type u_5\ninst\u271d\u2075 : Fintype n\nA\u271d : n \u2192 \u03b9\u271d \u2192 Type u_6\nC : (j : n) \u2192 (i : \u03b9\u271d) \u2192 Set (A\u271d j i)\n\u03b9 : Type u_7\nM : \u03b9 \u2192 Type u_8\ninst\u271d\u2074 : (i : \u03b9) \u2192 Monoid (M i)\ninst\u271d\u00b3 : (i : \u03b9) \u2192 TopologicalSpace (M i)\ninst\u271d\u00b2 : \u2200 (i : \u03b9), ContinuousMul (M i)\nS : \u03b9 \u2192 Type u_9\ninst\u271d\u00b9 : (i : \u03b9) \u2192 SetLike (S i) (M i)\ninst\u271d : \u2200 (i : \u03b9), SubmonoidClass (S i) (M i)\nA : (i : \u03b9) \u2192 S i\nhA : \u2200 (i : \u03b9), IsOpen \u2191(A i)\nthis\u271d : Fact (\u2200 (i : \u03b9), IsOpen \u2191(A i))\nthis : Fact (\u2200 (i : \u03b9), IsOpen \u2191(Submonoid.ofClass (A i)).units)\n\u22a2 ContinuousAt (\u21d1(MulEquiv.toMonoidHom (@MulEquiv.restrictedProductUnits \u03b9 cofinite M inst\u271d\u2074 S inst\u271d\u00b9 inst\u271d A))) 1",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/56d140fd9d66920231c780a25a004f3144ab7740/FLT/Mathlib/Topology/Algebra/RestrictedProduct.lean#L369"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-05-31T23:45:42+01:00",
        "inclusion_date": "2025-06-21T04:49:21.621812+00:00"
      },
      "id": "827599484cf4e56b7b705faec0ecc2ecb8c67e3fed0b3594b46eba7228b0ab79"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "99a77d19845fb8083456331fd1256bf35a48f60c",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 24,
        "start_column": 6,
        "end_line": 24,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case refine_2\n\u03b9 : Type u_2\nG : \u03b9 \u2192 Type u_3\ninst\u271d\u00b9 : Fintype \u03b9\ninst\u271d : (i : \u03b9) \u2192 Group (G i)\nA : (i : \u03b9) \u2192 Set (G i)\nK : \u03b9 \u2192 \u211d\nhA : \u2200 (i : \u03b9), IsApproximateSubgroup (K i) (A i)\nF : (i : \u03b9) \u2192 Finset (G i)\nhF : \u2200 (i : \u03b9), \u2191(F i).card \u2264 K i\nhFS : \u2200 (i : \u03b9), A i ^ 2 \u2286 \u2191(F i) \u2022 A i\n\u22a2 Set.univ.pi A ^ 2 \u2286 \u2191(Fintype.piFinset F) \u2022 Set.univ.pi A",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/99a77d19845fb8083456331fd1256bf35a48f60c/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L24"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-09-08T22:03:06.847248+00:00"
      },
      "id": "df044a41cb967ef02d9b7a9a19b6d2843dfc6e7fb1e4d57546653ec034109818"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "51c6063c647276f7c01e848976e6721033829c90",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 6422,
        "start_column": 29,
        "end_line": 6422,
        "end_column": 34
      },
      "debug_info": {
        "goal": "c : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\nX\u2080 : \u211d := sorry\nX : \u211d\nX_ge_X\u2080 : X \u2265 X\u2080\nX_gt_3 : 3 < X\n\u03b5 : \u211d := sorry\n\u03b5_pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\n\u03b5_X : 2 < X * \u03b5\n\u03bd : \u211d \u2192 \u211d\nContDiff\u03bd : ContDiff \u211d (\u2191\u22a4) \u03bd\n\u03bd_nonneg' : \u2200 (x : \u211d), 0 \u2264 \u03bd x\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\n\u03bd_massOne' : \u222b (x : \u211d) in Ici 0, \u03bd x / x = 1\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\n\u03c8_\u03b5_of_X : \u2102 := SmoothedChebyshev \u03bd \u03b5 X\nC_unsmoothing : \u211d\nC_unsmoothing_pos : C_unsmoothing > 0\n\u03c8_\u03c8_\u03b5_diff : \u2016\u2191(ChebyshevPsi X) - \u03c8_\u03b5_of_X\u2016 \u2264 C_unsmoothing * X * \u03b5 * Real.log X\nT : \u211d := sorry\nT_gt_3 : 3 < T\nA : \u211d\nA_in_Ioc : A \u2208 Ioc 0 (1 / 2)\nholo1 :\n  HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (Icc (1 - A / Real.log T ^ 9) 2 \u00d7\u2102 Icc (-T) T \\ {1})\n\u03c3\u2081 : \u211d := 1 - A / Real.log T ^ 9\n\u03c3\u2081pos : 0 < \u03c3\u2081\n\u03c3\u2081_lt_one : \u03c3\u2081 < 1\n\u03c3\u2082' : \u211d\n\u03c3\u2082'_lt_one : \u03c3\u2082' < 1\nholo2' : HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (uIcc \u03c3\u2082' 2 \u00d7\u2102 uIcc (-3) 3 \\ {1})\n\u03c3\u2082 : \u211d := max \u03c3\u2082' (1 / 2)\n\u22a2 0 < \u03c3\u2082",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/51c6063c647276f7c01e848976e6721033829c90/PrimeNumberTheoremAnd/MediumPNT.lean#L6422"
      },
      "metadata": {
        "blame_email_hash": "bee09f470e62",
        "blame_date": "2025-07-13T09:44:34+01:00",
        "inclusion_date": "2025-07-13T23:20:18.124737+00:00"
      },
      "id": "f9bd5b5880a63595710ed8defaf7de445dc7d0f66e884e46ac06684e0382c797"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "58ff9ddb3f6bc3860fb0316cc210fca5d488ba62",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 54,
        "start_column": 77,
        "end_line": 54,
        "end_column": 82
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure volume\n\u22a2 I[\u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j) : \u2211 i, \u2211 j, (-\u2191\u2191i - \u2191\u2191j) \u2022 Y (i, j)|\u2211 i, \u2211 j, Y (i, j)] \u2264\n    4 * \u2191p.m ^ 2 * p.\u03b7 * multiTau p \u03a9 h\u03a9 X",
        "url": "https://github.com/teorth/pfr/blob/58ff9ddb3f6bc3860fb0316cc210fca5d488ba62/PFR/TorsionEndgame.lean#L54"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-09-30T22:19:50+00:00",
        "inclusion_date": "2025-07-05T05:06:27.171280+00:00"
      },
      "id": "7974bb0a857eb7fda9277e4ca9afd342c52f3952acd4351994517d799ce06400"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "CM-local-ring-is-catenary",
        "commit": "289728ba8f6bc3aa92fe63ebf878ca37221f591a",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/RingTheory/CohenMacaulay/Catenary.lean",
        "start_line": 371,
        "start_column": 75,
        "end_line": 371,
        "end_column": 80
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\ninst\u271d\u00b9 : CompleteLattice \u2115\u221e\ninst\u271d : Nonempty \u03b9\ns : Set \u03b9\nhs : s.Nonempty\nf : \u03b9 \u2192 \u2115\u221e\nhf : BddAbove (Set.range f)\ni : \u03b9\n\u22a2 \u2191(\u2a06 (_ : i \u2208 s), f i) \u2264 \u2a06 i \u2208 s, \u2191(f i)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/289728ba8f6bc3aa92fe63ebf878ca37221f591a/Mathlib/RingTheory/CohenMacaulay/Catenary.lean#L371"
      },
      "metadata": {
        "blame_email_hash": "4351a1f9903a",
        "blame_date": "2025-06-10T18:51:40+08:00",
        "inclusion_date": "2025-06-11T03:01:47.663859+00:00"
      },
      "id": "3e8ac31d18976359f2767f8fba3b5c6ed34cd7340de984bcbdf22362a42d4cc4"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "65f9a265db8ee0a8060b0eb706b5a1f47080a4c0",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 138,
        "start_column": 4,
        "end_line": 138,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type ?u.16946\ninst\u271d : CommRing R\nI J : Ideal R\n\u22a2 \u2200 {a b : R}, a \u2208 \u2191I \u2229 \u2191J \u2192 b \u2208 \u2191I \u2229 \u2191J \u2192 a + b \u2208 \u2191I \u2229 \u2191J",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/65f9a265db8ee0a8060b0eb706b5a1f47080a4c0/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L138"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-07-31T00:17:46.358869+00:00"
      },
      "id": "be8a3ad30781c82a1d6e4ee7c0f79b921ce21e8a6e72bbf0e782c9e002f478da"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean",
        "start_line": 42,
        "start_column": 36,
        "end_line": 42,
        "end_column": 41
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Fintype L\ninst\u271d\u2076 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2075 : Field \ud835\udd3dq\ninst\u271d\u2074 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u00b3 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b2 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u00b9 : NeZero \u03d1\ninst\u271d : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\ni : Fin r\n\u22a2 \u2191i + 1 < r",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean#L42"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "0dfcaf2a093ad8f55e6573112faea2352f077a02747a77b88ac1e222b81137fd"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "master",
        "commit": "8718a75c1dbbbdc338836c1b5f7d47c12571b3ea",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "PhysLean/ClassicalMechanics/HarmonicOscillator/Solution.lean",
        "start_line": 368,
        "start_column": 38,
        "end_line": 368,
        "end_column": 43
      },
      "debug_info": {
        "goal": "S : HarmonicOscillator\nIC : ClassicalMechanics.HarmonicOscillator.InitialConditions\n\u22a2 EquationOfMotion (ClassicalMechanics.HarmonicOscillator.sol S IC)",
        "url": "https://github.com/HEPLean/PhysLean/blob/8718a75c1dbbbdc338836c1b5f7d47c12571b3ea/PhysLean/ClassicalMechanics/HarmonicOscillator/Solution.lean#L368"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-06-28T08:23:46+00:00",
        "inclusion_date": "2025-09-14T03:35:49.340182+00:00"
      },
      "id": "9abae5270ac5eaec1a958af6d8b3491d90419a3d6f200b7d28e4d4133ece4693"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1321,
        "start_column": 87,
        "end_line": 1321,
        "end_column": 92
      },
      "debug_info": {
        "goal": "a : \u2115 \u2192 NNReal\nh\u2080 : \u2211 x \u2208 Finset.range 100, a (x + 1) ^ 2 = 1\n\u22a2 \u2211 x \u2208 Finset.range 99, a (x + 1) ^ 2 * a (x + 2) + a 100 ^ 2 * a 1 < 12 / 25",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L1321"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "3bbd6c1dde3e61723eaff2b14cc2cbcea393c96e8a8778cf09018b170a88cf2a"
    },
    {
      "repo": {
        "remote": "https://github.com/cmu-l3/llmlean",
        "branch": "kimina-pr",
        "commit": "126a6b2af37727c4d81bb49f6af6b354a380145e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LLMleanTest/Examples2.lean",
        "start_line": 77,
        "start_column": 2,
        "end_line": 77,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\nf : \u03b1 \u2192 \u03b2\ns t : Set \u03b1\nu v : Set \u03b2\nI : Type u_3\nA : I \u2192 Set \u03b1\nB : I \u2192 Set \u03b2\n\u22a2 f '' \u22c2 i, A i \u2286 \u22c2 i, f '' A i",
        "url": "https://github.com/cmu-l3/llmlean/blob/126a6b2af37727c4d81bb49f6af6b354a380145e/LLMleanTest/Examples2.lean#L77"
      },
      "metadata": {
        "blame_email_hash": "3ab0971ac342",
        "blame_date": "2024-07-23T17:17:09-04:00",
        "inclusion_date": "2025-06-11T03:39:01.065377+00:00"
      },
      "id": "c622d9268b284be94b99d2c65d83a2b4b8e6c4c3dbed82028e0edc5f9d1fa23e"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_44.lean",
        "start_line": 106,
        "start_column": 74,
        "end_line": 106,
        "end_column": 79
      },
      "debug_info": {
        "goal": "V : Type u\ninst\u271d\u00b9 : Fintype V\nG : SimpleGraph V\ninst\u271d : Nonempty V\nh : \u2200 \u2983v w : V\u2984, v \u2260 w \u2192 Fintype.card \u2191(G.commonNeighbors v w) = 1\nno_politician : \u00ac\u2203 v, \u2200 (w : V), v \u2260 w \u2192 G.Adj v w\nlemma\u2081 : \u2203 k, G.IsRegularOfDegree k\nk : \u2115\nhregular : G.IsRegularOfDegree k\nn : \u2115 := Fintype.card V\neq\u2081 : n = k ^ 2 - k + 1\nthis : 2 < k\nA : Matrix V V \u211d := adjMatrix \u211d G\n\u22a2 A ^ 2 = (k - 1) \u2022 1 + of fun x x => 1",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_44.lean#L106"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2024-09-18T14:12:57+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "7d22f28e43cc8645dded55448b90e92509655ec9c22510e1655cb60b37a29f71"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/2Derivatives.lean",
        "start_line": 91,
        "start_column": 2,
        "end_line": 91,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_2\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\ninst\u271d\u00b9 : DecidableEq n\ninst\u271d : NontriviallyNormedField R\nX : R \u2192 Matrix n n R\nhX : Differentiable R X\n\u22a2 (deriv fun a => (X a).det) = fun a => (X a).det \u2022 ((X a)\u207b\u00b9 * deriv X a).trace",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/2Derivatives.lean#L91"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2023-10-11T15:16:39+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "84e191d61748fcfc27e7abda77b9c9080c4fdccb5ef902c76abb3387671b43c9"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 7 - 2, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "73e6d2fd67880eb6c7e484c80eaf8611165d09d86dd77e565d8ece38f823b53c"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "zfc-axiom",
        "commit": "47bca9e8b9346cf4297b1dd73f39951c727612fd",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Foundation/Modal/Kripke/Logic/S4H.lean",
        "start_line": 50,
        "start_column": 60,
        "end_line": 50,
        "end_column": 65
      },
      "debug_info": {
        "goal": "\u22a2 Complete Hilbert.S4H LO.Modal.Kripke.FrameClass.finite_S4H",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/47bca9e8b9346cf4297b1dd73f39951c727612fd/Foundation/Modal/Kripke/Logic/S4H.lean#L50"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-07-09T22:09:16+09:00",
        "inclusion_date": "2025-09-18T03:51:26.203441+00:00"
      },
      "id": "59874817f741c85eedd1c67276e5ae145b18d105b297e2ec339cdbb78ff800b1"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "ineq_6_3_30",
        "commit": "50d8e9adca7e109fca68ac5572b4e515a70ae9a0",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainTileCount.lean",
        "start_line": 705,
        "start_column": 21,
        "end_line": 705,
        "end_column": 26
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Finset (\ud835\udd13 X)\n\u03d1 : \u0398 X\nN : \u2115\n\u22a2 defaultS X \u2260 0",
        "url": "https://github.com/fpvandoorn/carleson/blob/50d8e9adca7e109fca68ac5572b4e515a70ae9a0/Carleson/Antichain/AntichainTileCount.lean#L705"
      },
      "metadata": {
        "blame_email_hash": "b2f50b2f722a",
        "blame_date": "2025-06-30T16:39:47+02:00",
        "inclusion_date": "2025-07-03T03:51:24.001986+00:00"
      },
      "id": "6069dd9ef02b60247bea525e688a60d365f5a3d912bb929f13b2815367de0934"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "pitmonticone/add_lean-action",
        "commit": "56d140fd9d66920231c780a25a004f3144ab7740",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "FLT/Mathlib/Topology/Algebra/RestrictedProduct.lean",
        "start_line": 374,
        "start_column": 4,
        "end_line": 374,
        "end_column": 9
      },
      "debug_info": {
        "goal": "\u03b9\u271d\u00b9 : Type u_1\n\u2131\u271d : Filter \u03b9\u271d\u00b9\nG : \u03b9\u271d\u00b9 \u2192 Type u_2\nH : \u03b9\u271d\u00b9 \u2192 Type u_3\nC\u271d : (i : \u03b9\u271d\u00b9) \u2192 Set (G i)\nD : (i : \u03b9\u271d\u00b9) \u2192 Set (H i)\n\u03b9\u271d : Type u_4\n\u2131 : Filter \u03b9\u271d\nn : Type u_5\ninst\u271d\u2075 : Fintype n\nA\u271d : n \u2192 \u03b9\u271d \u2192 Type u_6\nC : (j : n) \u2192 (i : \u03b9\u271d) \u2192 Set (A\u271d j i)\n\u03b9 : Type u_7\nM : \u03b9 \u2192 Type u_8\ninst\u271d\u2074 : (i : \u03b9) \u2192 Monoid (M i)\ninst\u271d\u00b3 : (i : \u03b9) \u2192 TopologicalSpace (M i)\ninst\u271d\u00b2 : \u2200 (i : \u03b9), ContinuousMul (M i)\nS : \u03b9 \u2192 Type u_9\ninst\u271d\u00b9 : (i : \u03b9) \u2192 SetLike (S i) (M i)\ninst\u271d : \u2200 (i : \u03b9), SubmonoidClass (S i) (M i)\nA : (i : \u03b9) \u2192 S i\nhA : \u2200 (i : \u03b9), IsOpen \u2191(A i)\nthis\u271d : Fact (\u2200 (i : \u03b9), IsOpen \u2191(A i))\nthis : Fact (\u2200 (i : \u03b9), IsOpen \u2191(Submonoid.ofClass (A i)).units)\n\u22a2 ContinuousAt (\u21d1(MulEquiv.symm (@MulEquiv.restrictedProductUnits \u03b9 cofinite M inst\u271d\u2074 S inst\u271d\u00b9 inst\u271d A)).toMonoidHom) 1",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/56d140fd9d66920231c780a25a004f3144ab7740/FLT/Mathlib/Topology/Algebra/RestrictedProduct.lean#L374"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-05-31T23:45:42+01:00",
        "inclusion_date": "2025-06-21T04:49:21.621812+00:00"
      },
      "id": "12b21bf4e1dd49c8abe971b6869678e42b3c374ccf819cae2836b9e76c289926"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "99a77d19845fb8083456331fd1256bf35a48f60c",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 42,
        "start_column": 64,
        "end_line": 42,
        "end_column": 69
      },
      "debug_info": {
        "goal": "case h\nG : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(A ^ 2).card \u2264 K * \u2191A.card\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191A.card / (2 * K) \u2264 \u2191(MulOpposite.op g \u2022 A \u2229 A).card}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\na\u271d : G\n\u22a2 a\u271d \u2208 A\u207b\u00b9 * A \u2192\n    (\u2191A.card / (2 * K) \u2264 \u2191((MulOpposite.op a\u271d)\u207b\u00b9 \u2022 A \u2229 A).card \u2194 \u2191A.card / (2 * K) \u2264 \u2191(MulOpposite.op a\u271d \u2022 A \u2229 A).card)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/99a77d19845fb8083456331fd1256bf35a48f60c/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L42"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-09-08T22:03:06.847248+00:00"
      },
      "id": "29272195a454196a379e6a96746067c08c95e99c2502f5b39f514558b993cacb"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "51c6063c647276f7c01e848976e6721033829c90",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 6425,
        "start_column": 32,
        "end_line": 6425,
        "end_column": 37
      },
      "debug_info": {
        "goal": "c : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\nX\u2080 : \u211d := sorry\nX : \u211d\nX_ge_X\u2080 : X \u2265 X\u2080\nX_gt_3 : 3 < X\n\u03b5 : \u211d := sorry\n\u03b5_pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\n\u03b5_X : 2 < X * \u03b5\n\u03bd : \u211d \u2192 \u211d\nContDiff\u03bd : ContDiff \u211d (\u2191\u22a4) \u03bd\n\u03bd_nonneg' : \u2200 (x : \u211d), 0 \u2264 \u03bd x\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\n\u03bd_massOne' : \u222b (x : \u211d) in Ici 0, \u03bd x / x = 1\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\n\u03c8_\u03b5_of_X : \u2102 := SmoothedChebyshev \u03bd \u03b5 X\nC_unsmoothing : \u211d\nC_unsmoothing_pos : C_unsmoothing > 0\n\u03c8_\u03c8_\u03b5_diff : \u2016\u2191(ChebyshevPsi X) - \u03c8_\u03b5_of_X\u2016 \u2264 C_unsmoothing * X * \u03b5 * Real.log X\nT : \u211d := sorry\nT_gt_3 : 3 < T\nA : \u211d\nA_in_Ioc : A \u2208 Ioc 0 (1 / 2)\nholo1 :\n  HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (Icc (1 - A / Real.log T ^ 9) 2 \u00d7\u2102 Icc (-T) T \\ {1})\n\u03c3\u2081 : \u211d := 1 - A / Real.log T ^ 9\n\u03c3\u2081pos : 0 < \u03c3\u2081\n\u03c3\u2081_lt_one : \u03c3\u2081 < 1\n\u03c3\u2082' : \u211d\n\u03c3\u2082'_lt_one : \u03c3\u2082' < 1\nholo2' : HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (uIcc \u03c3\u2082' 2 \u00d7\u2102 uIcc (-3) 3 \\ {1})\n\u03c3\u2082 : \u211d := max \u03c3\u2082' (1 / 2)\n\u03c3\u2082_pos : 0 < \u03c3\u2082\n\u03c3\u2082_lt_one : \u03c3\u2082 < 1\nholo2 : HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (uIcc \u03c3\u2082 2 \u00d7\u2102 uIcc (-3) 3 \\ {1})\n\u22a2 \u03c3\u2082 < \u03c3\u2081",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/51c6063c647276f7c01e848976e6721033829c90/PrimeNumberTheoremAnd/MediumPNT.lean#L6425"
      },
      "metadata": {
        "blame_email_hash": "bee09f470e62",
        "blame_date": "2025-07-13T09:44:34+01:00",
        "inclusion_date": "2025-07-13T23:20:18.124737+00:00"
      },
      "id": "e4d8b09b3d44c7c616eb31a55f4148ef988ae29e4650a7e76cd85214d2f4be43"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/MultiTauFunctional.lean",
        "start_line": 57,
        "start_column": 222,
        "end_line": 57,
        "end_column": 227
      },
      "debug_info": {
        "goal": "G \u03a9\u2080 : Type u\ninst\u271d\u00b9 : MeasureableFinGroup G\ninst\u271d : MeasureSpace \u03a9\u2080\np : multiRefPackage G \u03a9\u2080\n\u22a2 \u2203 \u03a9 h\u03a9 X, multiTauMinimizes p \u03a9 h\u03a9 X",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MultiTauFunctional.lean#L57"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-08-18T19:14:43-07:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "046a4809402ab4f13c0d6b2294f7b92b3ade7aee4fc484f440dc900a17c4a088"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "CM-local-ring-is-catenary",
        "commit": "289728ba8f6bc3aa92fe63ebf878ca37221f591a",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/RingTheory/CohenMacaulay/Catenary.lean",
        "start_line": 402,
        "start_column": 4,
        "end_line": 402,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case a\nR : Type u\ninst\u271d : CommRing R\nI : Ideal R\nhI : I \u2260 \u22a4\nthis\u271d : Nontrivial (R \u29f8 I)\nthis : Nonempty \u2191I.minimalPrimes\n\u22a2 \u2a06 i, \u2191(@nonnegRingKrullDim (R \u29f8 \u2191i) (Quotient.commSemiring \u2191i)) \u2264 ringKrullDim (R \u29f8 I)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/289728ba8f6bc3aa92fe63ebf878ca37221f591a/Mathlib/RingTheory/CohenMacaulay/Catenary.lean#L402"
      },
      "metadata": {
        "blame_email_hash": "4351a1f9903a",
        "blame_date": "2025-06-10T18:51:40+08:00",
        "inclusion_date": "2025-06-11T03:01:47.663859+00:00"
      },
      "id": "7a1b55c2ea0d0dba217668b727eb4aafb889118060cb8bb420fd60245c48d860"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "65f9a265db8ee0a8060b0eb706b5a1f47080a4c0",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 140,
        "start_column": 4,
        "end_line": 140,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type ?u.16946\ninst\u271d : CommRing R\nI J : Ideal R\n\u22a2 0 \u2208 \u2191I \u2229 \u2191J",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/65f9a265db8ee0a8060b0eb706b5a1f47080a4c0/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L140"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-07-31T00:17:46.358869+00:00"
      },
      "id": "beb684e28cfe660462ae8658cffc89cba77e6d1b09ab8e808ce6e78a48d49ce7"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean",
        "start_line": 46,
        "start_column": 36,
        "end_line": 46,
        "end_column": 41
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Fintype L\ninst\u271d\u2076 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2075 : Field \ud835\udd3dq\ninst\u271d\u2074 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u00b3 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b2 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u00b9 : NeZero \u03d1\ninst\u271d : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\ni : Fin r\ny : \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i + 1, \u22ef\u27e9)\nk : \ud835\udd3dq\n\u22a2 \u2191i + 1 < r",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "5fd38bb5ec3dcc1c9fa9d5251fc6505a4b614c569298a511d314ad49bb58b54f"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "master",
        "commit": "0354f43f69bbed2cee82d56feb18a99d31f3fbe6",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PhysLean/ClassicalMechanics/HarmonicOscillator/Solution.lean",
        "start_line": 306,
        "start_column": 23,
        "end_line": 306,
        "end_column": 28
      },
      "debug_info": {
        "goal": "S : HarmonicOscillator\nIC : ClassicalMechanics.HarmonicOscillator.InitialConditions\nx : Time \u2192 \u211d\n\u22a2 EquationOfMotion x \u2227\n      x 0 = ClassicalMechanics.HarmonicOscillator.InitialConditions.x\u2080 IC \u2227\n        deriv x 0 = ClassicalMechanics.HarmonicOscillator.InitialConditions.v\u2080 IC \u2192\n    x = ClassicalMechanics.HarmonicOscillator.sol S IC",
        "url": "https://github.com/HEPLean/PhysLean/blob/0354f43f69bbed2cee82d56feb18a99d31f3fbe6/PhysLean/ClassicalMechanics/HarmonicOscillator/Solution.lean#L306"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-06-28T08:23:46+00:00",
        "inclusion_date": "2025-07-22T00:02:57.650744+00:00"
      },
      "id": "a54b2f7866ccf83a335824a207978b0872ff10894bdde12ca3f5b543fb57b38a"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 358,
        "start_column": 62,
        "end_line": 358,
        "end_column": 67
      },
      "debug_info": {
        "goal": "u : \u2115 \u2192 \u2115\nh\u2080 : u 0 = 4\nh\u2081 : u 1 = 7\nh\u2082 : \u2200 n \u2265 2, u (n + 2) = (u n + u (n + 1)) % 10\n\u22a2 \u2200 (n : \u2115), \u2211 k \u2208 Finset.range n, u k > 10000 \u2192 1999 \u2264 n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Valid.lean#L358"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "4ad805bc5754d957cf306b985a5bc08c5a515cb2a1188cdc93e78c4346134db3"
    },
    {
      "repo": {
        "remote": "https://github.com/cmu-l3/llmlean",
        "branch": "kimina-pr",
        "commit": "126a6b2af37727c4d81bb49f6af6b354a380145e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LLMleanTest/Examples2.lean",
        "start_line": 80,
        "start_column": 2,
        "end_line": 80,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\nf : \u03b1 \u2192 \u03b2\ns t : Set \u03b1\nu v : Set \u03b2\nI : Type u_3\nA : I \u2192 Set \u03b1\nB : I \u2192 Set \u03b2\ni : I\ninjf : Injective f\n\u22a2 \u22c2 i, f '' A i \u2286 f '' \u22c2 i, A i",
        "url": "https://github.com/cmu-l3/llmlean/blob/126a6b2af37727c4d81bb49f6af6b354a380145e/LLMleanTest/Examples2.lean#L80"
      },
      "metadata": {
        "blame_email_hash": "3ab0971ac342",
        "blame_date": "2024-07-23T17:17:09-04:00",
        "inclusion_date": "2025-06-11T03:39:01.065377+00:00"
      },
      "id": "befe63ea5ec4175b75f320946d7f1ec2da77a2300eb958f726f890626894d00a"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_01.lean",
        "start_line": 185,
        "start_column": 43,
        "end_line": 185,
        "end_column": 48
      },
      "debug_info": {
        "goal": "n : \u2115\nx : \u211d\nhxge : x \u2265 \u2191n\nhxlt : x < \u2191n + 1\n\u22a2 \u2211 k \u2208 Icc 1 n, (\u2191k)\u207b\u00b9 \u2264 \u2211' (m : \u2191(S\u2081 x)), (\u2191\u2191m)\u207b\u00b9",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_01.lean#L185"
      },
      "metadata": {
        "blame_email_hash": "f543dc622a62",
        "blame_date": "2024-05-04T20:26:32+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "ae3264d6665e0d7fa83f6c3122b1ba92de163695a80040dd2951bbb6a3f1b912"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/2Derivatives.lean",
        "start_line": 95,
        "start_column": 2,
        "end_line": 95,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b9 : Fintype n\ninst\u271d : DecidableEq n\nX : \u211d \u2192 Matrix n n \u211d\nhX : Differentiable \u211d X\n\u22a2 (deriv fun a => Real.log (X a).det) = fun a => ((X a)\u207b\u00b9 * deriv X a).trace",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/2Derivatives.lean#L95"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2023-10-11T15:16:39+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "0b69fc8a55428f6fe8bed3237ef72341a6c7c64180c8659ae53b9f44c3035999"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 8 - 2, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "223af2772f141d557e778e97d00ee9d2f291296553ab3b67d4695be70854888b"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "zfc-axiom",
        "commit": "47bca9e8b9346cf4297b1dd73f39951c727612fd",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Foundation/Modal/Maximal/Makinson.lean",
        "start_line": 32,
        "start_column": 33,
        "end_line": 32,
        "end_column": 38
      },
      "debug_info": {
        "goal": "L : Logic \u2115\ninst\u271d\u00b9 : L.IsNormal\ninst\u271d : Consistent L\n\u03c6 : Formula \u2115\nhL : L \u22a2! \u03c6\nhV : Modal.Ver \u22ac \u03c6\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K.logic \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis : L \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nh\u03b3L : \u03b3 \u2208 L\n\u22a2 \u03b3 \u2209 Modal.Ver",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/47bca9e8b9346cf4297b1dd73f39951c727612fd/Foundation/Modal/Maximal/Makinson.lean#L32"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-07-09T00:31:11+09:00",
        "inclusion_date": "2025-09-18T03:51:26.203441+00:00"
      },
      "id": "a03247f2112c2554cf4dda6839548724b7c8805ab753dbed164bb268fa2ec6ec"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "ineq_6_3_30",
        "commit": "50d8e9adca7e109fca68ac5572b4e515a70ae9a0",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainTileCount.lean",
        "start_line": 534,
        "start_column": 2,
        "end_line": 534,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d\u00b9 : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Finset (\ud835\udd13 X)\n\u03d1 : \u0398 X\nN : \u2115\nhS0 : defaultS X \u2260 0\nL : Grid X\nhL : L \u2208 @Antichain.\ud835\udcdb' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b3 inst\u271d\u00b2 inst\u271d\u00b9 \ud835\udd04 \u03d1 N\ninst\u271d : DecidablePred fun p => \u00ac\ud835\udcd8 p = @Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b3 inst\u271d\u00b2 inst\u271d\u00b9 \ud835\udd04 \u03d1 N hS0 L hL\n\u22a2 \u2211 p \u2208 @Antichain.\ud835\udd04' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b3 inst\u271d\u00b2 inst\u271d\u00b9 \ud835\udd04 \u03d1 N with\n      \u00ac\ud835\udcd8 p = @Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b3 inst\u271d\u00b2 inst\u271d\u00b9 \ud835\udd04 \u03d1 N hS0 L hL, volume (E p \u2229 G \u2229 \u2191L) \u2264\n    volume (E\u2082 (2 ^ (N + 3)) (@Antichain.p'' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b3 inst\u271d\u00b2 inst\u271d\u00b9 \ud835\udd04 \u03d1 N hS0 L hL))",
        "url": "https://github.com/fpvandoorn/carleson/blob/50d8e9adca7e109fca68ac5572b4e515a70ae9a0/Carleson/Antichain/AntichainTileCount.lean#L534"
      },
      "metadata": {
        "blame_email_hash": "b2f50b2f722a",
        "blame_date": "2025-06-30T14:55:27+02:00",
        "inclusion_date": "2025-07-03T03:51:24.001986+00:00"
      },
      "id": "549a3a1ecd98e1844dcbc2aaff8b5506888b1161e3f25e0e6f84da3ac812aecd"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "05b60707d49bf88267ed63630b0544829c139ce9",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "FLT/Mathlib/Topology/Algebra/Group/Units.lean",
        "start_line": 12,
        "start_column": 2,
        "end_line": 12,
        "end_column": 7
      },
      "debug_info": {
        "goal": "M : Type u_1\ninst\u271d\u00b3 : TopologicalSpace M\ninst\u271d\u00b2 : Monoid M\ninst\u271d\u00b9 : ContinuousMul M\ninst\u271d : T2Space M\nU : Submonoid M\nhU : IsCompact \u2191U\n\u22a2 IsCompact \u2191U.units",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/05b60707d49bf88267ed63630b0544829c139ce9/FLT/Mathlib/Topology/Algebra/Group/Units.lean#L12"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-05-31T23:45:42+01:00",
        "inclusion_date": "2025-06-24T04:11:21.561950+00:00"
      },
      "id": "480b6bfadfb74e651ab39fe2bc0b28d46871ff7dfaa3b7363f4742eb8a34186f"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 45,
        "start_column": 22,
        "end_line": 45,
        "end_column": 27
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(A ^ 2).card \u2264 K * \u2191A.card\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191A.card / (2 * K) \u2264 \u2191(MulOpposite.op g \u2022 A \u2229 A).card}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\n\u22a2 \u2191(A\u207b\u00b9 * A).card \u2264 K ^ 2 * \u2191A.card",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L45"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-06-05T03:28:47.156706+00:00"
      },
      "id": "5da70845b20af19e1351b3d69875dd2fa51787cd18d5e2fa538b4fd992bcb50b"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "51c6063c647276f7c01e848976e6721033829c90",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 6415,
        "start_column": 28,
        "end_line": 6415,
        "end_column": 33
      },
      "debug_info": {
        "goal": "c : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\nX\u2080 : \u211d := sorry\nX : \u211d\nX_ge_X\u2080 : X \u2265 X\u2080\nX_gt_3 : 3 < X\n\u03b5 : \u211d := sorry\n\u03b5_pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\n\u03b5_X : 2 < X * \u03b5\n\u03bd : \u211d \u2192 \u211d\nContDiff\u03bd : ContDiff \u211d (\u2191\u22a4) \u03bd\n\u03bd_nonneg' : \u2200 (x : \u211d), 0 \u2264 \u03bd x\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\n\u03bd_massOne' : \u222b (x : \u211d) in Ici 0, \u03bd x / x = 1\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\n\u03c8_\u03b5_of_X : \u2102 := SmoothedChebyshev \u03bd \u03b5 X\nC_unsmoothing : \u211d\nC_unsmoothing_pos : C_unsmoothing > 0\n\u03c8_\u03c8_\u03b5_diff : \u2016\u2191(ChebyshevPsi X) - \u03c8_\u03b5_of_X\u2016 \u2264 C_unsmoothing * X * \u03b5 * Real.log X\nT : \u211d := sorry\nT_gt_3 : 3 < T\nA : \u211d\nA_in_Ioc : A \u2208 Ioc 0 (1 / 2)\nholo1 :\n  HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (Icc (1 - A / Real.log T ^ 9) 2 \u00d7\u2102 Icc (-T) T \\ {1})\n\u03c3\u2081 : \u211d := 1 - A / Real.log T ^ 9\n\u22a2 0 < \u03c3\u2081",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/51c6063c647276f7c01e848976e6721033829c90/PrimeNumberTheoremAnd/MediumPNT.lean#L6415"
      },
      "metadata": {
        "blame_email_hash": "bee09f470e62",
        "blame_date": "2025-07-12T23:03:36+01:00",
        "inclusion_date": "2025-07-13T23:20:18.124737+00:00"
      },
      "id": "e9d1a6321fb059289092229895ce8b90176b0bbc23fbcd8a81520628b0be3ba7"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "58ff9ddb3f6bc3860fb0316cc210fca5d488ba62",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PFR/MultiTauFunctional.lean",
        "start_line": 57,
        "start_column": 222,
        "end_line": 57,
        "end_column": 227
      },
      "debug_info": {
        "goal": "G \u03a9\u2080 : Type u\ninst\u271d\u00b9 : @MeasureableFinGroup G\ninst\u271d : MeasureSpace \u03a9\u2080\np : @multiRefPackage G \u03a9\u2080 inst\u271d\u00b9 inst\u271d\n\u22a2 \u2203 \u03a9 h\u03a9 X, @multiTauMinimizes G \u03a9\u2080 inst\u271d\u00b9 inst\u271d p \u03a9 h\u03a9 X",
        "url": "https://github.com/teorth/pfr/blob/58ff9ddb3f6bc3860fb0316cc210fca5d488ba62/PFR/MultiTauFunctional.lean#L57"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-08-18T19:14:43-07:00",
        "inclusion_date": "2025-07-05T05:06:27.171280+00:00"
      },
      "id": "bb73eca831cd7070c98bf496ec8c515db709f25a7282b3bc6f835c505fb0327d"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "CM-local-ring-is-catenary",
        "commit": "1502d6a0198864ee7092a76ab022e8ad69a92f4b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/RingTheory/CohenMacaulay/Catenary.lean",
        "start_line": 391,
        "start_column": 38,
        "end_line": 391,
        "end_column": 43
      },
      "debug_info": {
        "goal": "R : Type u\ninst\u271d : CommRing R\nI : Ideal R\nhI : I \u2260 \u22a4\nthis : Nontrivial (R \u29f8 I)\n\u22a2 Nonempty \u2191I.minimalPrimes",
        "url": "https://github.com/leanprover-community/mathlib4/blob/1502d6a0198864ee7092a76ab022e8ad69a92f4b/Mathlib/RingTheory/CohenMacaulay/Catenary.lean#L391"
      },
      "metadata": {
        "blame_email_hash": "4351a1f9903a",
        "blame_date": "2025-06-10T18:51:40+08:00",
        "inclusion_date": "2025-06-17T03:04:15.410526+00:00"
      },
      "id": "490706645ed0037f9753e88d7a9220b6a6a652b4f3b0d90b6df9d0c81d3a7e55"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "65f9a265db8ee0a8060b0eb706b5a1f47080a4c0",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 142,
        "start_column": 4,
        "end_line": 142,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type ?u.16946\ninst\u271d : CommRing R\nI J : Ideal R\n\u22a2 \u2200 (c : R) {x : R}, x \u2208 \u2191I \u2229 \u2191J \u2192 c \u2022 x \u2208 \u2191I \u2229 \u2191J",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/65f9a265db8ee0a8060b0eb706b5a1f47080a4c0/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L142"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-07-31T00:17:46.358869+00:00"
      },
      "id": "cf6d123f57eef82fd18b61f8828148604cda76fcff366854decea31d5fb79a8a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean",
        "start_line": 46,
        "start_column": 47,
        "end_line": 46,
        "end_column": 52
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Fintype L\ninst\u271d\u2076 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2075 : Field \ud835\udd3dq\ninst\u271d\u2074 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u00b3 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b2 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u00b9 : NeZero \u03d1\ninst\u271d : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\ni : Fin r\ny : \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i + 1, \u22ef\u27e9)\nk : \ud835\udd3dq\n\u22a2 \u2191\u27e8\u2191i + 1, \u22ef\u27e9 < \u2113 + \ud835\udce1",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "8e6c115d256b6206ce71da626343725452650f6d211d179aac0edd45fdd0061e"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "master",
        "commit": "0354f43f69bbed2cee82d56feb18a99d31f3fbe6",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PhysLean/ClassicalMechanics/HarmonicOscillator/Basic.lean",
        "start_line": 139,
        "start_column": 32,
        "end_line": 139,
        "end_column": 37
      },
      "debug_info": {
        "goal": "S : ClassicalMechanics.HarmonicOscillator\nx : Time \u2192 \u211d\n\u22a2 ClassicalMechanics.HarmonicOscillator.force S x = -ClassicalMechanics.HarmonicOscillator.k S \u2022 x",
        "url": "https://github.com/HEPLean/PhysLean/blob/0354f43f69bbed2cee82d56feb18a99d31f3fbe6/PhysLean/ClassicalMechanics/HarmonicOscillator/Basic.lean#L139"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-06-28T08:23:46+00:00",
        "inclusion_date": "2025-07-22T00:02:57.650744+00:00"
      },
      "id": "6f2ad7d86be99cadaf688900dd6d35a8b5a398235fcb4503a60793e196f4b045"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 134,
        "start_column": 74,
        "end_line": 134,
        "end_column": 79
      },
      "debug_info": {
        "goal": "a : \u2115\nh\u2080 : a = \u2211 k \u2208 divisors 500, k\n\u22a2 \u2211 k \u2208 a.divisors with Nat.Prime k, k = 25",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L134"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "e3b60d1dd6ab33bcf01d375cd6764c4d0994858aaa363464f736765b5648b0ac"
    },
    {
      "repo": {
        "remote": "https://github.com/cmu-l3/llmlean",
        "branch": "kimina-pr",
        "commit": "126a6b2af37727c4d81bb49f6af6b354a380145e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LLMleanTest/Examples2.lean",
        "start_line": 83,
        "start_column": 2,
        "end_line": 83,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\nf : \u03b1 \u2192 \u03b2\ns t : Set \u03b1\nu v : Set \u03b2\nI : Type u_3\nA : I \u2192 Set \u03b1\nB : I \u2192 Set \u03b2\n\u22a2 f \u207b\u00b9' \u22c3 i, B i = \u22c3 i, f \u207b\u00b9' B i",
        "url": "https://github.com/cmu-l3/llmlean/blob/126a6b2af37727c4d81bb49f6af6b354a380145e/LLMleanTest/Examples2.lean#L83"
      },
      "metadata": {
        "blame_email_hash": "3ab0971ac342",
        "blame_date": "2024-07-23T17:17:09-04:00",
        "inclusion_date": "2025-06-11T03:39:01.065377+00:00"
      },
      "id": "eb915546195d83283ba3ff0fce3d0e266b1d505343d1463a87f696d0380a0dbe"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_01.lean",
        "start_line": 189,
        "start_column": 40,
        "end_line": 189,
        "end_column": 45
      },
      "debug_info": {
        "goal": "n : \u2115\nx : \u211d\nhxge : x \u2265 \u2191n\nhxlt : x < \u2191n + 1\n\u22a2 \u2191(\u220f k \u2208 Icc 1 (primeCountingReal x), (k + 1) / k) \u2264 \u2191(primeCountingReal x) + 1",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_01.lean#L189"
      },
      "metadata": {
        "blame_email_hash": "f543dc622a62",
        "blame_date": "2024-05-04T20:26:32+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "1f6b90a92d8f3552bdd4dd2ad432b52e4da934bbe6679dd568aa98d5dee8ff52"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/9SpecialMatrices.lean",
        "start_line": 133,
        "start_column": 2,
        "end_line": 133,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m : Type u_1\ninst\u271d\u00b9 : Fintype m\ninst\u271d : DecidableEq m\nA : Matrix m m \u2102\n\u22a2 A.IsHermitian \u2194 \u2200 (x : m \u2192 \u2102), _root_.IsSelfAdjoint (star x \u2b1d\u1d65 A.mulVec x)",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/9SpecialMatrices.lean#L133"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2023-10-11T15:16:39+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "03ec4154340d01cdd22c788225f6feb93dc5b725e6023e515ebc5657d89b0205"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 1 - 3, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "a7d4c52ff46ca1e0237446c281f067aa11eb39b7d9f11c7cfa70ca183621950d"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "S4_lack_EFMP",
        "commit": "d899e66f479329bfcf732a9ddad39daf94831744",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "Foundation/Modal/Kripke/Logic/S4Fi.lean",
        "start_line": 70,
        "start_column": 117,
        "end_line": 70,
        "end_column": 122
      },
      "debug_info": {
        "goal": "\u22a2 LO.Modal.S4Fi.unprovable_AxiomFi_ant.countermodel \u22a7* LO.Modal.S4Fi",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/d899e66f479329bfcf732a9ddad39daf94831744/Foundation/Modal/Kripke/Logic/S4Fi.lean#L70"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-07-06T21:29:02+09:00",
        "inclusion_date": "2025-07-07T03:17:12.837599+00:00"
      },
      "id": "84c429693ad3fa10ace0ff6b1a18badd23c5960f62f191730b137accbafe6c1c"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "ineq_6_3_30",
        "commit": "bc8a66ae53b6783c978681f53ed56302733ab997",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainTileCount.lean",
        "start_line": 569,
        "start_column": 2,
        "end_line": 569,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d\u00b9 : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Finset (\ud835\udd13 X)\n\u03d1 : \u0398 X\nN : \u2115\nL : Grid X\nhL : L \u2208 @Antichain.\ud835\udcdb' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b3 inst\u271d\u00b2 inst\u271d\u00b9 \ud835\udd04 \u03d1 N\ninst\u271d : DecidablePred fun p => \u00ac\ud835\udcd8 p = @Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b3 inst\u271d\u00b2 inst\u271d\u00b9 \ud835\udd04 \u03d1 N L hL\n\u22a2 \u2211 p \u2208 @Antichain.\ud835\udd04' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b3 inst\u271d\u00b2 inst\u271d\u00b9 \ud835\udd04 \u03d1 N with\n      \u00ac\ud835\udcd8 p = @Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b3 inst\u271d\u00b2 inst\u271d\u00b9 \ud835\udd04 \u03d1 N L hL, volume (E p \u2229 G \u2229 \u2191L) \u2264\n    volume (E\u2082 (2 ^ (N + 3)) (@Antichain.p'' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b3 inst\u271d\u00b2 inst\u271d\u00b9 \ud835\udd04 \u03d1 N L hL))",
        "url": "https://github.com/fpvandoorn/carleson/blob/bc8a66ae53b6783c978681f53ed56302733ab997/Carleson/Antichain/AntichainTileCount.lean#L569"
      },
      "metadata": {
        "blame_email_hash": "b2f50b2f722a",
        "blame_date": "2025-06-30T14:55:27+02:00",
        "inclusion_date": "2025-07-05T03:56:58.007111+00:00"
      },
      "id": "d1e4cb1508591a002cafc916b76d10532df81608dc2793956a256822f718bba0"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-hardly-ramified",
        "commit": "60be88a841fa232b563ea16600befe5efbfb3d07",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FLT/AutomorphicForm/QuaternionAlgebra/HeckeOperators/Concrete.lean",
        "start_line": 113,
        "start_column": 2,
        "end_line": 113,
        "end_column": 7
      },
      "debug_info": {
        "goal": "F : Type u_1\ninst\u271d\u2075 : Field F\ninst\u271d\u2074 : NumberField F\ninst\u271d\u00b3 : IsTotallyReal F\nD : Type u_2\ninst\u271d\u00b2 : Ring D\ninst\u271d\u00b9 : Algebra F D\ninst\u271d : IsQuaternionAlgebra F D\nr : Rigidification F D\nS : Finset (HeightOneSpectrum (RingOfIntegers F))\n\u22a2 IsCompact \u2191(@TotallyDefiniteQuaternionAlgebra.WeightTwoAutomorphicForm.U1 F inst\u271d\u2075 inst\u271d\u2074 D inst\u271d\u00b2 inst\u271d\u00b9 r S)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/60be88a841fa232b563ea16600befe5efbfb3d07/FLT/AutomorphicForm/QuaternionAlgebra/HeckeOperators/Concrete.lean#L113"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-05-31T23:45:42+01:00",
        "inclusion_date": "2025-09-18T04:05:26.332171+00:00"
      },
      "id": "90f4b72e409e49f56f5135b420d6fab88d1bf892d8e038ab5e9c67e368160bf5"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 46,
        "start_column": 69,
        "end_line": 46,
        "end_column": 74
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(A ^ 2).card \u2264 K * \u2191A.card\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191A.card / (2 * K) \u2264 \u2191(MulOpposite.op g \u2022 A \u2229 A).card}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191S.card \u2264 K ^ 2 * \u2191A.card\n\u22a2 \u2203 F \u2286 A, \u2191F.card \u2264 2 * K \u2227 A \u2286 S * F",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-06-05T03:28:47.156706+00:00"
      },
      "id": "7b0c6650189400dd9b69d11c460d05b7b9a7c0d519d89e1089adcfc14c0cc7d3"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "5d2c803989e44af9fd233b1034045c8fc2ba5735",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 2621,
        "start_column": 8,
        "end_line": 2621,
        "end_column": 13
      },
      "debug_info": {
        "goal": "C' : \u211d := sorry\nthis : C' > 0\nA : \u211d\nAbd : A \u2208 Ioc 0 (1 / 2)\nC\u2082 : \u211d\nC\u2082pos : 0 < C\u2082\n\u03b6bd :\n  \u2200 (\u03c3 T t : \u211d),\n    3 < |t| \u2192\n      |t| \u2264 T \u2192\n        \u03c3 \u2208 Ico (1 - A / Real.log T ^ 9) 1 \u2192\n          \u2016deriv riemannZeta (\u2191\u03c3 + \u2191t * I) / riemannZeta (\u2191\u03c3 + \u2191t * I)\u2016 \u2264 C\u2082 * Real.log T ^ 9\nSmoothingF : \u211d \u2192 \u211d\nX : \u211d\nX_gt : 3 < X\n\u03b5 : \u211d\n\u03b5_pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\nT : \u211d\nT_gt : 3 < T\n\u03c3\u2081 : \u211d := 1 - A / Real.log X ^ 9\nC\u2081 : \u211d\nC\u2081pos : 0 < C\u2081\nMbd :\n  \u2200 (\u03c3\u2081 : \u211d),\n    0 < \u03c3\u2081 \u2192\n      \u2200 (s : \u2102),\n        \u03c3\u2081 \u2264 s.re \u2192\n          s.re \u2264 2 \u2192\n            \u2200 (\u03b5 : \u211d), 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2016MellinTransform (fun x => \u2191(Smooth1 SmoothingF \u03b5 x)) s\u2016 \u2264 C\u2081 * (\u03b5 * \u2016s\u2016 ^ 2)\u207b\u00b9\nXpos : 0 < X\nTpos : 0 < T\ninterval_length_nonneg : \u03c3\u2081 \u2264 1 + (Real.log T)\u207b\u00b9\n\u03c3 : \u211d\nh\u03c3 : \u03c3 \u2208 Ioc \u03c3\u2081 (1 + (Real.log T)\u207b\u00b9)\nh\u03c31 : \u03c3 < 1\n\u22a2 Real.log X ^ 9 \u2264 ?C\u2083 * X",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/5d2c803989e44af9fd233b1034045c8fc2ba5735/PrimeNumberTheoremAnd/MediumPNT.lean#L2621"
      },
      "metadata": {
        "blame_email_hash": "3b5a2f161a6f",
        "blame_date": "2025-06-27T19:13:46-04:00",
        "inclusion_date": "2025-07-01T03:15:09.382319+00:00"
      },
      "id": "1cc4c24458750f0f34746fd09c53767592910b82108c07f5e1cabb46bb79b6f4"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "58ff9ddb3f6bc3860fb0316cc210fca5d488ba62",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 102,
        "start_column": 64,
        "end_line": 102,
        "end_column": 69
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : Fintype G\nm : \u2115\nhm : m \u2265 2\nhtorsion : \u2200 (x : G), m \u2022 x = 0\nA : Set G\ninst\u271d : Finite \u2191A\nK : \u211d\nh\u2080A : A.Nonempty\nhA : \u2191(Nat.card \u2191(A + A)) \u2264 K * \u2191(Nat.card \u2191A)\n\u22a2 \u2203 H c,\n    \u2191(Nat.card \u2191c) \u2264 K ^ (64 * \u2191m ^ 3 + 2) * \u2191(Nat.card \u2191A) ^ (1 / 2) * \u2191(Nat.card \u21a5H) ^ (-1 / 2) \u2227\n      \u2191(Nat.card \u21a5H) \u2264 K ^ (64 * \u2191m ^ 3) * \u2191(Nat.card \u2191A) \u2227\n        \u2191(Nat.card \u2191A) \u2264 K ^ (64 * \u2191m ^ 3) * \u2191(Nat.card \u21a5H) \u2227 A \u2286 c + \u2191H",
        "url": "https://github.com/teorth/pfr/blob/58ff9ddb3f6bc3860fb0316cc210fca5d488ba62/PFR/TorsionEndgame.lean#L102"
      },
      "metadata": {
        "blame_email_hash": "7d87c0724495",
        "blame_date": "2024-08-18T18:37:52+02:00",
        "inclusion_date": "2025-07-05T05:06:27.171280+00:00"
      },
      "id": "7deb8d390e3548192687048cc21f17d4c6718d4fae4d8e7cb7fed93bf98a5160"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "CM-local-ring-is-catenary",
        "commit": "289728ba8f6bc3aa92fe63ebf878ca37221f591a",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/RingTheory/CohenMacaulay/Catenary.lean",
        "start_line": 413,
        "start_column": 2,
        "end_line": 413,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : IsNoetherianRing R\ninst\u271d : IsCohenMacaulayLocalRing R\nI : Ideal R\nnetop : I \u2260 \u22a4\n\u22a2 \u2191(\u2a05 J, \u2a05 (h : J \u2208 I.minimalPrimes), J.primeHeight) + \u2a06 p \u2208 I.minimalPrimes, ringKrullDim (R \u29f8 p) = ringKrullDim R",
        "url": "https://github.com/leanprover-community/mathlib4/blob/289728ba8f6bc3aa92fe63ebf878ca37221f591a/Mathlib/RingTheory/CohenMacaulay/Catenary.lean#L413"
      },
      "metadata": {
        "blame_email_hash": "0aaeb3f219e2",
        "blame_date": "2025-06-09T20:58:10+08:00",
        "inclusion_date": "2025-06-11T03:01:47.663859+00:00"
      },
      "id": "d5a65058aa70c3f9880e810eb857c6dc1b8e4698703e14da8e819a520332cf6d"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "65f9a265db8ee0a8060b0eb706b5a1f47080a4c0",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 191,
        "start_column": 4,
        "end_line": 191,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type ?u.20695\ninst\u271d\u00b9 : CommRing R\nS : Type ?u.20701\ninst\u271d : CommRing S\nf : R \u2192+* S\nx : R\n\u22a2 x \u2208 ker f \u2192 f x = 0",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/65f9a265db8ee0a8060b0eb706b5a1f47080a4c0/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L191"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-07-31T00:17:46.358869+00:00"
      },
      "id": "d3a741ecbbcb31368fec8f416f583a5862643e58a1d280c601aceebb964e8a96"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean",
        "start_line": 49,
        "start_column": 55,
        "end_line": 49,
        "end_column": 60
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Fintype L\ninst\u271d\u2076 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2075 : Field \ud835\udd3dq\ninst\u271d\u2074 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u00b3 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b2 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u00b9 : NeZero \u03d1\ninst\u271d : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\ni : Fin r\ny : \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i + 1, \u22ef\u27e9)\nk : \ud835\udd3dq\nbasis_y : Module.Basis (Fin (\u2113 + \ud835\udce1 - \u2191\u27e8\u2191i + 1, \u22ef\u27e9)) \ud835\udd3dq\n  \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i + 1, \u22ef\u27e9) :=\n  sDomain_basis \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i + 1, \u22ef\u27e9 \u22ef\ny_coeffs : Fin (\u2113 + \ud835\udce1 - \u2191\u27e8\u2191i + 1, \u22ef\u27e9) \u2192\u2080 \ud835\udd3dq := basis_y.repr y\nj : Fin (\u2113 + \ud835\udce1 - \u2191i)\n\u22a2 \u2191j - 1 < \u2113 + \ud835\udce1 - \u2191\u27e8\u2191i + 1, \u22ef\u27e9",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean#L49"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "75bc8d724cbca708f4ab8477f0cfaf81a302c0032701c47abd8e89cce1c42c61"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "master",
        "commit": "0354f43f69bbed2cee82d56feb18a99d31f3fbe6",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PhysLean/ClassicalMechanics/HarmonicOscillator/Basic.lean",
        "start_line": 149,
        "start_column": 87,
        "end_line": 149,
        "end_column": 92
      },
      "debug_info": {
        "goal": "S : ClassicalMechanics.HarmonicOscillator\nx : Time \u2192 \u211d\n\u22a2 ClassicalMechanics.HarmonicOscillator.EquationOfMotion x \u2194\n    \u2200 (t : Time),\n      ClassicalMechanics.HarmonicOscillator.force S x t =\n        ClassicalMechanics.HarmonicOscillator.m S * deriv (fun t' => deriv x t') t",
        "url": "https://github.com/HEPLean/PhysLean/blob/0354f43f69bbed2cee82d56feb18a99d31f3fbe6/PhysLean/ClassicalMechanics/HarmonicOscillator/Basic.lean#L149"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-06-28T08:23:46+00:00",
        "inclusion_date": "2025-07-22T00:02:57.650744+00:00"
      },
      "id": "8ed9cbeef3f73cd5b229485f90d3ac2b31467a217ba1a4b8597d205708a71283"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 256,
        "start_column": 74,
        "end_line": 256,
        "end_column": 79
      },
      "debug_info": {
        "goal": "\u22a2 \u2211 k \u2208 Finset.Icc 1 49with 3 \u2223 k, k % 10 = 78",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L256"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "fd3b5a8c64f8360a65e3924b15bde0bd883ea789b068b76ab15f0119e0c15f63"
    },
    {
      "repo": {
        "remote": "https://github.com/cmu-l3/llmlean",
        "branch": "kimina-pr",
        "commit": "126a6b2af37727c4d81bb49f6af6b354a380145e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LLMleanTest/Examples2.lean",
        "start_line": 86,
        "start_column": 2,
        "end_line": 86,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\nf : \u03b1 \u2192 \u03b2\ns t : Set \u03b1\nu v : Set \u03b2\nI : Type u_3\nA : I \u2192 Set \u03b1\nB : I \u2192 Set \u03b2\n\u22a2 f \u207b\u00b9' \u22c2 i, B i = \u22c2 i, f \u207b\u00b9' B i",
        "url": "https://github.com/cmu-l3/llmlean/blob/126a6b2af37727c4d81bb49f6af6b354a380145e/LLMleanTest/Examples2.lean#L86"
      },
      "metadata": {
        "blame_email_hash": "3ab0971ac342",
        "blame_date": "2024-07-23T17:17:09-04:00",
        "inclusion_date": "2025-06-11T03:39:01.065377+00:00"
      },
      "id": "e51a772a88ee6bdeaa8c492f14da5a43ef3df2fdcc5edab670f30e03d399247c"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_44.lean",
        "start_line": 47,
        "start_column": 4,
        "end_line": 47,
        "end_column": 9
      },
      "debug_info": {
        "goal": "V : Type u\ninst\u271d\u00b9 : Fintype V\nG : SimpleGraph V\ninst\u271d : Nonempty V\nh : \u2200 \u2983v w : V\u2984, v \u2260 w \u2192 Fintype.card \u2191(G.commonNeighbors v w) = 1\nno_politician : \u00ac\u2203 v, \u2200 (w : V), v \u2260 w \u2192 G.Adj v w\n\u22a2 \u2203 k, G.IsRegularOfDegree k",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_44.lean#L47"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2024-01-04T23:14:13+01:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "d3c7a0f57f7514ef100e1dd9a9bdaec479019c908b20ee5645a72c96bdb63fac"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/9SpecialMatrices.lean",
        "start_line": 136,
        "start_column": 2,
        "end_line": 136,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m : Type u_1\ninst\u271d\u00b9 : Fintype m\ninst\u271d : DecidableEq m\nA : Matrix m m \u2102\n\u22a2 A.IsHermitian \u2194 sorry",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/9SpecialMatrices.lean#L136"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2023-10-11T15:16:39+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "8174a03367838968414622815425e247083d94c094631b04984c9e8c34acece0"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 2 - 3, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "bf0ef1a15996584838fdc2c02c5d2504892791ae3f48bec4fa93b7f1a6acfaff"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "S4_lack_EFMP",
        "commit": "d899e66f479329bfcf732a9ddad39daf94831744",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "Foundation/Modal/Kripke/Logic/S4Fi.lean",
        "start_line": 150,
        "start_column": 2,
        "end_line": 150,
        "end_column": 7
      },
      "debug_info": {
        "goal": "M : Model\nhM : M \u22a7* LO.Modal.S4Fi\n\u22a2 \u00acM \u22a7 \u223c@LO.Modal.Axioms.Fi.ant \u2115 (atom 0) (atom 1) (atom 2) (atom 3) \u2192 Infinite M.World",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/d899e66f479329bfcf732a9ddad39daf94831744/Foundation/Modal/Kripke/Logic/S4Fi.lean#L150"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-07-06T21:29:02+09:00",
        "inclusion_date": "2025-07-07T03:17:12.837599+00:00"
      },
      "id": "e56478a774299cfb6d9431f2a25d450944404d131a979dddf926a27ffa9918d0"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "ineq_6_3_30",
        "commit": "bcc07a3b1282c61371f9cc8748d1be4765325b7b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainTileCount.lean",
        "start_line": 594,
        "start_column": 2,
        "end_line": 594,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Set (\ud835\udd13 X)\n\u03d1 : \u0398 X\nN : \u2115\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \ud835\udd04\nL : Grid X\nhL : L \u2208 @Antichain.\ud835\udcdb' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N\n\u22a2 \u2211 p \u2208 toFinset (@Antichain.\ud835\udd04' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N)with\n      \u00ac\ud835\udcd8 p = @Antichain.L' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL, volume (E p \u2229 G \u2229 \u2191L) \u2264\n    \u2211 p \u2208 toFinset (@Antichain.\ud835\udd04_aux X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N)with\n      \ud835\udd30 (@Antichain.p'' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL) < \ud835\udd30 p,\n      volume (E p \u2229 G \u2229 \u2191(\ud835\udcd8 (@Antichain.p'' X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N L hL)))",
        "url": "https://github.com/fpvandoorn/carleson/blob/bcc07a3b1282c61371f9cc8748d1be4765325b7b/Carleson/Antichain/AntichainTileCount.lean#L594"
      },
      "metadata": {
        "blame_email_hash": "b2f50b2f722a",
        "blame_date": "2025-06-30T14:55:27+02:00",
        "inclusion_date": "2025-07-08T03:23:00.070461+00:00"
      },
      "id": "455e0e9fd32ea8c2ff11e2be86728000b2b7e9420be4a032e643a48cc5d0dc27"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-hardly-ramified",
        "commit": "60be88a841fa232b563ea16600befe5efbfb3d07",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FLT/AutomorphicForm/QuaternionAlgebra/HeckeOperators/Concrete.lean",
        "start_line": 118,
        "start_column": 2,
        "end_line": 118,
        "end_column": 7
      },
      "debug_info": {
        "goal": "F : Type u_1\ninst\u271d\u2075 : Field F\ninst\u271d\u2074 : NumberField F\ninst\u271d\u00b3 : IsTotallyReal F\nD : Type u_2\ninst\u271d\u00b2 : Ring D\ninst\u271d\u00b9 : Algebra F D\ninst\u271d : IsQuaternionAlgebra F D\nr : Rigidification F D\nS : Finset (HeightOneSpectrum (RingOfIntegers F))\n\u22a2 IsOpen \u2191(@TotallyDefiniteQuaternionAlgebra.WeightTwoAutomorphicForm.U1 F inst\u271d\u2075 inst\u271d\u2074 D inst\u271d\u00b2 inst\u271d\u00b9 r S)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/60be88a841fa232b563ea16600befe5efbfb3d07/FLT/AutomorphicForm/QuaternionAlgebra/HeckeOperators/Concrete.lean#L118"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-05-31T23:45:42+01:00",
        "inclusion_date": "2025-09-18T04:05:26.332171+00:00"
      },
      "id": "2ce6ca0f53e1dd722391122dc79ff99f117fac38ce03e15f91a3af9e0908ec3a"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 54,
        "start_column": 29,
        "end_line": 54,
        "end_column": 34
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(A ^ 2).card \u2264 K * \u2191A.card\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191A.card / (2 * K) \u2264 \u2191(MulOpposite.op g \u2022 A \u2229 A).card}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191S.card \u2264 K ^ 2 * \u2191A.card\nF : Finset G\nhFA : F \u2286 A\nhFcard : \u2191F.card \u2264 2 * K\nhASF : A \u2286 S * F\n\u22a2 \u2191(A * S ^ 3 * A\u207b\u00b9).card \u2264 8 * K ^ 11 * \u2191A.card",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L54"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-06-05T03:28:47.156706+00:00"
      },
      "id": "71417cb7616b9fe230110e132bd2f7c81689105a0ed87966d8abdee494df2bfd"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "5d2c803989e44af9fd233b1034045c8fc2ba5735",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 2624,
        "start_column": 6,
        "end_line": 2624,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case neg\nC' : \u211d := sorry\nthis : C' > 0\nA : \u211d\nAbd : A \u2208 Ioc 0 (1 / 2)\nC\u2082 : \u211d\nC\u2082pos : 0 < C\u2082\n\u03b6bd :\n  \u2200 (\u03c3 T t : \u211d),\n    3 < |t| \u2192\n      |t| \u2264 T \u2192\n        \u03c3 \u2208 Ico (1 - A / Real.log T ^ 9) 1 \u2192\n          \u2016deriv riemannZeta (\u2191\u03c3 + \u2191t * I) / riemannZeta (\u2191\u03c3 + \u2191t * I)\u2016 \u2264 C\u2082 * Real.log T ^ 9\nSmoothingF : \u211d \u2192 \u211d\nX : \u211d\nX_gt : 3 < X\n\u03b5 : \u211d\n\u03b5_pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\nT : \u211d\nT_gt : 3 < T\n\u03c3\u2081 : \u211d := 1 - A / Real.log X ^ 9\nC\u2081 : \u211d\nC\u2081pos : 0 < C\u2081\nMbd :\n  \u2200 (\u03c3\u2081 : \u211d),\n    0 < \u03c3\u2081 \u2192\n      \u2200 (s : \u2102),\n        \u03c3\u2081 \u2264 s.re \u2192\n          s.re \u2264 2 \u2192\n            \u2200 (\u03b5 : \u211d), 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2016MellinTransform (fun x => \u2191(Smooth1 SmoothingF \u03b5 x)) s\u2016 \u2264 C\u2081 * (\u03b5 * \u2016s\u2016 ^ 2)\u207b\u00b9\nXpos : 0 < X\nTpos : 0 < T\ninterval_length_nonneg : \u03c3\u2081 \u2264 1 + (Real.log T)\u207b\u00b9\n\u03c3 : \u211d\nh\u03c3 : \u03c3 \u2208 Ioc \u03c3\u2081 (1 + (Real.log T)\u207b\u00b9)\nh\u03c31 : \u00ac\u03c3 < 1\n\u22a2 \u2016deriv riemannZeta (\u2191\u03c3 - \u2191X * I) / riemannZeta (\u2191\u03c3 - \u2191X * I)\u2016 \u2264 C\u2082 * (sorry * X)",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/5d2c803989e44af9fd233b1034045c8fc2ba5735/PrimeNumberTheoremAnd/MediumPNT.lean#L2624"
      },
      "metadata": {
        "blame_email_hash": "3b5a2f161a6f",
        "blame_date": "2025-06-27T19:13:46-04:00",
        "inclusion_date": "2025-07-01T03:15:09.382319+00:00"
      },
      "id": "5592c55c0595407f1823017f64c7590d4f00b4b4832d4147be3c3d38bdf22ebe"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/MultiTauFunctional.lean",
        "start_line": 54,
        "start_column": 111,
        "end_line": 54,
        "end_column": 116
      },
      "debug_info": {
        "goal": "G \u03a9\u2080 : Type u\ninst\u271d\u2074 : MeasureableFinGroup G\ninst\u271d\u00b3 : TopologicalSpace G\ninst\u271d\u00b2 : DiscreteTopology G\ninst\u271d\u00b9 : BorelSpace G\ninst\u271d : MeasureSpace \u03a9\u2080\np : multiRefPackage G \u03a9\u2080\n\u22a2 Continuous fun \u03bc => multiTau p (fun x => G) (fun i => MeasureSpace.mk \u2191(\u03bc i)) fun x => id",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MultiTauFunctional.lean#L54"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-29T09:57:28-07:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "0c8f0ab87fd932f370996a1f8af2a028fe9d72d6d44d76818ccf2c803d381e05"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "tb_selmer",
        "commit": "eed9bd01ddf28d5987c6c2dfbfdd947dc4790485",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/RingTheory/Polynomial/Selmer.lean",
        "start_line": 281,
        "start_column": 2,
        "end_line": 281,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro.intro.intro\nn : \u2115\nf : Polynomial \u211a := X ^ n - X - 1\nK : Type := f.SplittingField\nthis\u271d\u2075 : Fact (Splits (algebraMap \u211a K) f)\nthis\u271d\u2074 : NumberField K\nthis\u271d\u00b3 : IsGalois \u211a K\nR : Type := RingOfIntegers K\nG : Type := f.Gal\nthis\u271d\u00b2 : MulAction.IsPretransitive G \u2191(f.rootSet K)\n\u03c3 : G\nq : Ideal R\nhq : q.IsMaximal\nh\u03c3 : \u03c3 \u2208 \u2191(@Polynomial.inertiaSubgroup K (SplittingField.instField f) this\u271d\u2074 this\u271d\u00b3 q)\nh\u03c31 : \u03c3 \u2260 1\nH : Subgroup G := @Polynomial.inertiaSubgroup f.SplittingField (SplittingField.instField f) this\u271d\u2074 this\u271d\u00b3 q\nF : Type := R \u29f8 q\n\u03c0 : R \u2192+* F := Ideal.Quotient.mk q\nthis\u271d\u00b9 : Field F\nthis\u271d : MulAction \u21a5H \u2191(f.rootSet K)\nthis : MulAction (\u21a5H) F\n\u03d5 : \u2191(f.rootSet K) \u2192 F := sorry\nf' : Polynomial F := X ^ n - X - 1\n\u22a2 ((MulAction.toPermHom f.Gal \u2191(f.rootSet K)) \u03c3).IsSwap",
        "url": "https://github.com/leanprover-community/mathlib4/blob/eed9bd01ddf28d5987c6c2dfbfdd947dc4790485/Mathlib/RingTheory/Polynomial/Selmer.lean#L281"
      },
      "metadata": {
        "blame_email_hash": "d90ec0d76b6a",
        "blame_date": "2025-06-08T17:17:15-07:00",
        "inclusion_date": "2025-06-09T03:16:11.002894+00:00"
      },
      "id": "b34472c624cbf7379319abfe7c87a8ed728ce10c0ee8e68198af978ec65d17e9"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "65f9a265db8ee0a8060b0eb706b5a1f47080a4c0",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 256,
        "start_column": 6,
        "end_line": 256,
        "end_column": 11
      },
      "debug_info": {
        "goal": "R : Type ?u.28050\ninst\u271d\u00b9 : CommRing R\nS : Type ?u.28056\ninst\u271d : CommRing S\nf : R \u2192+* S\nhf : Surjective \u21d1f\n\u22a2 LeftInverse (fun x => (Ideal.Quotient.mk (ker f)) (surjInv hf x)) \u21d1(@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/65f9a265db8ee0a8060b0eb706b5a1f47080a4c0/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L256"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-07-31T00:17:46.358869+00:00"
      },
      "id": "d7e41f617e82e369385ad1c463f3c318e81ab0c3bc8e42920d92f9dc9b3c47b4"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean",
        "start_line": 51,
        "start_column": 27,
        "end_line": 51,
        "end_column": 32
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Fintype L\ninst\u271d\u2076 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2075 : Field \ud835\udd3dq\ninst\u271d\u2074 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u00b3 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b2 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u00b9 : NeZero \u03d1\ninst\u271d : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\ni : Fin r\ny : \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i + 1, \u22ef\u27e9)\nk : \ud835\udd3dq\nbasis_y : Module.Basis (Fin (\u2113 + \ud835\udce1 - \u2191\u27e8\u2191i + 1, \u22ef\u27e9)) \ud835\udd3dq\n  \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i + 1, \u22ef\u27e9) :=\n  sDomain_basis \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i + 1, \u22ef\u27e9 \u22ef\ny_coeffs : Fin (\u2113 + \ud835\udce1 - \u2191\u27e8\u2191i + 1, \u22ef\u27e9) \u2192\u2080 \ud835\udd3dq := basis_y.repr y\nx_coeffs : Fin (\u2113 + \ud835\udce1 - \u2191i) \u2192 \ud835\udd3dq := fun j => if \u2191j = 0 then k else y_coeffs \u27e8\u2191j - 1, \u22ef\u27e9\n\u22a2 \u2191i < \u2113 + \ud835\udce1",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean#L51"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "37f355e686a044aeb75e08a1961fa79c3ee99ed15206226921d3b2021efa993c"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "master",
        "commit": "0354f43f69bbed2cee82d56feb18a99d31f3fbe6",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PhysLean/ClassicalMechanics/HarmonicOscillator/Basic.lean",
        "start_line": 167,
        "start_column": 49,
        "end_line": 167,
        "end_column": 54
      },
      "debug_info": {
        "goal": "x : Time \u2192 \u211d\n\u22a2 ClassicalMechanics.HarmonicOscillator.EquationOfMotion x \u2194 ClassicalMechanics.HarmonicOscillator.ExtremaOfAction x",
        "url": "https://github.com/HEPLean/PhysLean/blob/0354f43f69bbed2cee82d56feb18a99d31f3fbe6/PhysLean/ClassicalMechanics/HarmonicOscillator/Basic.lean#L167"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-06-28T08:23:46+00:00",
        "inclusion_date": "2025-07-22T00:02:57.650744+00:00"
      },
      "id": "2a00d0dc6d4f45cd572e2c717e6b6d1c72e40023dc19b0c0c5dc71e4df34f20d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 226,
        "start_column": 25,
        "end_line": 226,
        "end_column": 30
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 3 \u2264 n\n\u22a2 n.factorial < n ^ (n - 1)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L226"
      },
      "metadata": {
        "blame_email_hash": "4962457dacbf",
        "blame_date": "2025-02-20T22:39:08-06:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "38dd75db1d552acea8aaf57445e5cc752dcb212f836e507162bc2f8deb0adb37"
    },
    {
      "repo": {
        "remote": "https://github.com/cmu-l3/llmlean",
        "branch": "kimina-pr",
        "commit": "126a6b2af37727c4d81bb49f6af6b354a380145e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LLMleanTest/Examples2.lean",
        "start_line": 107,
        "start_column": 2,
        "end_line": 107,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 InjOn (fun x => x ^ 2) {x | x \u2265 0}",
        "url": "https://github.com/cmu-l3/llmlean/blob/126a6b2af37727c4d81bb49f6af6b354a380145e/LLMleanTest/Examples2.lean#L107"
      },
      "metadata": {
        "blame_email_hash": "3ab0971ac342",
        "blame_date": "2024-07-23T17:17:09-04:00",
        "inclusion_date": "2025-06-11T03:39:01.065377+00:00"
      },
      "id": "6a50d4b54b4bed7c8f40e6ef74fbf185327219e802f4aa4ff78493dfa43c357c"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_44.lean",
        "start_line": 53,
        "start_column": 6,
        "end_line": 53,
        "end_column": 11
      },
      "debug_info": {
        "goal": "V : Type u\ninst\u271d\u00b9 : Fintype V\nG : SimpleGraph V\ninst\u271d : Nonempty V\nh : \u2200 \u2983v w : V\u2984, v \u2260 w \u2192 Fintype.card \u2191(G.commonNeighbors v w) = 1\nno_politician : \u00ac\u2203 v, \u2200 (w : V), v \u2260 w \u2192 G.Adj v w\nlemma\u2081 : \u2203 k, G.IsRegularOfDegree k\nk : \u2115\nhregular : G.IsRegularOfDegree k\nn : \u2115 := Fintype.card V\n\u22a2 k + (n - 1) = k * k",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_44.lean#L53"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2024-01-04T23:14:13+01:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "e051629c24b7e273486e66585e9b7581b251c438f951e80716513a34a006cb69"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/9SpecialMatrices.lean",
        "start_line": 142,
        "start_column": 2,
        "end_line": 142,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m : Type u_1\ninst\u271d\u00b9 : Fintype m\ninst\u271d : DecidableEq m\nA : Matrix m m \u2102\n\u22a2 A.IsHermitian \u2194 Complex.I \u2022 A \u2208 skewAdjoint (Matrix m m \u2102)",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/9SpecialMatrices.lean#L142"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2023-10-11T15:16:39+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "b6fdd181deb1206e491fbf16879d41f81def505b9e1a5f02ac8c881935377044"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 3 - 3, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "81be109718254013fa033ec3b4239dac571c95f84d92ad6a2e41c74de7d32119"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "FourN",
        "commit": "1180e80e574d7679d9c63fa20ff90f538678f0d6",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "Foundation/Modal/Kripke/Logic/K4n.lean",
        "start_line": 103,
        "start_column": 4,
        "end_line": 103,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case pos\nn m : \u2115+\nx : failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)\nRxy : x \u227a^[\u2191(n + 1) + 1] LO.Modal.Logic.K4n.counterframe.last n\n\u22a2 x \u227a^[\u2191(n + 1)] LO.Modal.Logic.K4n.counterframe.last n",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/1180e80e574d7679d9c63fa20ff90f538678f0d6/Foundation/Modal/Kripke/Logic/K4n.lean#L103"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-07-04T13:58:47+09:00",
        "inclusion_date": "2025-07-05T03:16:51.088873+00:00"
      },
      "id": "d831bdea35ebcb939ab18b6845975a698fdf79a37b298e7e5a6fce4768483eb1"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "pitmonticone/bump_v4.22.0-rc3",
        "commit": "896d30c5689af9e80b66caeac87f956894140d7c",
        "lean_version": "v4.22.0-rc2"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
        "start_line": 955,
        "start_column": 2,
        "end_line": 955,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d : MeasurableSpace \u03b1\n\u03bc : Measure \u03b1\np : ENNReal\nf : \u2115 \u2192 \u03b1 \u2192 ENNReal\nhf : \u2200 (n : \u2115), AEMeasurable (f n) \u03bc\nh_mono : \u2200\u1d50 (x : \u03b1) \u2202\u03bc, Monotone fun n => f n x\n\u22a2 \u2a06 n, eLpNorm (f n) p \u03bc = eLpNorm (\u2a06 n, f n) p \u03bc",
        "url": "https://github.com/fpvandoorn/carleson/blob/896d30c5689af9e80b66caeac87f956894140d7c/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L955"
      },
      "metadata": {
        "blame_email_hash": "5c7558c81f28",
        "blame_date": "2025-06-26T19:27:17+02:00",
        "inclusion_date": "2025-07-11T03:29:57.202226+00:00"
      },
      "id": "e615d6b32cc70095a2ae65782d78dc9a490a5d385dad45a87f32cc65a6d353e8"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-hardly-ramified",
        "commit": "60be88a841fa232b563ea16600befe5efbfb3d07",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FLT/AutomorphicForm/QuaternionAlgebra/HeckeOperators/Concrete.lean",
        "start_line": 172,
        "start_column": 2,
        "end_line": 172,
        "end_column": 7
      },
      "debug_info": {
        "goal": "F : Type u_1\ninst\u271d\u2076 : Field F\ninst\u271d\u2075 : NumberField F\ninst\u271d\u2074 : IsTotallyReal F\nD : Type u_2\ninst\u271d\u00b3 : Ring D\ninst\u271d\u00b2 : Algebra F D\ninst\u271d\u00b9 : IsQuaternionAlgebra F D\nr : Rigidification F D\nS : Finset (HeightOneSpectrum (RingOfIntegers F))\nR : Type u_3\ninst\u271d : CommRing R\nv : HeightOneSpectrum (RingOfIntegers F)\n\u03b1 \u03b2 : \u21a5(adicCompletionIntegers F v)\nh\u03b1 : \u03b1 \u2260 0\nh\u03b2 : \u03b2 \u2260 0\n\u22a2 @TotallyDefiniteQuaternionAlgebra.WeightTwoAutomorphicForm.HeckeOperator.U F inst\u271d\u2076 inst\u271d\u2075 inst\u271d\u2074 D inst\u271d\u00b3 inst\u271d\u00b2\n        inst\u271d\u00b9 r S R inst\u271d v \u03b1 h\u03b1 \u2218\u2097\n      @TotallyDefiniteQuaternionAlgebra.WeightTwoAutomorphicForm.HeckeOperator.U F inst\u271d\u2076 inst\u271d\u2075 inst\u271d\u2074 D inst\u271d\u00b3 inst\u271d\u00b2\n        inst\u271d\u00b9 r S R inst\u271d v \u03b2 h\u03b2 =\n    @TotallyDefiniteQuaternionAlgebra.WeightTwoAutomorphicForm.HeckeOperator.U F inst\u271d\u2076 inst\u271d\u2075 inst\u271d\u2074 D inst\u271d\u00b3 inst\u271d\u00b2\n      inst\u271d\u00b9 r S R inst\u271d v (\u03b1 * \u03b2)\n      (@Ne.mul (\u21a5(adicCompletionIntegers F v))\n        NormedCommRing.toNonUnitalNormedCommRing.toNonUnitalCommRing.toNonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring.toDistrib.toMul\n        (ZeroMemClass.zero (adicCompletionIntegers F v)) \u22ef \u03b1 \u03b2 h\u03b1 h\u03b2)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/60be88a841fa232b563ea16600befe5efbfb3d07/FLT/AutomorphicForm/QuaternionAlgebra/HeckeOperators/Concrete.lean#L172"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-05-31T23:45:42+01:00",
        "inclusion_date": "2025-09-18T04:05:26.332171+00:00"
      },
      "id": "74695bb52228137f008a0244d63bf2453da2ef21a71ceae44381de8a8b486005"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "99a77d19845fb8083456331fd1256bf35a48f60c",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 45,
        "start_column": 22,
        "end_line": 45,
        "end_column": 27
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(A ^ 2).card \u2264 K * \u2191A.card\nhK : 1 \u2264 K\nS : Finset G := \u22ef\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\n\u22a2 \u2191(A\u207b\u00b9 * A).card \u2264 K ^ 2 * \u2191A.card",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/99a77d19845fb8083456331fd1256bf35a48f60c/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L45"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-09-08T22:03:06.847248+00:00"
      },
      "id": "7992e2da6dfcb773aef6d5602b4f737dd1b7f7a204f273b1d0b59f815e51d194"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "f3a79ff712e3256c6d761622488ebae28bd26f32",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 4372,
        "start_column": 6,
        "end_line": 4372,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case neg\nSmoothingF : \u211d \u2192 \u211d\nC\u2081 : \u211d\nC\u2081pos : 0 < C\u2081\nMbd :\n  \u2200 (\u03c3\u2081 : \u211d),\n    0 < \u03c3\u2081 \u2192\n      \u2200 (s : \u2102),\n        \u03c3\u2081 \u2264 s.re \u2192\n          s.re \u2264 2 \u2192\n            \u2200 (\u03b5 : \u211d), 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2016MellinTransform (fun x => \u2191(Smooth1 SmoothingF \u03b5 x)) s\u2016 \u2264 C\u2081 * (\u03b5 * \u2016s\u2016 ^ 2)\u207b\u00b9\nA : \u211d\nAbd : A \u2208 Ioc 0 (1 / 2)\nC\u2082 : \u211d\nC\u2082pos : 0 < C\u2082\n\u03b6bd :\n  \u2200 (\u03c3 T t : \u211d),\n    3 < |t| \u2192\n      |t| \u2264 T \u2192\n        \u03c3 \u2208 Ico (1 - A / Real.log T ^ 9) 1 \u2192\n          \u2016deriv riemannZeta (\u2191\u03c3 + \u2191t * I) / riemannZeta (\u2191\u03c3 + \u2191t * I)\u2016 \u2264 C\u2082 * Real.log T ^ 9\nC\u2083 : \u211d\nC\u2083_gt : C\u2083 \u2265 1\nhC\u2083 : \u2200 X \u2265 3, Real.log X ^ 9 \u2264 C\u2083 * X\nC' : \u211d := C\u2081 * C\u2082 * C\u2083 * Real.exp 1\nthis : C' > 0\nX : \u211d\nX_gt : 3 < X\n\u03b5 : \u211d\n\u03b5_pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\nT : \u211d\nT_gt : 3 < T\n\u03c3\u2081 : \u211d := 1 - A / Real.log T ^ 9\nXpos : 0 < X\nTpos : 0 < T\ninterval_length_nonneg : \u03c3\u2081 \u2264 1 + (Real.log X)\u207b\u00b9\n\u03c3\u2081pos : 0 < \u03c3\u2081\n\u03c3 : \u211d\nh\u03c3 : \u03c3 \u2208 Ioc \u03c3\u2081 (1 + (Real.log X)\u207b\u00b9)\nh\u03c31 : 1 \u2264 \u03c3\n\u22a2 \u2016deriv riemannZeta (\u2191\u03c3 - \u2191T * I) / riemannZeta (\u2191\u03c3 - \u2191T * I)\u2016 \u2264 C\u2082 * (C\u2083 * T)",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/f3a79ff712e3256c6d761622488ebae28bd26f32/PrimeNumberTheoremAnd/MediumPNT.lean#L4372"
      },
      "metadata": {
        "blame_email_hash": "3b5a2f161a6f",
        "blame_date": "2025-06-27T19:13:46-04:00",
        "inclusion_date": "2025-07-08T03:03:32.594519+00:00"
      },
      "id": "b89c06d7de6eba71d4bb09bea54538a9f2020d36ae5713769dd8562bd74b9ce1"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "58ff9ddb3f6bc3860fb0316cc210fca5d488ba62",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PFR/MultiTauFunctional.lean",
        "start_line": 54,
        "start_column": 111,
        "end_line": 54,
        "end_column": 116
      },
      "debug_info": {
        "goal": "G \u03a9\u2080 : Type u\ninst\u271d\u2074 : @MeasureableFinGroup G\ninst\u271d\u00b3 : TopologicalSpace G\ninst\u271d\u00b2 : DiscreteTopology G\ninst\u271d\u00b9 : BorelSpace G\ninst\u271d : MeasureSpace \u03a9\u2080\np : @multiRefPackage G \u03a9\u2080 inst\u271d\u2074 inst\u271d\n\u22a2 Continuous fun \u03bc =>\n    @multiTau G \u03a9\u2080 inst\u271d\u2074 inst\u271d p (fun x => G)\n      (fun i =>\n        { toMeasurableSpace := @MeasureableFinGroup.toMeasurableSpace ((fun x => G) i) inst\u271d\u2074, volume := \u2191(\u03bc i) })\n      fun x => id",
        "url": "https://github.com/teorth/pfr/blob/58ff9ddb3f6bc3860fb0316cc210fca5d488ba62/PFR/MultiTauFunctional.lean#L54"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-29T09:57:28-07:00",
        "inclusion_date": "2025-07-05T05:06:27.171280+00:00"
      },
      "id": "a7bb38c4cef53ac8d24e33eb40a65976f878090e5bbf79577a9c96cfb025acdf"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "ymizuno-lax",
        "commit": "0e4ed58ff12b8ebe986fb9f1fc49dd73fc57bc9c",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/CategoryTheory/Bicategory/NaturalTransformation/Lax.lean",
        "start_line": 184,
        "start_column": 27,
        "end_line": 184,
        "end_column": 32
      },
      "debug_info": {
        "goal": "B : Type u\u2081\ninst\u271d\u00b9 : Bicategory B\nC : Type u\u2082\ninst\u271d : Bicategory C\nF G H : LaxFunctor B C\n\u03b7\u271d : @CategoryTheory.Lax.OplaxTrans B inst\u271d\u00b9 C inst\u271d F G\n\u03b8\u271d : @CategoryTheory.Lax.OplaxTrans B inst\u271d\u00b9 C inst\u271d G H\n\u03b7 : @CategoryTheory.Lax.OplaxTrans B inst\u271d\u00b9 C inst\u271d F G\n\u03b8 : @CategoryTheory.Lax.OplaxTrans B inst\u271d\u00b9 C inst\u271d G H\na\u271d b\u271d : B\nf\u271d g\u271d : a\u271d \u27f6 b\u271d\n\u22a2 \u2200 (\u03b7_1 : f\u271d \u27f6 g\u271d),\n    CategoryStruct.comp\n        (Bicategory.whiskerRight (F.map\u2082 \u03b7_1) (@CategoryTheory.Lax.OplaxTrans.vCompApp B inst\u271d\u00b9 C inst\u271d F G H \u03b7 \u03b8 b\u271d))\n        (sorry g\u271d) =\n      CategoryStruct.comp (sorry f\u271d)\n        (Bicategory.whiskerLeft (@CategoryTheory.Lax.OplaxTrans.vCompApp B inst\u271d\u00b9 C inst\u271d F G H \u03b7 \u03b8 a\u271d) (H.map\u2082 \u03b7_1))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/0e4ed58ff12b8ebe986fb9f1fc49dd73fc57bc9c/Mathlib/CategoryTheory/Bicategory/NaturalTransformation/Lax.lean#L184"
      },
      "metadata": {
        "blame_email_hash": "35a9e687d309",
        "blame_date": "2025-06-07T17:24:19+00:00",
        "inclusion_date": "2025-06-08T03:08:58.277863+00:00"
      },
      "id": "97993fb53bebefae2f3cbb563d834ca018923994694e5f51cd211d9f686a66f1"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "65f9a265db8ee0a8060b0eb706b5a1f47080a4c0",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 245,
        "start_column": 6,
        "end_line": 245,
        "end_column": 11
      },
      "debug_info": {
        "goal": "R : Type ?u.28050\ninst\u271d\u00b9 : CommRing R\nS : Type ?u.28056\ninst\u271d : CommRing S\nf : R \u2192+* S\nhf : Surjective \u21d1f\n\u22a2 \u2200 (x y : R \u29f8 ker f),\n    (@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f) (x * y) =\n      (@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f) x * (@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f) y",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/65f9a265db8ee0a8060b0eb706b5a1f47080a4c0/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L245"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-07-31T00:17:46.358869+00:00"
      },
      "id": "41653db6d42d2ebeaaf4f2dc870747360745db14e5f8854cb08b50b617021882"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean",
        "start_line": 59,
        "start_column": 38,
        "end_line": 59,
        "end_column": 43
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Fintype L\ninst\u271d\u2076 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2075 : Field \ud835\udd3dq\ninst\u271d\u2074 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u00b3 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b2 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u00b9 : NeZero \u03d1\ninst\u271d : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\ni : Fin r\nf : \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate i) \u2192 L\nr_chal : L\n\u22a2 \u2191i + 1 < r",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean#L59"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "77aa82c97343639c772bb4470427f02c6700f57f6fc1dc7bfaef1ad4feb59d75"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "master",
        "commit": "a28c2a770d0c267b697ceb5bd2a6a58d3cb1ad19",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PhysLean/Mathematics/VariationalCalculus/Basic.lean",
        "start_line": 56,
        "start_column": 16,
        "end_line": 56,
        "end_column": 21
      },
      "debug_info": {
        "goal": "X : Type u_1\ninst\u271d\u2078 : NormedAddCommGroup X\ninst\u271d\u2077 : NormedSpace \u211d X\ninst\u271d\u2076 : MeasurableSpace X\nV : Type u_2\ninst\u271d\u2075 : NormedAddCommGroup V\ninst\u271d\u2074 : NormedSpace \u211d V\ninst\u271d\u00b3 : InnerProductSpace' \u211d V\nf : X \u2192 V\n\u03bc : Measure X\ninst\u271d\u00b2 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b9 : \u03bc.IsOpenPosMeasure\ninst\u271d : OpensMeasurableSpace X\nhf : Continuous f\nhg : \u2200 (g : X \u2192 V), IsTestFunction g \u2192 \u222b (x : X), inner \u211d (f x) (g x) \u2202\u03bc = 0\n\u22a2 f = 0",
        "url": "https://github.com/HEPLean/PhysLean/blob/a28c2a770d0c267b697ceb5bd2a6a58d3cb1ad19/PhysLean/Mathematics/VariationalCalculus/Basic.lean#L56"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-06-28T08:23:46+00:00",
        "inclusion_date": "2025-07-22T23:42:00.157211+00:00"
      },
      "id": "1a2a8a6a462578920d8caff4ce5a9fe5d5fa2f480421d2441467f85f58734bb7"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 41,
        "start_column": 2,
        "end_line": 41,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k x : \u211d\nh\u2080 : x = (13 - \u221a131) / 4\nh\u2081 : 2 * ((13 - \u221a131) / 4) ^ 2 - 13 * ((13 - \u221a131) / 4) + k = 0\n\u22a2 13 * ((13 - \u221a131) / 4) - 2 * ((13 - \u221a131) / 4 * ((13 - \u221a131) / 4)) = 19 / 4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Valid.lean#L41"
      },
      "metadata": {
        "blame_email_hash": "dd1b74f40c05",
        "blame_date": "2025-01-21T09:55:27-05:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "7d5b522ad24b25270a7ab304a168a6598ea90fcefa74e7630a38b128685fae55"
    },
    {
      "repo": {
        "remote": "https://github.com/cmu-l3/llmlean",
        "branch": "kimina-pr",
        "commit": "126a6b2af37727c4d81bb49f6af6b354a380145e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LLMleanTest/Examples2.lean",
        "start_line": 110,
        "start_column": 2,
        "end_line": 110,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 sqrt '' {x | x \u2265 0} = {y | y \u2265 0}",
        "url": "https://github.com/cmu-l3/llmlean/blob/126a6b2af37727c4d81bb49f6af6b354a380145e/LLMleanTest/Examples2.lean#L110"
      },
      "metadata": {
        "blame_email_hash": "3ab0971ac342",
        "blame_date": "2024-07-23T17:17:09-04:00",
        "inclusion_date": "2025-06-11T03:39:01.065377+00:00"
      },
      "id": "4c5fc5938ae6a1553355ed6d277178634e0da577b2c0c5db354d5ab7a4f9ba16"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_44.lean",
        "start_line": 108,
        "start_column": 2,
        "end_line": 108,
        "end_column": 7
      },
      "debug_info": {
        "goal": "V : Type u\ninst\u271d\u00b9 : Fintype V\nG : SimpleGraph V\ninst\u271d : Nonempty V\nh : \u2200 \u2983v w : V\u2984, v \u2260 w \u2192 Fintype.card \u2191(G.commonNeighbors v w) = 1\nno_politician : \u00ac\u2203 v, \u2200 (w : V), v \u2260 w \u2192 G.Adj v w\nlemma\u2081 : \u2203 k, G.IsRegularOfDegree k\nk : \u2115\nhregular : G.IsRegularOfDegree k\nn : \u2115 := Fintype.card V\neq\u2081 : n = k ^ 2 - k + 1\nthis\u271d : 2 < k\nA : Matrix V V \u211d := adjMatrix \u211d G\nthis : A ^ 2 = (k - 1) \u2022 1 + of fun x x => 1\n\u22a2 False",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_44.lean#L108"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2024-01-04T23:14:13+01:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "04e68034e34f8b831c4e9674eaaa75d99e331a5db20c242796b4a0bd8adcd019"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/9SpecialMatrices.lean",
        "start_line": 146,
        "start_column": 2,
        "end_line": 146,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m : Type u_1\ninst\u271d\u00b9 : Fintype m\ninst\u271d : DecidableEq m\nA : Matrix m m \u2102\n\u22a2 A \u2208 skewAdjoint (Matrix m m \u2102) \u2194 \u2200 (x y : m \u2192 \u2102), star x \u2b1d\u1d65 A.mulVec y = -star x \u2b1d\u1d65 A.conjTranspose.mulVec y",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/9SpecialMatrices.lean#L146"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2023-10-11T15:16:39+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "9fe3aa9dd34d44c0c1691dc09a33dc40fc50cfdec547c770d3a0dc57ae1a96e1"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 4 - 3, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "41e6f9e1feec43b30dcbf75ff8fc0208a59b548d5300bb847fefbb9fdf1d7ff0"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "FourN",
        "commit": "1180e80e574d7679d9c63fa20ff90f538678f0d6",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "Foundation/Modal/Kripke/Logic/K4n.lean",
        "start_line": 104,
        "start_column": 4,
        "end_line": 104,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case neg\nn m : \u2115+\nx y : failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)\nRxy : x \u227a^[\u2191(n + 1) + 1] y\ney : \u00acy = LO.Modal.Logic.K4n.counterframe.last n\n\u22a2 x \u227a^[\u2191(n + 1)] y",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/1180e80e574d7679d9c63fa20ff90f538678f0d6/Foundation/Modal/Kripke/Logic/K4n.lean#L104"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-07-04T13:58:47+09:00",
        "inclusion_date": "2025-07-05T03:16:51.088873+00:00"
      },
      "id": "244aa26cad8d5a4aa34fe6582fbe1a83d868423343d477bdb9b1156443adaab6"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "42757f7613cd95be2c333711d8e393236c64bf2e",
        "lean_version": "v4.22.0-rc2"
      },
      "location": {
        "path": "Carleson/ToMathlib/WeakType.lean",
        "start_line": 841,
        "start_column": 8,
        "end_line": 841,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case h.e'_2.h.e'_6\n\u03b1 : Type u_1\n\u03b5 : Type u_3\nm : MeasurableSpace \u03b1\n\u03bc : Measure \u03b1\ninst\u271d\u00b9 : TopologicalSpace \u03b5\ninst\u271d : ContinuousENorm \u03b5\nf : \u03b1 \u2192 \u03b5\nhf : AEStronglyMeasurable f \u03bc\np : \u211d\nhp : 0 < p\nthis :\n  \u222b\u207b (\u03c9 : \u03b1), ENNReal.ofReal (\u2016f \u03c9\u2016\u2091.toReal ^ p) \u2202\u03bc =\n    \u222b\u207b (a : \u211d) in Ioi 0, ENNReal.ofReal p * ENNReal.ofReal (a ^ (p - 1)) * \u03bc {a_1 | a < \u2016f a_1\u2016\u2091.toReal}\nae_finite : 0 < \u03bc {x | \u2016f x\u2016\u2091 = \u22a4}\n\u22a2 \u222b\u207b (t : \u211d) in Ioi 0, ENNReal.ofReal (t ^ (p - 1)) = \u22a4",
        "url": "https://github.com/fpvandoorn/carleson/blob/42757f7613cd95be2c333711d8e393236c64bf2e/Carleson/ToMathlib/WeakType.lean#L841"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-06-22T12:31:50+02:00",
        "inclusion_date": "2025-07-08T03:50:19.244847+00:00"
      },
      "id": "cae2b5d5bd0268e7abf515a90115b139d56a0f39991e87ed45b6943b344e356f"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-hardly-ramified",
        "commit": "60be88a841fa232b563ea16600befe5efbfb3d07",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FLT/Deformations/Representable.lean",
        "start_line": 21,
        "start_column": 2,
        "end_line": 21,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : Type\ninst\u271d\u00b9\u00b2 : Fintype n\ninst\u271d\u00b9\u00b9 : DecidableEq n\nG : Type u\ninst\u271d\u00b9\u2070 : Group G\ninst\u271d\u2079 : TopologicalSpace G\ninst\u271d\u2078 : T0Space G\ninst\u271d\u2077 : TotallyDisconnectedSpace G\ninst\u271d\u2076 : CompactSpace G\n\ud835\udcde : Type u\ninst\u271d\u2075 : CommRing \ud835\udcde\ninst\u271d\u2074 : IsLocalRing \ud835\udcde\ninst\u271d\u00b3 : IsNoetherianRing \ud835\udcde\ninst\u271d\u00b2 : Finite (ResidueField \ud835\udcde)\ninst\u271d\u00b9 : IsAdicComplete (maximalIdeal \ud835\udcde) \ud835\udcde\n\u03c1 : (repnFunctor n G \ud835\udcde).obj ProartinianCat.residueField\ninst\u271d : (toRepresentation \u03c1).IsAbsolutelyIrreducible\n\u22a2 (deformationFunctor n G \ud835\udcde \u03c1).toFunctor.IsCorepresentable",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/60be88a841fa232b563ea16600befe5efbfb3d07/FLT/Deformations/Representable.lean#L21"
      },
      "metadata": {
        "blame_email_hash": "a9aab1f797ea",
        "blame_date": "2025-05-29T17:34:10+01:00",
        "inclusion_date": "2025-09-18T04:05:26.332171+00:00"
      },
      "id": "d3c2f20f651391b5f55bf4850f21d173b92c488ddb16e4a4ccdbbee40a672cb6"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "99a77d19845fb8083456331fd1256bf35a48f60c",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 46,
        "start_column": 69,
        "end_line": 46,
        "end_column": 74
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(A ^ 2).card \u2264 K * \u2191A.card\nhK : 1 \u2264 K\nS : Finset G := \u22ef\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191S.card \u2264 K ^ 2 * \u2191A.card\n\u22a2 \u2203 F \u2286 A, \u2191F.card \u2264 2 * K \u2227 A \u2286 S * F",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/99a77d19845fb8083456331fd1256bf35a48f60c/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-09-08T22:03:06.847248+00:00"
      },
      "id": "e0afbf33c1b85c4ae9165abf60869c7ed927fec585509decf3df6dcf2ab4a5c2"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "51c6063c647276f7c01e848976e6721033829c90",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 6387,
        "start_column": 28,
        "end_line": 6387,
        "end_column": 33
      },
      "debug_info": {
        "goal": "c : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\nX\u2080 : \u211d := sorry\nX : \u211d\nX_ge_X\u2080 : X \u2265 X\u2080\n\u22a2 3 < X",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/51c6063c647276f7c01e848976e6721033829c90/PrimeNumberTheoremAnd/MediumPNT.lean#L6387"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-06-27T14:56:34-04:00",
        "inclusion_date": "2025-07-13T23:20:18.124737+00:00"
      },
      "id": "b7302dff4cb29e5da25f8d662cb61320412e7ac4ce73b01206d8a936827b602e"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 58,
        "start_column": 74,
        "end_line": 58,
        "end_column": 79
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure \u2119\nm : \u211d\n\u22a2 H[\u2211 i, \u2211 j, Y (i, j)] \u2264 (2 * \u2191p.m - 1) * multiTau p \u03a9 h\u03a9 X + m\u207b\u00b9 * \u2211 i, H[X i]",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L58"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-29T08:58:11-07:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "0381ab7073b4982159ac5623798bea6ea615a71bf007c9a54a9124baf57d9669"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "ymizuno-lax",
        "commit": "0e4ed58ff12b8ebe986fb9f1fc49dd73fc57bc9c",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/CategoryTheory/Bicategory/NaturalTransformation/Lax.lean",
        "start_line": 185,
        "start_column": 19,
        "end_line": 185,
        "end_column": 24
      },
      "debug_info": {
        "goal": "B : Type u\u2081\ninst\u271d\u00b9 : Bicategory B\nC : Type u\u2082\ninst\u271d : Bicategory C\nF G H : LaxFunctor B C\n\u03b7\u271d : @CategoryTheory.Lax.OplaxTrans B inst\u271d\u00b9 C inst\u271d F G\n\u03b8\u271d : @CategoryTheory.Lax.OplaxTrans B inst\u271d\u00b9 C inst\u271d G H\n\u03b7 : @CategoryTheory.Lax.OplaxTrans B inst\u271d\u00b9 C inst\u271d F G\n\u03b8 : @CategoryTheory.Lax.OplaxTrans B inst\u271d\u00b9 C inst\u271d G H\n\u22a2 \u2200 (a : B),\n    CategoryStruct.comp\n        (Bicategory.whiskerRight (F.mapId a) (@CategoryTheory.Lax.OplaxTrans.vCompApp B inst\u271d\u00b9 C inst\u271d F G H \u03b7 \u03b8 a))\n        (sorry (CategoryStruct.id a)) =\n      CategoryStruct.comp (leftUnitor (@CategoryTheory.Lax.OplaxTrans.vCompApp B inst\u271d\u00b9 C inst\u271d F G H \u03b7 \u03b8 a)).hom\n        (CategoryStruct.comp (rightUnitor (@CategoryTheory.Lax.OplaxTrans.vCompApp B inst\u271d\u00b9 C inst\u271d F G H \u03b7 \u03b8 a)).inv\n          (Bicategory.whiskerLeft (@CategoryTheory.Lax.OplaxTrans.vCompApp B inst\u271d\u00b9 C inst\u271d F G H \u03b7 \u03b8 a) (H.mapId a)))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/0e4ed58ff12b8ebe986fb9f1fc49dd73fc57bc9c/Mathlib/CategoryTheory/Bicategory/NaturalTransformation/Lax.lean#L185"
      },
      "metadata": {
        "blame_email_hash": "35a9e687d309",
        "blame_date": "2025-06-07T17:24:19+00:00",
        "inclusion_date": "2025-06-08T03:08:58.277863+00:00"
      },
      "id": "93a589fba4e95763289cb1239483cd9a5e26613d83ab289363dba5ada07e7adb"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "65f9a265db8ee0a8060b0eb706b5a1f47080a4c0",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 247,
        "start_column": 6,
        "end_line": 247,
        "end_column": 11
      },
      "debug_info": {
        "goal": "R : Type ?u.28050\ninst\u271d\u00b9 : CommRing R\nS : Type ?u.28056\ninst\u271d : CommRing S\nf : R \u2192+* S\nhf : Surjective \u21d1f\n\u22a2 \u2200 (x y : R \u29f8 ker f),\n    (@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f) (x + y) =\n      (@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f) x + (@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f) y",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/65f9a265db8ee0a8060b0eb706b5a1f47080a4c0/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L247"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-07-31T00:17:46.358869+00:00"
      },
      "id": "ecfe0e433a63f9c159d0a6f8aea1829ac8176d706787312cc29b44af606d8b2b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean",
        "start_line": 64,
        "start_column": 24,
        "end_line": 64,
        "end_column": 29
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Fintype L\ninst\u271d\u2076 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2075 : Field \ud835\udd3dq\ninst\u271d\u2074 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u00b3 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b2 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u00b9 : NeZero \u03d1\ninst\u271d : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\ni : Fin r\nf : \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate i) \u2192 L\nr_chal : L\ny : \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i + 1, \u22ef\u27e9)\nfiber : \ud835\udd3dq \u2192 \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate i) :=\n  Binius.BinaryBasefold.qMap_fiber L inst\u271d\u2078 inst\u271d\u2077 inst\u271d\u2076 \ud835\udd3dq inst\u271d\u2075 inst\u271d\u2074 h_Fq_char_prime h_Fq_card_gt_1 inst\u271d\u00b3 r\n    inst\u271d\u00b2 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate i y\nx\u2080 : \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate i) := fiber 0\nx\u2081 : \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate i) := fiber 1\n\u22a2 \u2191x\u2080 \u2208 sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate i",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean#L64"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "a0097e272ef5a83176ffbd7ae54f67156b5de931e42bea738c5d1c59d6da6e9b"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "StringsCharges",
        "commit": "25c552a2c25a922bf5dbdb120a212ea73b365f5b",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "PhysLean/CondensedMatter/TightBindingChain/Basic.lean",
        "start_line": 101,
        "start_column": 58,
        "end_line": 101,
        "end_column": 63
      },
      "debug_info": {
        "goal": "T : CondensedMatter.TightBindingChain\n\u03c8 \u03c6 : CondensedMatter.TightBindingChain.HilbertSpace T\n\u22a2 inner \u2102\n      (@DFunLike.coe\n        (CondensedMatter.TightBindingChain.HilbertSpace T \u2192\u2097[\u2102] CondensedMatter.TightBindingChain.HilbertSpace T)\n        (CondensedMatter.TightBindingChain.HilbertSpace T) (fun x => CondensedMatter.TightBindingChain.HilbertSpace T)\n        LinearMap.instFunLike (CondensedMatter.TightBindingChain.hamiltonian T) \u03c8)\n      \u03c6 =\n    inner \u2102 \u03c8\n      (@DFunLike.coe\n        (CondensedMatter.TightBindingChain.HilbertSpace T \u2192\u2097[\u2102] CondensedMatter.TightBindingChain.HilbertSpace T)\n        (CondensedMatter.TightBindingChain.HilbertSpace T) (fun x => CondensedMatter.TightBindingChain.HilbertSpace T)\n        LinearMap.instFunLike (CondensedMatter.TightBindingChain.hamiltonian T) \u03c6)",
        "url": "https://github.com/HEPLean/PhysLean/blob/25c552a2c25a922bf5dbdb120a212ea73b365f5b/PhysLean/CondensedMatter/TightBindingChain/Basic.lean#L101"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-06-28T08:23:46+00:00",
        "inclusion_date": "2025-09-17T03:53:50.079672+00:00"
      },
      "id": "7ce8172d3cbe61e5d875fbbdf2d5d887d1ec280143c3c173f64a0790d2f2c41a"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 769,
        "start_column": 2,
        "end_line": 769,
        "end_column": 7
      },
      "debug_info": {
        "goal": "u v : \u2115 \u2192 \u2115\nh\u2080 : \u2200 (n : \u2115), u n = 2 * n + 2\nh\u2081 : \u2200 (n : \u2115), v n = 2 * n + 1\n\u22a2 \u2211 x \u2208 Finset.range 2003, (2 * x + 2) - \u2211 x \u2208 Finset.range 2003, (2 * x + 1) = 2003",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Valid.lean#L769"
      },
      "metadata": {
        "blame_email_hash": "dd1b74f40c05",
        "blame_date": "2025-01-21T09:55:27-05:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "9d404e3ade6a7a4dca8949b4bbadc5e5347b6f3d174f3165f0cd972335f6f84b"
    },
    {
      "repo": {
        "remote": "https://github.com/cmu-l3/llmlean",
        "branch": "kimina-pr",
        "commit": "126a6b2af37727c4d81bb49f6af6b354a380145e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LLMleanTest/Examples2.lean",
        "start_line": 113,
        "start_column": 2,
        "end_line": 113,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 (range fun x => x ^ 2) = {y | y \u2265 0}",
        "url": "https://github.com/cmu-l3/llmlean/blob/126a6b2af37727c4d81bb49f6af6b354a380145e/LLMleanTest/Examples2.lean#L113"
      },
      "metadata": {
        "blame_email_hash": "3ab0971ac342",
        "blame_date": "2024-07-23T17:17:09-04:00",
        "inclusion_date": "2025-06-11T03:39:01.065377+00:00"
      },
      "id": "f0569a3f48a7b02ed9b1f3494b263bc87dcf574a84ee3bd9a172131e58f20de3"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_07.lean",
        "start_line": 32,
        "start_column": 2,
        "end_line": 32,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nA : Matrix (Fin n) (Fin n) \u211d\nh : A.IsHermitian\n\u22a2 \u2203 Q \u2208 orthogonalGroup (Fin n) \u211d, \u2203 d, diagonal d = Q.conjTranspose * A * Q",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_07.lean#L32"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2024-01-04T16:26:50+01:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "667ef46ae566f5f63328f0a61dcd13d0dd0b28470460db0f4bd553b096ad3657"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/9SpecialMatrices.lean",
        "start_line": 149,
        "start_column": 2,
        "end_line": 149,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m : Type u_1\ninst\u271d\u00b9 : Fintype m\ninst\u271d : DecidableEq m\nA : Matrix m m \u2102\n\u22a2 A.IsHermitian \u2192 sorry",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/9SpecialMatrices.lean#L149"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2023-10-11T15:16:39+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "7a266ebcb136c74c0615085e4b6b194cf27b7f85845426c52c074f553e9c1908"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 5 - 3, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "1274e5c83ee1358d23b96e80b4b9d95225b8397cbcb6a3e2714d59f168876957"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "R0-interpolant",
        "commit": "1f0954b25876debf5511d9337f1e0de48b2122d7",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "Foundation/FirstOrder/Incompleteness/Dense.lean",
        "start_line": 97,
        "start_column": 8,
        "end_line": 97,
        "end_column": 13
      },
      "debug_info": {
        "goal": "T : Theory \u2112\u2092\u1d63\ninst\u271d\u00b2 : \ud835\udc11\u2080 \u2aaf T\ninst\u271d\u00b9 : Sigma1Sound T\ninst\u271d : T.Delta1Definable\n\u03c6 \u03c8 : SyntacticFormula \u2112\u2092\u1d63\nh : \u27e6\u03c6\u27e7 < \u27e6\u03c8\u27e7\nh\u2081 : T \u22a2! \u03c6 \u279d \u03c8\nh\u2082 : T \u22ac \u03c8 \u279d \u03c6\nthis\u271d : \u00acEntailment.Complete (T + {\u03c8, \u223c\u03c6})\n\u03c1 : SyntacticFormula \u2112\u2092\u1d63\nh\u03c1 : Undecidable (T + {\u03c8, \u223c\u03c6}) \u03c1\nhC : T \u22a2! \u03c6 \u22ce \u03c8 \u22cf \u223c\u03c1 \u279d \u03c6\nthis : T \u22a2! \u03c8 \u279d \u223c\u03c6 \u279d \u03c1\n\u22a2 T + {\u03c8, \u223c\u03c6} \u22a2! \u03c1",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/1f0954b25876debf5511d9337f1e0de48b2122d7/Foundation/FirstOrder/Incompleteness/Dense.lean#L97"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-06-30T14:10:49+09:00",
        "inclusion_date": "2025-07-03T03:31:44.579717+00:00"
      },
      "id": "0fe50cc25ee6c63fd84eda17d80531d59e361f9e8f14080553fb24ed24db3bf4"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "pitmonticone/bump_v4.22.0-rc3",
        "commit": "896d30c5689af9e80b66caeac87f956894140d7c",
        "lean_version": "v4.22.0-rc2"
      },
      "location": {
        "path": "Carleson/ToMathlib/RealInterpolation/Main.lean",
        "start_line": 1398,
        "start_column": 100,
        "end_line": 1398,
        "end_column": 105
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b1' : Type u_2\nE\u2081 : Type u_4\nE\u2082 : Type u_5\nm : MeasurableSpace \u03b1\nm' : MeasurableSpace \u03b1'\n\u03bc : Measure \u03b1\n\u03bd : Measure \u03b1'\nT : (\u03b1 \u2192 E\u2081) \u2192 \u03b1' \u2192 E\u2082\np\u2080 p\u2081 r\u2080 r\u2081 q\u2080 q\u2081 s\u2080 s\u2081 p q : ENNReal\ninst\u271d\u2075 : MeasurableSpace E\u2081\ninst\u271d\u2074 : TopologicalSpace E\u2081\ninst\u271d\u00b3 : ENormedAddCommMonoid E\u2081\ninst\u271d\u00b2 : MeasurableSpace E\u2082\ninst\u271d\u00b9 : TopologicalSpace E\u2082\ninst\u271d : ENormedAddCommMonoid E\u2082\nhp\u2080 : 1 \u2264 p\u2080\nhp\u2081 : 1 \u2264 p\u2081\nhr\u2080 : 1 \u2264 r\u2080\nhr\u2081 : 1 \u2264 r\u2081\nhq\u2080 : 1 \u2264 q\u2080\nhq\u2081 : 1 \u2264 q\u2081\nhs\u2080 : 1 \u2264 s\u2080\nhs\u2081 : 1 \u2264 s\u2081\nhp\u2080p\u2081 : p\u2080 \u2260 p\u2081\nhq\u2080q\u2081 : q\u2080 \u2260 q\u2081\nC\u2080 C\u2081 t A : NNReal\nhA : 0 < A\nht : t \u2208 Ioo 0 1\nhC\u2080 : 0 < C\u2080\nhC\u2081 : 0 < C\u2081\nhp : p\u207b\u00b9 = (1 - \u2191t) / p\u2080 + \u2191t / p\u2081\nhq : q\u207b\u00b9 = (1 - \u2191t) / q\u2080 + \u2191t / q\u2081\nhmT : \u2200 (f : \u03b1 \u2192 E\u2081), MemLorentz f p q \u03bc \u2192 AEStronglyMeasurable (T f) \u03bd\nhT :\n  @MeasureTheory.AESubadditiveOn \u03b1 \u03b1' E\u2082 m' E\u2081 inst\u271d\u2074 inst\u271d\u00b3.toENormedAddMonoid inst\u271d.toENorm T\n    (fun f => MemLorentz f p\u2080 r\u2080 \u03bc \u2228 MemLorentz f p\u2081 r\u2081 \u03bc) (\u2191A) \u03bd\nh\u2080T : HasLorentzType T p\u2080 r\u2080 q\u2080 s\u2080 \u03bc \u03bd \u2191C\u2080\nh\u2081T : HasLorentzType T p\u2081 r\u2081 q\u2081 s\u2081 \u03bc \u03bd \u2191C\u2081\n\u22a2 \u2200 (r : ENNReal), 0 < r \u2192 HasLorentzType T p r q r \u03bc \u03bd \u2191(MeasureTheory.C_LorentzInterpolation p\u2080 p\u2081 q\u2080 q\u2081 q C\u2080 C\u2081 A \u2191t)",
        "url": "https://github.com/fpvandoorn/carleson/blob/896d30c5689af9e80b66caeac87f956894140d7c/Carleson/ToMathlib/RealInterpolation/Main.lean#L1398"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-06-22T10:56:17+02:00",
        "inclusion_date": "2025-07-11T03:29:57.202226+00:00"
      },
      "id": "e7cc6d94f016e6ba0493fcae5ce2e41ef216ced90c55084e8b0be89784e1757a"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "9feced61a55d9137b3b2ed3e361ef7a6c1ed654f",
        "lean_version": "v4.22.0-rc2"
      },
      "location": {
        "path": "FLT/HaarMeasure/HaarChar/AddEquiv.lean",
        "start_line": 399,
        "start_column": 2,
        "end_line": 399,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\nH : \u03b9 \u2192 Type u_2\ninst\u271d\u2076 : (i : \u03b9) \u2192 Group (H i)\ninst\u271d\u2075 : (i : \u03b9) \u2192 TopologicalSpace (H i)\ninst\u271d\u2074 : \u2200 (i : \u03b9), IsTopologicalGroup (H i)\ninst\u271d\u00b3 : \u2200 (i : \u03b9), LocallyCompactSpace (H i)\ninst\u271d\u00b2 : (i : \u03b9) \u2192 MeasurableSpace (H i)\ninst\u271d\u00b9 : \u2200 (i : \u03b9), BorelSpace (H i)\ninst\u271d : Fintype \u03b9\n\u03c8 : (i : \u03b9) \u2192 H i \u2243\u209c* H i\n\u22a2 @MeasureTheory.mulEquivHaarChar ((i : \u03b9) \u2192 H i) Pi.group Pi.topologicalSpace (borel ((i : \u03b9) \u2192 H i)) \u22ef \u22ef \u22ef\n      (@ContinuousMulEquiv.piCongrRight \u03b9 H H inst\u271d\u2076 inst\u271d\u2075 inst\u271d\u2076 inst\u271d\u2075 \u03c8) =\n    \u220f i, @MeasureTheory.mulEquivHaarChar (H i) (inst\u271d\u2076 i) (inst\u271d\u2075 i) (inst\u271d\u00b2 i) \u22ef \u22ef \u22ef (\u03c8 i)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/9feced61a55d9137b3b2ed3e361ef7a6c1ed654f/FLT/HaarMeasure/HaarChar/AddEquiv.lean#L399"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-05-23T17:40:44+01:00",
        "inclusion_date": "2025-07-03T05:51:11.126663+00:00"
      },
      "id": "1832c348b15e55797deb12b312d279360adaf0117cb8c62005fedda80f3578bb"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "99a77d19845fb8083456331fd1256bf35a48f60c",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 54,
        "start_column": 29,
        "end_line": 54,
        "end_column": 34
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(A ^ 2).card \u2264 K * \u2191A.card\nhK : 1 \u2264 K\nS : Finset G := \u22ef\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191S.card \u2264 K ^ 2 * \u2191A.card\nF : Finset G\nhFA : F \u2286 A\nhFcard : \u2191F.card \u2264 2 * K\nhASF : A \u2286 S * F\n\u22a2 \u2191(A * S ^ 3 * A\u207b\u00b9).card \u2264 8 * K ^ 11 * \u2191A.card",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/99a77d19845fb8083456331fd1256bf35a48f60c/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L54"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-09-08T22:03:06.847248+00:00"
      },
      "id": "e8ef7361c94a6fe5b5ed144f67389007e0d2e5da067459927535588b0dd6259b"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "faabe6281bf4c0ffe761835e61488b9e0d69c6cd",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 6434,
        "start_column": 45,
        "end_line": 6434,
        "end_column": 50
      },
      "debug_info": {
        "goal": "c : \u211d := sorry\ncpos : 0 < c\nC\u271d : \u211d := sorry\nX\u2080 : \u211d := sorry\nX : \u211d\nX_ge_X\u2080 : X \u2265 X\u2080\nX_gt_3 : 3 < X\n\u03b5 : \u211d := sorry\n\u03b5_pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\n\u03bd : \u211d \u2192 \u211d\nContDiff\u03bd : ContDiff \u211d (\u2191\u22a4) \u03bd\n\u03bd_nonneg' : \u2200 (x : \u211d), 0 \u2264 \u03bd x\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\n\u03bd_massOne' : \u222b (x : \u211d) in Ici 0, \u03bd x / x = 1\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\n\u03c8_\u03b5_of_X : \u2102 := SmoothedChebyshev \u03bd \u03b5 X\nC : \u211d\nCpos : C > 0\nhC :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 (\u03b5 : \u211d), 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 2 < X * \u03b5 \u2192 \u2016SmoothedChebyshev \u03bd \u03b5 X - \u2191(ChebyshevPsi X)\u2016 \u2264 C * \u03b5 * X * Real.log X\n\u22a2 2 < X * \u03b5",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/faabe6281bf4c0ffe761835e61488b9e0d69c6cd/PrimeNumberTheoremAnd/MediumPNT.lean#L6434"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-06-27T14:56:34-04:00",
        "inclusion_date": "2025-07-11T23:19:26.707212+00:00"
      },
      "id": "4ab07a185c25258ac3ccf8f41a6d21da4f4e5ba1d63fa1452d807d49a0188671"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 61,
        "start_column": 94,
        "end_line": 61,
        "end_column": 99
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure \u2119\nm : \u211d\n\u22a2 H[\u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j)] \u2264 (8 * \u2191p.m ^ 2 - 16 * \u2191p.m + 1) * multiTau p \u03a9 h\u03a9 X + m\u207b\u00b9 * \u2211 i, H[X i]",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L61"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-29T08:58:11-07:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "a1754d8ebf63b6090e9d889d468987275ebe12e78c5241969d575d4d138b7f52"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "ymizuno-lax",
        "commit": "0e4ed58ff12b8ebe986fb9f1fc49dd73fc57bc9c",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/CategoryTheory/Bicategory/NaturalTransformation/Lax.lean",
        "start_line": 186,
        "start_column": 21,
        "end_line": 186,
        "end_column": 26
      },
      "debug_info": {
        "goal": "B : Type u\u2081\ninst\u271d\u00b9 : Bicategory B\nC : Type u\u2082\ninst\u271d : Bicategory C\nF G H : LaxFunctor B C\n\u03b7\u271d : @CategoryTheory.Lax.OplaxTrans B inst\u271d\u00b9 C inst\u271d F G\n\u03b8\u271d : @CategoryTheory.Lax.OplaxTrans B inst\u271d\u00b9 C inst\u271d G H\n\u03b7 : @CategoryTheory.Lax.OplaxTrans B inst\u271d\u00b9 C inst\u271d F G\n\u03b8 : @CategoryTheory.Lax.OplaxTrans B inst\u271d\u00b9 C inst\u271d G H\na\u271d b\u271d c\u271d : B\n\u22a2 \u2200 (f : a\u271d \u27f6 b\u271d) (g : b\u271d \u27f6 c\u271d),\n    CategoryStruct.comp\n        (Bicategory.whiskerRight (F.mapComp f g)\n          (@CategoryTheory.Lax.OplaxTrans.vCompApp B inst\u271d\u00b9 C inst\u271d F G H \u03b7 \u03b8 c\u271d))\n        (sorry (CategoryStruct.comp f g)) =\n      CategoryStruct.comp\n        (associator (F.map f) (F.map g) (@CategoryTheory.Lax.OplaxTrans.vCompApp B inst\u271d\u00b9 C inst\u271d F G H \u03b7 \u03b8 c\u271d)).hom\n        (CategoryStruct.comp (Bicategory.whiskerLeft (F.map f) (sorry g))\n          (CategoryStruct.comp\n            (associator (F.map f) (@CategoryTheory.Lax.OplaxTrans.vCompApp B inst\u271d\u00b9 C inst\u271d F G H \u03b7 \u03b8 b\u271d) (H.map g)).inv\n            (CategoryStruct.comp (Bicategory.whiskerRight (sorry f) (H.map g))\n              (CategoryStruct.comp\n                (associator (@CategoryTheory.Lax.OplaxTrans.vCompApp B inst\u271d\u00b9 C inst\u271d F G H \u03b7 \u03b8 a\u271d) (H.map f)\n                    (H.map g)).hom\n                (Bicategory.whiskerLeft (@CategoryTheory.Lax.OplaxTrans.vCompApp B inst\u271d\u00b9 C inst\u271d F G H \u03b7 \u03b8 a\u271d)\n                  (H.mapComp f g))))))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/0e4ed58ff12b8ebe986fb9f1fc49dd73fc57bc9c/Mathlib/CategoryTheory/Bicategory/NaturalTransformation/Lax.lean#L186"
      },
      "metadata": {
        "blame_email_hash": "35a9e687d309",
        "blame_date": "2025-06-07T17:24:19+00:00",
        "inclusion_date": "2025-06-08T03:08:58.277863+00:00"
      },
      "id": "042ba4fc5d0084f2e6495f256a5316d42708acb07389367b22668dbd9d471c1e"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "65f9a265db8ee0a8060b0eb706b5a1f47080a4c0",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 293,
        "start_column": 8,
        "end_line": 293,
        "end_column": 13
      },
      "debug_info": {
        "goal": "R : Type ?u.30419\ninst\u271d : CommRing R\n\u03b9 : Type\nI : \u03b9 \u2192 Ideal R\n\u22a2 \u2200 a \u2208 \u2a05 i, I i, (Pi.ringHom fun i => Quotient.mk (I i)) a = 0",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/65f9a265db8ee0a8060b0eb706b5a1f47080a4c0/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L293"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-07-31T00:17:46.358869+00:00"
      },
      "id": "0ddb88c8d8b82f460d0ce151110cad55c07c7e17d8a2fd39e5c8ef171945cb7e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean",
        "start_line": 65,
        "start_column": 24,
        "end_line": 65,
        "end_column": 29
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Fintype L\ninst\u271d\u2076 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2075 : Field \ud835\udd3dq\ninst\u271d\u2074 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u00b3 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b2 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u00b9 : NeZero \u03d1\ninst\u271d : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\ni : Fin r\nf : \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate i) \u2192 L\nr_chal : L\ny : \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i + 1, \u22ef\u27e9)\nfiber : \ud835\udd3dq \u2192 \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate i) :=\n  Binius.BinaryBasefold.qMap_fiber L inst\u271d\u2078 inst\u271d\u2077 inst\u271d\u2076 \ud835\udd3dq inst\u271d\u2075 inst\u271d\u2074 h_Fq_char_prime h_Fq_card_gt_1 inst\u271d\u00b3 r\n    inst\u271d\u00b2 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate i y\nx\u2080 : \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate i) := fiber 0\nx\u2081 : \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate i) := fiber 1\nf_x\u2080 : L := f \u27e8\u2191x\u2080, \u22ef\u27e9\n\u22a2 \u2191x\u2081 \u2208 sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate i",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean#L65"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "7ba6d98f7faa1842ef13bf059080be6ff7c5b923a9a1b0047da3696cc76a05d5"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "StringsCharges",
        "commit": "25c552a2c25a922bf5dbdb120a212ea73b365f5b",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "PhysLean/CondensedMatter/TightBindingChain/Basic.lean",
        "start_line": 307,
        "start_column": 85,
        "end_line": 307,
        "end_column": 90
      },
      "debug_info": {
        "goal": "T : CondensedMatter.TightBindingChain\n\u22a2 Pairwise fun k1 k2 =>\n    inner \u2102 (CondensedMatter.TightBindingChain.energyEigenstate T k1)\n        (CondensedMatter.TightBindingChain.energyEigenstate T k2) =\n      0",
        "url": "https://github.com/HEPLean/PhysLean/blob/25c552a2c25a922bf5dbdb120a212ea73b365f5b/PhysLean/CondensedMatter/TightBindingChain/Basic.lean#L307"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-06-28T08:23:46+00:00",
        "inclusion_date": "2025-09-17T03:53:50.079672+00:00"
      },
      "id": "879194296af8f2badede00e6a66677777d3ac7f42894e71fa0e66e02db2b7d58"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 675,
        "start_column": 85,
        "end_line": 675,
        "end_column": 90
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 9 \u2264 n\n\u22a2 \u2203 x, \u2191x ^ 2 = (\u2191(n + 2).factorial - \u2191(n + 1).factorial) / \u2191n.factorial",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L675"
      },
      "metadata": {
        "blame_email_hash": "f7c4d17dfbfb",
        "blame_date": "2024-10-28T15:45:30+01:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "6f54e0baadce94dd4ef93a3cfc1674b7bef6525dd725172b5fd5bf859c0d697c"
    },
    {
      "repo": {
        "remote": "https://github.com/cmu-l3/llmlean",
        "branch": "kimina-pr",
        "commit": "126a6b2af37727c4d81bb49f6af6b354a380145e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LLMleanTest/Examples2.lean",
        "start_line": 145,
        "start_column": 2,
        "end_line": 145,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\ninst\u271d : Inhabited \u03b1\nP : \u03b1 \u2192 Prop\nh : \u2203 x, P x\nf : \u03b1 \u2192 \u03b2\n\u22a2 Injective f \u2194 LeftInverse (@inverse \u03b1 \u03b2 inst\u271d f) f",
        "url": "https://github.com/cmu-l3/llmlean/blob/126a6b2af37727c4d81bb49f6af6b354a380145e/LLMleanTest/Examples2.lean#L145"
      },
      "metadata": {
        "blame_email_hash": "3ab0971ac342",
        "blame_date": "2024-07-23T17:17:09-04:00",
        "inclusion_date": "2025-06-11T03:39:01.065377+00:00"
      },
      "id": "e3177b3f6296e1351c65c4fd972fc5a5e04124a57c76f2de3ca6a237454197a0"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_07.lean",
        "start_line": 38,
        "start_column": 2,
        "end_line": 38,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 \u2203 M, (\u2200 (i j : Fin n), M i j = -1 \u2228 M i j = 1) \u2227 \u2191M.det > \u221a\u2191n.factorial",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_07.lean#L38"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2024-01-04T16:26:50+01:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "119f4c36e35f958acb4e6726b9200e2c3298b0af05da643af2e342e5a1b40544"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/9SpecialMatrices.lean",
        "start_line": 167,
        "start_column": 2,
        "end_line": 167,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\nm : Type u_2\ninst\u271d\u00b3 : Fintype m\ninst\u271d\u00b2 : DecidableEq m\ninst\u271d\u00b9 : Field R\nA : Matrix m m R\ninst\u271d : StarRing R\nhA : IsIdempotentElem A\n\u22a2 IsIdempotentElem A.conjTranspose",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/9SpecialMatrices.lean#L167"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2023-10-11T15:16:39+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "864e06561c9f422d6e83598840bc6421498151b379f4b82d9c18daa66609ec44"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 6 - 3, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "04a2d75f85aa21a71d8fe9852f59d9aef4546ece37bd51fee9c4548247ac81b8"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "R0-interpolant",
        "commit": "1f0954b25876debf5511d9337f1e0de48b2122d7",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "Foundation/FirstOrder/Incompleteness/Dense.lean",
        "start_line": 105,
        "start_column": 8,
        "end_line": 105,
        "end_column": 13
      },
      "debug_info": {
        "goal": "T : Theory \u2112\u2092\u1d63\ninst\u271d\u00b2 : \ud835\udc11\u2080 \u2aaf T\ninst\u271d\u00b9 : Sigma1Sound T\ninst\u271d : T.Delta1Definable\n\u03c6 \u03c8 : SyntacticFormula \u2112\u2092\u1d63\nh : \u27e6\u03c6\u27e7 < \u27e6\u03c8\u27e7\nh\u2081 : T \u22a2! \u03c6 \u279d \u03c8\nh\u2082 : T \u22ac \u03c8 \u279d \u03c6\nthis\u271d : \u00acEntailment.Complete (T + {\u03c8, \u223c\u03c6})\n\u03c1 : SyntacticFormula \u2112\u2092\u1d63\nh\u03c1 : Undecidable (T + {\u03c8, \u223c\u03c6}) \u03c1\nhC : T \u22a2! \u03c8 \u279d \u03c6 \u22ce \u03c8 \u22cf \u223c\u03c1\nthis : T \u22a2! \u03c8 \u279d \u223c\u03c6 \u279d \u223c\u03c1\n\u22a2 T + {\u03c8, \u223c\u03c6} \u22a2! \u223c\u03c1",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/1f0954b25876debf5511d9337f1e0de48b2122d7/Foundation/FirstOrder/Incompleteness/Dense.lean#L105"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-06-30T14:10:49+09:00",
        "inclusion_date": "2025-07-03T03:31:44.579717+00:00"
      },
      "id": "208355d618b831adbc55644491f259c9aff08bc2cc2faf7cf7e2a26387fa6426"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "MR-lemma610-folland",
        "commit": "f9a82faa4fda220849d893909aac5e2153a0f193",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/ToMathlib/WeakType.lean",
        "start_line": 821,
        "start_column": 8,
        "end_line": 821,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case h.e'_2.h.e'_6\n\u03b1 : Type u_1\nE : Type u_8\nm : MeasurableSpace \u03b1\n\u03bc : Measure \u03b1\ninst\u271d\u00b2 : MeasurableSpace E\ninst\u271d\u00b9 : TopologicalSpace E\ninst\u271d : ENormedAddMonoid E\nf : \u03b1 \u2192 E\nhf : AEStronglyMeasurable f \u03bc\np : \u211d\nhp : 0 < p\nh2p : 0 \u2264 p\nthis :\n  \u222b\u207b (\u03c9 : \u03b1), ENNReal.ofReal (\u2016f \u03c9\u2016\u2091.toReal ^ p) \u2202\u03bc =\n    \u222b\u207b (a : \u211d) in Ioi 0, ENNReal.ofReal p * ENNReal.ofReal (a ^ (p - 1)) * \u03bc {a_1 | a < \u2016f a_1\u2016\u2091.toReal}\nae_finite : 0 < \u03bc {x | \u2016f x\u2016\u2091 = \u22a4}\n\u22a2 \u222b\u207b (t : \u211d) in Ioi 0, ENNReal.ofReal (t ^ (p - 1)) = \u22a4",
        "url": "https://github.com/fpvandoorn/carleson/blob/f9a82faa4fda220849d893909aac5e2153a0f193/Carleson/ToMathlib/WeakType.lean#L821"
      },
      "metadata": {
        "blame_email_hash": "c193a5f2002e",
        "blame_date": "2025-06-21T23:47:11+02:00",
        "inclusion_date": "2025-06-22T04:03:07.933628+00:00"
      },
      "id": "1552bee9b245c9afe293490c512ba6f0e2b08ddfc0752de2e35a6e588f7faaff"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-CI-fix",
        "commit": "ff1b6f6928d9860b559edca6707887c0b6b70eff",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FLT/HaarMeasure/HaarChar/AddEquiv.lean",
        "start_line": 519,
        "start_column": 2,
        "end_line": 519,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\nG : \u03b9 \u2192 Type u_2\ninst\u271d\u2074 : (i : \u03b9) \u2192 Group (G i)\ninst\u271d\u00b3 : (i : \u03b9) \u2192 TopologicalSpace (G i)\ninst\u271d\u00b2 : \u2200 (i : \u03b9), IsTopologicalGroup (G i)\nC : (i : \u03b9) \u2192 Subgroup (G i)\nhCopen : Fact (\u2200 (i : \u03b9), IsOpen \u2191(C i))\nhCcompact : \u2200 (i : \u03b9), CompactSpace \u21a5(C i)\ninst\u271d\u00b9 : (i : \u03b9) \u2192 MeasurableSpace (G i)\ninst\u271d : \u2200 (i : \u03b9), BorelSpace (G i)\n\u03c6 : (i : \u03b9) \u2192 G i \u2243\u209c* G i\nh\u03c6 : \u2200\u1da0 (i : \u03b9) in Filter.cofinite, Set.BijOn \u21d1(\u03c6 i) \u2191(C i) \u2191(C i)\nthis\u271d : MeasurableSpace (RestrictedProduct (fun i => G i) (fun i => \u2191(C i)) Filter.cofinite) :=\n  borel (RestrictedProduct (fun i => G i) (fun i => \u2191(C i)) Filter.cofinite)\nthis : BorelSpace (RestrictedProduct (fun i => G i) (fun i => \u2191(C i)) Filter.cofinite)\n\u22a2 @MeasureTheory.mulEquivHaarChar (RestrictedProduct (fun i => G i) (fun i => \u2191(C i)) Filter.cofinite)\n      (instGroupCoeOfSubgroupClass G) (topologicalSpace G (fun i => \u2191(C i)) Filter.cofinite)\n      (borel (RestrictedProduct (fun i => G i) (fun i => \u2191(C i)) Filter.cofinite)) \u22ef \u22ef \u22ef\n      (restrictedProductCongrRight \u03c6 h\u03c6) =\n    \u220f\u1da0 (i : \u03b9), @MeasureTheory.mulEquivHaarChar (G i) (inst\u271d\u2074 i) (inst\u271d\u00b3 i) (inst\u271d\u00b9 i) \u22ef \u22ef \u22ef (\u03c6 i)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/ff1b6f6928d9860b559edca6707887c0b6b70eff/FLT/HaarMeasure/HaarChar/AddEquiv.lean#L519"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-05-23T17:40:44+01:00",
        "inclusion_date": "2025-09-08T17:50:19.403061+00:00"
      },
      "id": "19cf62f3b3179db0b3ded58b05f301515c68fba631e424f21e65c8be6bf16434"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/StableCombi/Rel.lean",
        "start_line": 38,
        "start_column": 42,
        "end_line": 38,
        "end_column": 47
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\nn : \u2115\nr : \u03b1 \u2192 \u03b2 \u2192 Prop\nhr : IsStableRelWith n r\n\u22a2 IsTreeBoundedRelWith (2 ^ n + 1) r",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/StableCombi/Rel.lean#L38"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-12-17T20:50:42+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "ac26d5ff17429f369dcb78856730b3664538c3a71d3cf04649cc583df6c86224"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "faabe6281bf4c0ffe761835e61488b9e0d69c6cd",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 6463,
        "start_column": 30,
        "end_line": 6463,
        "end_column": 35
      },
      "debug_info": {
        "goal": "c : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\nX\u2080 : \u211d := sorry\nX : \u211d\nX_ge_X\u2080 : X \u2265 X\u2080\nX_gt_3 : 3 < X\n\u03b5 : \u211d := sorry\n\u03b5_pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\n\u03bd : \u211d \u2192 \u211d\nContDiff\u03bd : ContDiff \u211d (\u2191\u22a4) \u03bd\n\u03bd_nonneg' : \u2200 (x : \u211d), 0 \u2264 \u03bd x\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\n\u03bd_massOne' : \u222b (x : \u211d) in Ici 0, \u03bd x / x = 1\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\n\u03c8_\u03b5_of_X : \u2102 := SmoothedChebyshev \u03bd \u03b5 X\nC_unsmoothing : \u211d\nC_unsmoothing_pos : C_unsmoothing > 0\nhC : \u2016\u2191(ChebyshevPsi X) - \u03c8_\u03b5_of_X\u2016 \u2264 C_unsmoothing * X * \u03b5 * Real.log X\nT : \u211d := sorry\nT_gt_3 : 3 < T\nA : \u211d := sorry\nA_in_Ioo : A \u2208 Ioo 0 (1 / 2)\n\u03c3\u2081 : \u211d := 1 - A / Real.log T ^ 9\n\u03c3\u2082 : \u211d := sorry\n\u03c8_\u03b5_diff :\n  \u2016\u03c8_\u03b5_of_X - MellinTransform (fun x => \u2191(Smooth1 \u03bd \u03b5 x)) 1 * \u2191X\u2016 \u2264\n    \u2016I\u2081 \u03bd \u03b5 T X\u2016 + \u2016I\u2082 \u03bd \u03b5 X T \u03c3\u2081\u2016 + \u2016I\u2083 \u03bd \u03b5 X T \u03c3\u2081\u2016 + \u2016I\u2084 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 + \u2016I\u2085 \u03bd \u03b5 X \u03c3\u2082\u2016 + \u2016I\u2086 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 +\n          \u2016I\u2087 \u03bd \u03b5 T X \u03c3\u2081\u2016 +\n        \u2016I\u2088 \u03bd \u03b5 X T \u03c3\u2081\u2016 +\n      \u2016I\u2089 \u03bd \u03b5 X T\u2016\nC_main : \u211d\nC_main_pos : C_main > 0\nmain_diff : \u2016MellinTransform (fun x => \u2191(Smooth1 \u03bd \u03b5 x)) 1 * \u2191X - \u2191X\u2016 \u2264 C_main * \u03b5 * X\n\u22a2 \u2016\u2191(ChebyshevPsi X) - \u03c8_\u03b5_of_X\u2016 + \u2016\u03c8_\u03b5_of_X - \u2191X\u2016 = sorry",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/faabe6281bf4c0ffe761835e61488b9e0d69c6cd/PrimeNumberTheoremAnd/MediumPNT.lean#L6463"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-06-27T14:56:34-04:00",
        "inclusion_date": "2025-07-11T23:19:26.707212+00:00"
      },
      "id": "2e565e907a59e3d495a30ae41d8c0ce4c85f76373e2afb0aca227ce2eb32be72"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 64,
        "start_column": 60,
        "end_line": 64,
        "end_column": 65
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure \u2119\n\u22a2 I[\u2211 i, \u2211 j, Y (i, j) : \u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j)] \u2264 2 * (\u2191p.m - 1) * multiTau p \u03a9 h\u03a9 X",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L64"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-29T08:58:11-07:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "42173fa706de4b468e991e3c9cc0fb7a25a22e64790e6cc5f3790bc6d33784c2"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-disjointUnion-prod-distributive",
        "commit": "869433489d8505bfd7e90bc8a9dbb343a8b17a56",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/LocalDiffeomorph.lean",
        "start_line": 406,
        "start_column": 6,
        "end_line": 406,
        "end_column": 11
      },
      "debug_info": {
        "goal": "\ud835\udd5c\u271d : Type u_1\ninst\u271d\u00b3\u2079 : NontriviallyNormedField \ud835\udd5c\u271d\nE\u271d : Type u_2\ninst\u271d\u00b3\u2078 : NormedAddCommGroup E\u271d\ninst\u271d\u00b3\u2077 : NormedSpace \ud835\udd5c\u271d E\u271d\nF\u271d : Type u_3\ninst\u271d\u00b3\u2076 : NormedAddCommGroup F\u271d\ninst\u271d\u00b3\u2075 : NormedSpace \ud835\udd5c\u271d F\u271d\nH\u271d : Type u_4\ninst\u271d\u00b3\u2074 : TopologicalSpace H\u271d\nG\u271d : Type u_5\ninst\u271d\u00b3\u00b3 : TopologicalSpace G\u271d\nI\u271d : ModelWithCorners \ud835\udd5c\u271d E\u271d H\u271d\nJ\u271d\u00b9 : ModelWithCorners \ud835\udd5c\u271d F\u271d G\u271d\nM\u271d : Type u_6\ninst\u271d\u00b3\u00b2 : TopologicalSpace M\u271d\ninst\u271d\u00b3\u00b9 : ChartedSpace H\u271d M\u271d\nN\u271d\u00b9 : Type u_7\ninst\u271d\u00b3\u2070 : TopologicalSpace N\u271d\u00b9\ninst\u271d\u00b2\u2079 : ChartedSpace G\u271d N\u271d\u00b9\nn\u271d : WithTop \u2115\u221e\nf\u271d : M\u271d \u2192 N\u271d\u00b9\ns : Set M\u271d\nx\u271d : M\u271d\n\ud835\udd5c : Type u_8\ninst\u271d\u00b2\u2078 : NontriviallyNormedField \ud835\udd5c\nE : Type u_9\ninst\u271d\u00b2\u2077 : NormedAddCommGroup E\ninst\u271d\u00b2\u2076 : NormedSpace \ud835\udd5c E\nE' : Type u_10\ninst\u271d\u00b2\u2075 : NormedAddCommGroup E'\ninst\u271d\u00b2\u2074 : NormedSpace \ud835\udd5c E'\nF : Type u_11\ninst\u271d\u00b2\u00b3 : NormedAddCommGroup F\ninst\u271d\u00b2\u00b2 : NormedSpace \ud835\udd5c F\nH : Type u_12\ninst\u271d\u00b2\u00b9 : TopologicalSpace H\nH' : Type u_13\ninst\u271d\u00b2\u2070 : TopologicalSpace H'\nG : Type u_14\ninst\u271d\u00b9\u2079 : TopologicalSpace G\nG' : Type u_15\ninst\u271d\u00b9\u2078 : TopologicalSpace G'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nJ\u271d : ModelWithCorners \ud835\udd5c F G\nJ' : ModelWithCorners \ud835\udd5c F G'\nM : Type u_16\ninst\u271d\u00b9\u2077 : TopologicalSpace M\ninst\u271d\u00b9\u2076 : ChartedSpace H M\nM'\u271d : Type u_17\ninst\u271d\u00b9\u2075 : TopologicalSpace M'\u271d\ninst\u271d\u00b9\u2074 : ChartedSpace H' M'\u271d\nN\u271d : Type u_18\ninst\u271d\u00b9\u00b3 : TopologicalSpace N\u271d\ninst\u271d\u00b9\u00b2 : ChartedSpace G N\u271d\nN'\u271d : Type u_19\ninst\u271d\u00b9\u00b9 : TopologicalSpace N'\u271d\ninst\u271d\u00b9\u2070 : ChartedSpace G' N'\u271d\nn : WithTop \u2115\u221e\nJ : ModelWithCorners \ud835\udd5c E' H\nM' : Type u_20\nM'' : Type u_21\nN : Type u_22\ninst\u271d\u2079 : TopologicalSpace M'\ninst\u271d\u2078 : ChartedSpace H M'\ninst\u271d\u2077 : TopologicalSpace M''\ninst\u271d\u2076 : ChartedSpace H M''\ninst\u271d\u2075 : TopologicalSpace N\ninst\u271d\u2074 : ChartedSpace H N\nN' : Type u_23\ninst\u271d\u00b3 : TopologicalSpace N'\ninst\u271d\u00b2 : ChartedSpace H N'\ninst\u271d\u00b9 : FiniteDimensional \ud835\udd5c E\ninst\u271d : FiniteDimensional \ud835\udd5c E'\nx : M \u00d7 N \u2295 M' \u00d7 N\nf : M \u00d7 N \u2295 M' \u00d7 N \u2243 (M \u2295 M') \u00d7 N := (Equiv.sumProdDistrib M M' N).symm\nthis : ContMDiff (I.prod J) (I.prod J) n \u21d1f\n\u22a2 Injective \u21d1(mfderiv (I.prod J) (I.prod J) (\u21d1f) x)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/869433489d8505bfd7e90bc8a9dbb343a8b17a56/Mathlib/Geometry/Manifold/LocalDiffeomorph.lean#L406"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-06-06T13:32:38+02:00",
        "inclusion_date": "2025-06-07T03:06:54.080416+00:00"
      },
      "id": "76d670bc31b7e2a39cb34bbc9c7e769aad7d959e26ac48f96c65747a2b1d2059"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 138,
        "start_column": 4,
        "end_line": 138,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type ?u.16996\ninst\u271d : CommRing R\nI J : Ideal R\n\u22a2 \u2200 {a b : R}, a \u2208 \u2191I \u2229 \u2191J \u2192 b \u2208 \u2191I \u2229 \u2191J \u2192 a + b \u2208 \u2191I \u2229 \u2191J",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L138"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "d9f5e7b8180c051dc5e2ba90f390ef97f087dee5937257253434a4c8aa6d2d1a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean",
        "start_line": 92,
        "start_column": 93,
        "end_line": 92,
        "end_column": 98
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Fintype L\ninst\u271d\u2076 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2075 : Field \ud835\udd3dq\ninst\u271d\u2074 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u00b3 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b2 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u00b9 : NeZero \u03d1\ninst\u271d : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\ni : Fin \u2113\ncoeffs : Fin (2 ^ (\u2113 - \u2191i)) \u2192 L\nr_chal : L\n\u22a2 \u2191i < \u2113 + 1",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean#L92"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "8431650e0fc3d0393af1da4c919ae4fb272d30c99d8e7f6bfc19960908c9c3b9"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "StringsCharges",
        "commit": "25c552a2c25a922bf5dbdb120a212ea73b365f5b",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "PhysLean/QFT/PerturbationTheory/WickContraction/Perm.lean",
        "start_line": 70,
        "start_column": 2,
        "end_line": 70,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\ud835\udcd5 : FieldSpecification\n\u03c6s : List \ud835\udcd5.FieldOp\n\u03c6s\u039b\u2081 \u03c6s\u039b\u2082 : WickContraction \u03c6s.length\nh : WickContraction.Perm \ud835\udcd5 \u03c6s \u03c6s\u039b\u2081 \u03c6s\u039b\u2082\nhf : \u03c6s\u039b\u2081.IsFull\n\u22a2 \u03c6s\u039b\u2082.IsFull",
        "url": "https://github.com/HEPLean/PhysLean/blob/25c552a2c25a922bf5dbdb120a212ea73b365f5b/PhysLean/QFT/PerturbationTheory/WickContraction/Perm.lean#L70"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-06-28T08:23:46+00:00",
        "inclusion_date": "2025-09-17T03:53:50.079672+00:00"
      },
      "id": "2dd9982a2bb5600d4c0e58d12c93247fc145d76fda47bdb4725ae83acb0f4069"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 857,
        "start_column": 42,
        "end_line": 857,
        "end_column": 47
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 \u2191n ^ (1 / \u2191n) < 2 - 1 / \u2191n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L857"
      },
      "metadata": {
        "blame_email_hash": "dd1b74f40c05",
        "blame_date": "2024-07-14T11:12:57-04:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "0d8ae12b6b975044a5b8dcf3cae3af234d157388d8d60ad7baf846c267f35905"
    },
    {
      "repo": {
        "remote": "https://github.com/cmu-l3/llmlean",
        "branch": "kimina-pr",
        "commit": "126a6b2af37727c4d81bb49f6af6b354a380145e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LLMleanTest/Examples2.lean",
        "start_line": 148,
        "start_column": 2,
        "end_line": 148,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\ninst\u271d : Inhabited \u03b1\nP : \u03b1 \u2192 Prop\nh : \u2203 x, P x\nf : \u03b1 \u2192 \u03b2\n\u22a2 Surjective f \u2194 RightInverse (@inverse \u03b1 \u03b2 inst\u271d f) f",
        "url": "https://github.com/cmu-l3/llmlean/blob/126a6b2af37727c4d81bb49f6af6b354a380145e/LLMleanTest/Examples2.lean#L148"
      },
      "metadata": {
        "blame_email_hash": "3ab0971ac342",
        "blame_date": "2024-07-23T17:17:09-04:00",
        "inclusion_date": "2025-06-11T03:39:01.065377+00:00"
      },
      "id": "ce36f1e74114c450b1df494f191bda4c268bd92a06080ed2a3b5c6b767e48973"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_06.lean",
        "start_line": 241,
        "start_column": 4,
        "end_line": 241,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : DivisionRing R\nh : Fintype R\nZ : Subring R := center R\nn : \u2115\nH : \u2203 x y, x \u2260 y\nh_n : n \u2260 0\nq : \u2115 := Fintype.card \u21a5Z\nh_card : Fintype.card R = q ^ n\nfinclassa : (A : ConjClasses R\u02e3) \u2192 Fintype \u2191A.carrier\nthis\u271d\u00b9 : (A : ConjClasses R\u02e3) \u2192 Fintype \u2191{Quotient.out A}.centralizer\nfintypea : ConjClasses R\u02e3 \u2192\n  Fintype\n    \u2191{A |\n        have this := finclassa A;\n        Fintype.card \u2191A.carrier > 1} :=\n  fun A =>\n    setFintype\n      {A |\n        have this := finclassa A;\n        Fintype.card \u2191A.carrier > 1}\nthis\u271d :\n  Fintype\n    \u2191{A |\n        have this := finclassa A;\n        Fintype.card \u2191A.carrier > 1}\nS' : Set (ConjClasses R\u02e3) := ConjClasses.noncenter R\u02e3\nthis : Fintype \u2191S'\nS : Finset (ConjClasses R\u02e3) := S'.toFinset\nn_k : \u2191S' \u2192 \u2115 := sorry\nh_R : Fintype.card R\u02e3 = q ^ n - 1\nh_Z : Fintype.card (\u21a5Z)\u02e3 = q - 1\nH1 : q ^ n - 1 = q - 1 + \u2211 x \u2208 (ConjClasses.noncenter R\u02e3).toFinset, x.carrier.toFinset.card\ne : \u21a5(Subgroup.center R\u02e3) \u2243* (\u21a5(Submonoid.center R))\u02e3 := Subgroup.centerUnitsEquivUnitsCenter R\nf : (\u21a5(Submonoid.center R))\u02e3 \u2243 (\u21a5Z)\u02e3 := Equiv.inv (\u21a5(Submonoid.center R))\u02e3\n\u22a2 \u2200 (A : \u2191S'), Fintype.card \u2191(\u2191A).carrier * (q ^ n_k A - 1) = q ^ n - 1",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_06.lean#L241"
      },
      "metadata": {
        "blame_email_hash": "2fa6d47f7084",
        "blame_date": "2023-10-13T14:18:53+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "5e385b4a624f4267e86635bf6898d3cb4902b6c98e3ab018ee4daa8b8030bcd2"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/9SpecialMatrices.lean",
        "start_line": 170,
        "start_column": 2,
        "end_line": 170,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\nm : Type u_2\ninst\u271d\u00b3 : Fintype m\ninst\u271d\u00b2 : DecidableEq m\ninst\u271d\u00b9 : Field R\nA : Matrix m m R\ninst\u271d : StarRing R\nhA : IsIdempotentElem A\n\u22a2 IsIdempotentElem (1 - A.conjTranspose)",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/9SpecialMatrices.lean#L170"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2023-10-11T15:16:39+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "a98e9b9a9e372f2ddb851e53a75a7411775825f3530450c87f3c40e1b87ea3af"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 7 - 3, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "ebd3d7afca130128d0fddf4d2663f299d853fc88b4d45df067f57d3ca59f0cb1"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "R0-interpolant",
        "commit": "1f0954b25876debf5511d9337f1e0de48b2122d7",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "Foundation/FirstOrder/Incompleteness/Dense.lean",
        "start_line": 109,
        "start_column": 26,
        "end_line": 109,
        "end_column": 31
      },
      "debug_info": {
        "goal": "T : Theory \u2112\u2092\u1d63\ninst\u271d\u00b2 : \ud835\udc11\u2080 \u2aaf T\ninst\u271d\u00b9 : Sigma1Sound T\ninst\u271d : T.Delta1Definable\n\u03c6 \u03c8 : SyntacticFormula \u2112\u2092\u1d63\nh : \u27e6\u03c6\u27e7 < \u27e6\u03c8\u27e7\nh\u2081 : T \u22a2! \u03c6 \u279d \u03c8\nh\u2082 : T \u22ac \u03c8 \u279d \u03c6\n\u22a2 T \u2aaf T + {\u03c8, \u223c\u03c6}",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/1f0954b25876debf5511d9337f1e0de48b2122d7/Foundation/FirstOrder/Incompleteness/Dense.lean#L109"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-06-30T14:10:49+09:00",
        "inclusion_date": "2025-07-03T03:31:44.579717+00:00"
      },
      "id": "5fda3a3a1e1c6d2a6a4fefea8b605eb7161a918d60e1b865d35b511e6d87a9e8"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "e4c6e71e5795569df9e9bdbfe4b136897784b355",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/ToMathlib/RealInterpolation/InterpolatedExponents.lean",
        "start_line": 402,
        "start_column": 12,
        "end_line": 402,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case e_a.e_a.e_a.e_a\np\u2080 q\u2080 p\u2081 q\u2081 t : ENNReal\nht : t \u2208 Ioo 0 1\naux : t.toReal \u2260 0\n\u22a2 1 - t.toReal = (1 - t).toReal",
        "url": "https://github.com/fpvandoorn/carleson/blob/e4c6e71e5795569df9e9bdbfe4b136897784b355/Carleson/ToMathlib/RealInterpolation/InterpolatedExponents.lean#L402"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-06-19T17:41:34+02:00",
        "inclusion_date": "2025-06-24T03:23:45.994996+00:00"
      },
      "id": "2412058c49acf530918359818cb5be1b9598666e178b0178a4551532e6fc4b77"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-hardly-ramified",
        "commit": "60be88a841fa232b563ea16600befe5efbfb3d07",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FLT/HaarMeasure/HaarChar/AddEquiv.lean",
        "start_line": 462,
        "start_column": 2,
        "end_line": 462,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\nG : \u03b9 \u2192 Type u_2\ninst\u271d\u2074 : (i : \u03b9) \u2192 Group (G i)\ninst\u271d\u00b3 : (i : \u03b9) \u2192 TopologicalSpace (G i)\ninst\u271d\u00b2 : \u2200 (i : \u03b9), IsTopologicalGroup (G i)\nC : (i : \u03b9) \u2192 Subgroup (G i)\nhCopen : Fact (\u2200 (i : \u03b9), IsOpen \u2191(C i))\nhCcompact : \u2200 (i : \u03b9), CompactSpace \u21a5(C i)\ninst\u271d\u00b9 : (i : \u03b9) \u2192 MeasurableSpace (G i)\ninst\u271d : \u2200 (i : \u03b9), BorelSpace (G i)\n\u03c6 : (i : \u03b9) \u2192 G i \u2243\u209c* G i\nh\u03c6 : \u2200\u1da0 (i : \u03b9) in Filter.cofinite, Set.BijOn \u21d1(\u03c6 i) \u2191(C i) \u2191(C i)\nthis\u271d : MeasurableSpace (RestrictedProduct (fun i => G i) (fun i => \u2191(C i)) Filter.cofinite) :=\n  borel (RestrictedProduct (fun i => G i) (fun i => \u2191(C i)) Filter.cofinite)\nthis : BorelSpace (RestrictedProduct (fun i => G i) (fun i => \u2191(C i)) Filter.cofinite)\n\u22a2 mulEquivHaarChar (restrictedProductCongrRight \u03c6 h\u03c6) = \u220f\u1da0 (i : \u03b9), mulEquivHaarChar (\u03c6 i)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/60be88a841fa232b563ea16600befe5efbfb3d07/FLT/HaarMeasure/HaarChar/AddEquiv.lean#L462"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-05-23T17:40:44+01:00",
        "inclusion_date": "2025-09-18T04:05:26.332171+00:00"
      },
      "id": "6ebb935b4ba7dd5f3f4781cfb07781f07ff1a2870c7a17f97e136fd5559e86bf"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/StableCombi/Rel.lean",
        "start_line": 41,
        "start_column": 33,
        "end_line": 41,
        "end_column": 38
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\nn : \u2115\nr : \u03b1 \u2192 \u03b2 \u2192 Prop\nhr : IsTreeBoundedRelWith n r\n\u22a2 IsStableRelWith (2 ^ n) r",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/StableCombi/Rel.lean#L41"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-12-17T20:50:42+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "7b02aff6f66f487495b5f76843ba7dc3a04ce36bc3b154104ed8f1992544b205"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "51c6063c647276f7c01e848976e6721033829c90",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 6487,
        "start_column": 30,
        "end_line": 6487,
        "end_column": 35
      },
      "debug_info": {
        "goal": "c : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\nX\u2080 : \u211d := sorry\nX : \u211d\nX_ge_X\u2080 : X \u2265 X\u2080\nX_gt_3 : 3 < X\n\u03b5 : \u211d := sorry\n\u03b5_pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\n\u03b5_X : 2 < X * \u03b5\n\u03bd : \u211d \u2192 \u211d\nContDiff\u03bd : ContDiff \u211d (\u2191\u22a4) \u03bd\n\u03bd_nonneg' : \u2200 (x : \u211d), 0 \u2264 \u03bd x\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\n\u03bd_massOne' : \u222b (x : \u211d) in Ici 0, \u03bd x / x = 1\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\n\u03c8_\u03b5_of_X : \u2102 := SmoothedChebyshev \u03bd \u03b5 X\nC_unsmoothing : \u211d\nC_unsmoothing_pos : C_unsmoothing > 0\n\u03c8_\u03c8_\u03b5_diff : \u2016\u2191(ChebyshevPsi X) - \u03c8_\u03b5_of_X\u2016 \u2264 C_unsmoothing * X * \u03b5 * Real.log X\nT : \u211d := sorry\nT_gt_3 : 3 < T\nA : \u211d\nA_in_Ioc : A \u2208 Ioc 0 (1 / 2)\nholo1 :\n  HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (Icc (1 - A / Real.log T ^ 9) 2 \u00d7\u2102 Icc (-T) T \\ {1})\n\u03c3\u2081 : \u211d := 1 - A / Real.log T ^ 9\n\u03c3\u2081pos : 0 < \u03c3\u2081\n\u03c3\u2081_lt_one : \u03c3\u2081 < 1\n\u03c3\u2082' : \u211d\n\u03c3\u2082'_lt_one : \u03c3\u2082' < 1\nholo2' : HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (uIcc \u03c3\u2082' 2 \u00d7\u2102 uIcc (-3) 3 \\ {1})\n\u03c3\u2082 : \u211d := max \u03c3\u2082' (1 / 2)\n\u03c3\u2082_pos : 0 < \u03c3\u2082\n\u03c3\u2082_lt_one : \u03c3\u2082 < 1\nholo2 : HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (Icc \u03c3\u2082 2 \u00d7\u2102 Icc (-3) 3 \\ {1})\n\u03c3\u2082_lt_\u03c3\u2081 : \u03c3\u2082 < \u03c3\u2081\nholo2a : HolomorphicOn (SmoothedChebyshevIntegrand \u03bd \u03b5 X) (Icc \u03c3\u2082 2 \u00d7\u2102 Icc (-3) 3 \\ {1})\n\u03c8_\u03b5_diff :\n  \u2016\u03c8_\u03b5_of_X - MellinTransform (fun x => \u2191(Smooth1 \u03bd \u03b5 x)) 1 * \u2191X\u2016 \u2264\n    \u2016I\u2081 \u03bd \u03b5 X T\u2016 + \u2016I\u2082 \u03bd \u03b5 T X \u03c3\u2081\u2016 + \u2016I\u2083 \u03bd \u03b5 T X \u03c3\u2081\u2016 + \u2016I\u2084 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 + \u2016I\u2085 \u03bd \u03b5 X \u03c3\u2082\u2016 + \u2016I\u2086 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 +\n          \u2016I\u2087 \u03bd \u03b5 T X \u03c3\u2081\u2016 +\n        \u2016I\u2088 \u03bd \u03b5 T X \u03c3\u2081\u2016 +\n      \u2016I\u2089 \u03bd \u03b5 X T\u2016\nC_main : \u211d\nC_main_pos : C_main > 0\nmain_diff : \u2016MellinTransform (fun x => \u2191(Smooth1 \u03bd \u03b5 x)) 1 * \u2191X - \u2191X\u2016 \u2264 C_main * \u03b5 * X\nc\u2081 : \u211d\nc\u2081pos : c\u2081 > 0\nhc\u2081 : \u2200 (\u03b5 : \u211d), 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2081 \u03bd \u03b5 X T\u2016 \u2264 c\u2081 * X * Real.log X / (\u03b5 * T)\nI\u2081bnd : \u2016I\u2081 \u03bd \u03b5 X T\u2016 \u2264 c\u2081 * X * Real.log X / (\u03b5 * T)\nc\u2082 : \u211d\nc\u2082pos : 0 < c\u2082\nA\u2082 : \u211d\nhA\u2082 : A\u2082 \u2208 Ioc 0 (1 / 2)\nhc\u2082 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A\u2082 / Real.log T ^ 9;\n                \u2016I\u2082 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2082 * X / (\u03b5 * T)\n\u22a2 \u2016\u2191(ChebyshevPsi X) - \u03c8_\u03b5_of_X\u2016 + \u2016MellinTransform (fun x => \u2191(Smooth1 \u03bd \u03b5 x)) 1 * \u2191X - \u2191X\u2016 +\n      (\u2016I\u2081 \u03bd \u03b5 X T\u2016 + \u2016I\u2082 \u03bd \u03b5 T X \u03c3\u2081\u2016 + \u2016I\u2083 \u03bd \u03b5 T X \u03c3\u2081\u2016 + \u2016I\u2084 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 + \u2016I\u2085 \u03bd \u03b5 X \u03c3\u2082\u2016 + \u2016I\u2086 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 +\n            \u2016I\u2087 \u03bd \u03b5 T X \u03c3\u2081\u2016 +\n          \u2016I\u2088 \u03bd \u03b5 T X \u03c3\u2081\u2016 +\n        \u2016I\u2089 \u03bd \u03b5 X T\u2016) =\n    sorry",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/51c6063c647276f7c01e848976e6721033829c90/PrimeNumberTheoremAnd/MediumPNT.lean#L6487"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-06-27T14:56:34-04:00",
        "inclusion_date": "2025-07-13T23:20:18.124737+00:00"
      },
      "id": "ec9a101dc15a9335286264f0421efbba42a4276e34cceb0c7347b52258b59acb"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 67,
        "start_column": 88,
        "end_line": 67,
        "end_column": 93
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure \u2119\n\u22a2 \u2211 i, d[X i # \u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j) | \u2211 i, \u2211 j, Y (i, j)] \u2264 8 * (\u2191p.m ^ 3 - \u2191p.m ^ 2) * multiTau p \u03a9 h\u03a9 X",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L67"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-29T08:58:11-07:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "eed20aa9302fa53c3ee24795645044bcd19beff22e6a6cffb96c8c4289ca24ab"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels2",
        "commit": "28f339edb0c9438f2747670bdd077c7a039f4626",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/SliceModel.lean",
        "start_line": 259,
        "start_column": 4,
        "end_line": 259,
        "end_column": 9
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2079 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\nE''' : Type u_5\ninst\u271d\u00b9\u2078 : NormedAddCommGroup E\ninst\u271d\u00b9\u2077 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u2076 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2075 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u2074 : NormedAddCommGroup E''\ninst\u271d\u00b9\u00b3 : NormedSpace \ud835\udd5c E''\ninst\u271d\u00b9\u00b2 : NormedAddCommGroup E'''\ninst\u271d\u00b9\u00b9 : NormedSpace \ud835\udd5c E'''\nF : Type u_6\nF' : Type u_7\ninst\u271d\u00b9\u2070 : NormedAddCommGroup F\ninst\u271d\u2079 : NormedSpace \ud835\udd5c F\ninst\u271d\u2078 : NormedAddCommGroup F'\ninst\u271d\u2077 : NormedSpace \ud835\udd5c F'\nH : Type u_8\nH' : Type u_9\nH'' : Type u_10\nH''' : Type u_11\ninst\u271d\u2076 : TopologicalSpace H\ninst\u271d\u2075 : TopologicalSpace H'\ninst\u271d\u2074 : TopologicalSpace H''\ninst\u271d\u00b3 : TopologicalSpace H'''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nI'' : ModelWithCorners \ud835\udd5c E'' H''\nJ : ModelWithCorners \ud835\udd5c E''' H'''\nM : Type u_12\nM' : Type u_13\ninst\u271d\u00b2 : TopologicalSpace M'\ninst\u271d\u00b9 : ChartedSpace H' M'\nn\u271d : WithTop \u2115\u221e\nn m : \u2115\ninst\u271d : NeZero n\n\u22a2 IsEmbedding fun x => (x, 0)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/28f339edb0c9438f2747670bdd077c7a039f4626/Mathlib/Geometry/Manifold/SliceModel.lean#L259"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-06-06T09:14:07+02:00",
        "inclusion_date": "2025-06-07T03:07:58.564156+00:00"
      },
      "id": "db9a0fc6de5d2b3cd1dccea667915b22ff29a6289598d0f49d8cece0b70f810a"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 140,
        "start_column": 4,
        "end_line": 140,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type ?u.16996\ninst\u271d : CommRing R\nI J : Ideal R\n\u22a2 0 \u2208 \u2191I \u2229 \u2191J",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L140"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "88cff3ca86b6e081e9e82d499fe72768c7c6256a27d27b5ec4adea9b94a51108"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean",
        "start_line": 95,
        "start_column": 13,
        "end_line": 95,
        "end_column": 18
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Fintype L\ninst\u271d\u2076 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2075 : Field \ud835\udd3dq\ninst\u271d\u2074 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u00b3 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b2 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u00b9 : NeZero \u03d1\ninst\u271d : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\ni : Fin \u2113\ncoeffs : Fin (2 ^ (\u2113 - \u2191i)) \u2192 L\nr_chal : L\nP_i : Polynomial L := intermediateEvaluationPoly \ud835\udd3dq \u03b2 \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i, \u22ef\u27e9 coeffs\n\u22a2 \u2191i < r",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean#L95"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "6df295d1da18aaec4685ae8915bd8543bc119e4181f39299f309bf02fcdb5977"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "StringsCharges",
        "commit": "25c552a2c25a922bf5dbdb120a212ea73b365f5b",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "PhysLean/QFT/PerturbationTheory/WickContraction/Perm.lean",
        "start_line": 76,
        "start_column": 2,
        "end_line": 76,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\ud835\udcd5 : FieldSpecification\n\u03c6s : List \ud835\udcd5.FieldOp\n\u03c6s\u039b\u2081 \u03c6s\u039b\u2082 : WickContraction \u03c6s.length\nh : WickContraction.Perm \ud835\udcd5 \u03c6s \u03c6s\u039b\u2081 \u03c6s\u039b\u2082\n\u22a2 \u03c6s\u039b\u2081.uncontractedListGet.Perm \u03c6s\u039b\u2082.uncontractedListGet",
        "url": "https://github.com/HEPLean/PhysLean/blob/25c552a2c25a922bf5dbdb120a212ea73b365f5b/PhysLean/QFT/PerturbationTheory/WickContraction/Perm.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-06-28T08:23:46+00:00",
        "inclusion_date": "2025-09-17T03:53:50.079672+00:00"
      },
      "id": "8db00efe75fe254d1b335d5a6328622bec8f9d1ce78f6be7121717b0dd9afa67"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1005,
        "start_column": 53,
        "end_line": 1005,
        "end_column": 58
      },
      "debug_info": {
        "goal": "a : \u211d\nh\u2080 : a = 8\n\u22a2 (16 * (a ^ 2) ^ (1 / 3)) ^ (1 / 3) = 4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L1005"
      },
      "metadata": {
        "blame_email_hash": "dd1b74f40c05",
        "blame_date": "2024-07-14T11:12:57-04:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "503950746c277913864e4ffccd8dce03e92926d91c97c9bbaff4ebe7b66c90ef"
    },
    {
      "repo": {
        "remote": "https://github.com/cmu-l3/llmlean",
        "branch": "kimina-pr",
        "commit": "126a6b2af37727c4d81bb49f6af6b354a380145e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LLMleanTest/Examples.lean",
        "start_line": 20,
        "start_column": 2,
        "end_line": 20,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m n : \u2115\nh : m.Coprime n\n\u22a2 m.gcd n = 1",
        "url": "https://github.com/cmu-l3/llmlean/blob/126a6b2af37727c4d81bb49f6af6b354a380145e/LLMleanTest/Examples.lean#L20"
      },
      "metadata": {
        "blame_email_hash": "3ab0971ac342",
        "blame_date": "2024-07-23T17:17:09-04:00",
        "inclusion_date": "2025-06-11T03:39:01.065377+00:00"
      },
      "id": "9a5c8521f0e28c02b24ce87c62efffa382ec72e86996a38e6920914b7121c920"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_06.lean",
        "start_line": 249,
        "start_column": 48,
        "end_line": 249,
        "end_column": 53
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : DivisionRing R\nh : Fintype R\nZ : Subring R := center R\nn : \u2115\nH : \u2203 x y, x \u2260 y\nh_n : n \u2260 0\nq : \u2115 := Fintype.card \u21a5Z\nh_card : Fintype.card R = q ^ n\nfinclassa : (A : ConjClasses R\u02e3) \u2192 Fintype \u2191A.carrier\nthis\u271d\u00b2 : (A : ConjClasses R\u02e3) \u2192 Fintype \u2191{Quotient.out A}.centralizer\nfintypea : ConjClasses R\u02e3 \u2192\n  Fintype\n    \u2191{A |\n        have this := finclassa A;\n        Fintype.card \u2191A.carrier > 1} :=\n  fun A =>\n    setFintype\n      {A |\n        have this := finclassa A;\n        Fintype.card \u2191A.carrier > 1}\nthis\u271d\u00b9 :\n  Fintype\n    \u2191{A |\n        have this := finclassa A;\n        Fintype.card \u2191A.carrier > 1}\nS' : Set (ConjClasses R\u02e3) := ConjClasses.noncenter R\u02e3\nthis\u271d : Fintype \u2191S'\nS : Finset (ConjClasses R\u02e3) := S'.toFinset\nn_k : \u2191S' \u2192 \u2115 := sorry\nh_R : Fintype.card R\u02e3 = q ^ n - 1\nh_Z : Fintype.card (\u21a5Z)\u02e3 = q - 1\nH1 : q ^ n - 1 = q - 1 + \u2211 x \u2208 (ConjClasses.noncenter R\u02e3).toFinset, x.carrier.toFinset.card\ne : \u21a5(Subgroup.center R\u02e3) \u2243* (\u21a5(Submonoid.center R))\u02e3 := Subgroup.centerUnitsEquivUnitsCenter R\nf : (\u21a5(Submonoid.center R))\u02e3 \u2243 (\u21a5Z)\u02e3 := Equiv.inv (\u21a5(Submonoid.center R))\u02e3\nthis : \u2200 (A : \u2191S'), Fintype.card \u2191(\u2191A).carrier * (q ^ n_k A - 1) = q ^ n - 1\nh1 : q ^ n - 1 = q - 1 + \u2211 A, (q ^ n - 1) / (q ^ n_k A - 1)\nhZ : Nonempty \u21a5Z\nhq_pow_pos : \u2200 (m : \u2115), 1 \u2264 q ^ m\n\u22a2 \u2200 (A : \u2191S'), n_k A \u2223 n",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_06.lean#L249"
      },
      "metadata": {
        "blame_email_hash": "2fa6d47f7084",
        "blame_date": "2023-10-13T14:18:53+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "a3e14aa1ec4bf9acb95fb36e040b1293e3e1e5bd5192d4733e47fa1f6e3065a2"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/9SpecialMatrices.lean",
        "start_line": 177,
        "start_column": 2,
        "end_line": 177,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\nm : Type u_2\ninst\u271d\u00b2 : Fintype m\ninst\u271d\u00b9 : DecidableEq m\ninst\u271d : Field R\nA : Matrix m m R\nhA : IsIdempotentElem A\n\u22a2 sorry = A.trace",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/9SpecialMatrices.lean#L177"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2023-10-11T15:16:39+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "4dad167f59ba47a6547c0e24949d87a88d658cb95fac2c2c24569c28c8671bba"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 8 - 3, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "fef2f82eb5bfb140d95bf0ce492965dcdb2bc400b7208f76d41318e7755b790f"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "R0-interpolant",
        "commit": "1f0954b25876debf5511d9337f1e0de48b2122d7",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "Foundation/FirstOrder/Incompleteness/Dense.lean",
        "start_line": 110,
        "start_column": 4,
        "end_line": 110,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case intro.intro.refine_2\nT : Theory \u2112\u2092\u1d63\ninst\u271d\u00b2 : \ud835\udc11\u2080 \u2aaf T\ninst\u271d\u00b9 : Sigma1Sound T\ninst\u271d : T.Delta1Definable\n\u03c6 \u03c8 : SyntacticFormula \u2112\u2092\u1d63\nh : \u27e6\u03c6\u27e7 < \u27e6\u03c8\u27e7\nh\u2081 : T \u22a2! \u03c6 \u279d \u03c8\nh\u2082 : T \u22ac \u03c8 \u279d \u03c6\n\u22a2 Sigma1Sound (T + {\u03c8, \u223c\u03c6})",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/1f0954b25876debf5511d9337f1e0de48b2122d7/Foundation/FirstOrder/Incompleteness/Dense.lean#L110"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-06-30T14:10:49+09:00",
        "inclusion_date": "2025-07-03T03:31:44.579717+00:00"
      },
      "id": "f5cc9f0656f1b8ea93352fd46cececa17a0598fd426ecebddc4ab696e721da7f"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "ineq_6_3_30",
        "commit": "bcc07a3b1282c61371f9cc8748d1be4765325b7b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/ToMathlib/RealInterpolation/Misc.lean",
        "start_line": 1242,
        "start_column": 2,
        "end_line": 1242,
        "end_column": 7
      },
      "debug_info": {
        "goal": "t : ENNReal\nj : Bool\ntc : ToneCouple\n\u03b3 : \u211d\nh\u03b3 : if (j ^^ ToneCouple.mon tc) = true then \u03b3 > -1 else \u03b3 < -1\nht : 0 < t\n\u22a2 \u222b\u207b (s : \u211d) in MeasureTheory.res (j ^^ ToneCouple.mon tc) (ToneCouple.inv tc t), ENNReal.ofReal s ^ \u03b3 =\n    ToneCouple.inv tc t ^ (\u03b3 + 1) / ENNReal.ofReal |\u03b3 + 1|",
        "url": "https://github.com/fpvandoorn/carleson/blob/bcc07a3b1282c61371f9cc8748d1be4765325b7b/Carleson/ToMathlib/RealInterpolation/Misc.lean#L1242"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-06-19T17:41:34+02:00",
        "inclusion_date": "2025-07-08T03:23:00.070461+00:00"
      },
      "id": "b44c6de70bdd25aec1da817bdeac3cc6318fc704bbe95d66f300bc595357198e"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "8d54d2b4994f268d7285ce79b849ab3391657f1a",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "FLT/Mathlib/LinearAlgebra/Determinant.lean",
        "start_line": 15,
        "start_column": 2,
        "end_line": 15,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k : Type u_1\ninst\u271d\u2074 : Field k\nD : Type u_2\ninst\u271d\u00b3 : Ring D\ninst\u271d\u00b2 : Algebra k D\ninst\u271d\u00b9 : IsSimpleRing D\ninst\u271d : FiniteDimensional k D\nd : D\n\u22a2 LinearMap.det (LinearMap.mulLeft k d) = LinearMap.det (LinearMap.mulRight k d)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/8d54d2b4994f268d7285ce79b849ab3391657f1a/FLT/Mathlib/LinearAlgebra/Determinant.lean#L15"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-05-18T13:03:27+01:00",
        "inclusion_date": "2025-06-13T04:09:13.451015+00:00"
      },
      "id": "af6d9eb33684c5d0900cca8ec4366ff1e00e15067c6649042deb7146ca3e8db1"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/GrowthInGroups/Lecture4.lean",
        "start_line": 25,
        "start_column": 60,
        "end_line": 25,
        "end_column": 65
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b9 : Fintype n\ninst\u271d : DecidableEq n\nC\u2080 : \u211d\nhC\u2080 : \u2191(Fintype.card n) < C\u2080\nK : \u211d\n\u22a2 \u2203 \u03b4,\n    \u2200 (A : Finset (GL n \u2102)),\n      IsApproximateSubgroup K \u2191A \u2192 (\u2200 a \u2208 A, \u2016\u2191a\u2016 \u2264 C\u2080) \u2192 \u2203 \u03b3 \u2208 A ^ 2, \u03b4 * \u2191(#A) \u2264 \u2191(#({x \u2208 A ^ 4 | Commute \u03b3 x}))",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GrowthInGroups/Lecture4.lean#L25"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-11-16T11:30:19+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "9e9e2251f953eab398c6e3389c032592aa31c5dbd9c2c8f24144e38875d630eb"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "e99e6f7b4a57098ded666cd0ed64aae7078440a3",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 7428,
        "start_column": 30,
        "end_line": 7428,
        "end_column": 35
      },
      "debug_info": {
        "goal": "\u03bd : \u211d \u2192 \u211d\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\nc_close : \u211d\nc_close_pos : c_close > 0\nA C_bnd : \u211d\nC_bnd_pos : 0 < C_bnd\nA_in_Ioc : A \u2208 Ioc 0 (1 / 2)\nzeta_bnd : LogDerivZetaHasBound A C_bnd\n\u03c3\u2082' : \u211d\n\u03c3\u2082 : \u211d := max \u03c3\u2082' (1 / 2)\n\u03c3\u2082_pos : 0 < \u03c3\u2082\n\u03c3\u2082_lt_one : \u03c3\u2082 < 1\nholo2 : HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (Icc \u03c3\u2082 2 \u00d7\u2102 Icc (-3) 3 \\ {1})\nc\u2081 : \u211d\nc\u2081pos : c\u2081 > 0\nc\u2082 : \u211d\nc\u2082pos : 0 < c\u2082\nc\u2083 : \u211d\nc\u2083pos : 0 < c\u2083\nc\u2085 : \u211d\nc\u2085pos : 0 < c\u2085\nc\u2087 : \u211d\nc\u2087pos : 0 < c\u2087\nc\u2088 : \u211d\nc\u2088pos : 0 < c\u2088\nc\u2089 : \u211d\nc\u2089pos : c\u2089 > 0\nc : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\n\u03b5x : \u211d \u2192 \u211d := fun x => Real.exp (-c * Real.log x ^ (1 / 10))\nTx : \u211d \u2192 \u211d := fun x => Real.exp (2 * c * Real.log x ^ (1 / 10))\neventually_\u03b5x_lt_one : \u2200\u1da0 (x : \u211d) in atTop, \u03b5x x < 1\neventually_2_lt : \u2200\u1da0 (x : \u211d) in atTop, 2 < x * \u03b5x x\neventually_T_gt_3 : \u2200\u1da0 (x : \u211d) in atTop, 3 < Tx x\neventually_\u03c3\u2082_lt_\u03c3\u2081 : \u2200\u1da0 (x : \u211d) in atTop, \u03c3\u2082 < 1 - A / Real.log (Tx x) ^ 9\nX : \u211d\nX_gt_3 : 3 < X\n\u03b5_lt_one : \u03b5x X < 1\n\u03b5_X : 2 < X * \u03b5x X\nT_gt_3 : 3 < Tx X\n\u03c3\u2082_lt_\u03c3\u2081 : \u03c3\u2082 < 1 - A / Real.log (Tx X) ^ 9\n\u03b5 : \u211d := \u03b5x X\n\u03b5_pos : 0 < \u03b5\nh_close : \u2016SmoothedChebyshev \u03bd \u03b5 X - \u2191(ChebyshevPsi X)\u2016 \u2264 c_close * \u03b5 * X * Real.log X\n\u03c8_\u03b5_of_X : \u2102 := SmoothedChebyshev \u03bd \u03b5 X\nT : \u211d := Tx X\nholo1 :\n  HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (Icc (1 - A / Real.log T ^ 9) 2 \u00d7\u2102 Icc (-T) T \\ {1})\n\u03c3\u2081 : \u211d := 1 - A / Real.log T ^ 9\n\u03c3\u2081pos : 0 < \u03c3\u2081\n\u03c3\u2081_lt_one : \u03c3\u2081 < 1\nholo2a : HolomorphicOn (SmoothedChebyshevIntegrand \u03bd \u03b5 X) (Icc \u03c3\u2082 2 \u00d7\u2102 Icc (-3) 3 \\ {1})\n\u03c8_\u03b5_diff :\n  \u2016\u03c8_\u03b5_of_X - MellinTransform (fun x => \u2191(Smooth1 \u03bd \u03b5 x)) 1 * \u2191X\u2016 \u2264\n    \u2016I\u2081 \u03bd \u03b5 X T\u2016 + \u2016I\u2082 \u03bd \u03b5 T X \u03c3\u2081\u2016 + \u2016I\u2083 \u03bd \u03b5 T X \u03c3\u2081\u2016 + \u2016I\u2084 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 + \u2016I\u2085 \u03bd \u03b5 X \u03c3\u2082\u2016 + \u2016I\u2086 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 +\n          \u2016I\u2087 \u03bd \u03b5 T X \u03c3\u2081\u2016 +\n        \u2016I\u2088 \u03bd \u03b5 T X \u03c3\u2081\u2016 +\n      \u2016I\u2089 \u03bd \u03b5 X T\u2016\nC_main : \u211d\nC_main_pos : C_main > 0\nmain_diff : \u2016MellinTransform (fun x => \u2191(Smooth1 \u03bd \u03b5 x)) 1 * \u2191X - \u2191X\u2016 \u2264 C_main * \u03b5 * X\nhc\u2081 : \u2016I\u2081 \u03bd \u03b5 X (Tx X)\u2016 \u2264 c\u2081 * X * Real.log X / (\u03b5 * Tx X)\nhc\u2082 :\n  let \u03c3\u2081 := 1 - A / Real.log (Tx X) ^ 9;\n  \u2016I\u2082 \u03bd \u03b5 (Tx X) X \u03c3\u2081\u2016 \u2264 c\u2082 * X / (\u03b5 * Tx X)\nhc\u2083 :\n  let \u03c3\u2081 := 1 - A / Real.log (Tx X) ^ 9;\n  \u2016I\u2083 \u03bd \u03b5 (Tx X) X \u03c3\u2081\u2016 \u2264 c\u2083 * X * X ^ (-A / Real.log (Tx X) ^ 9) / \u03b5\nhc\u2085 : \u2016I\u2085 \u03bd \u03b5 X \u03c3\u2082\u2016 \u2264 c\u2085 * X ^ \u03c3\u2082 / \u03b5\nhc\u2087 :\n  let \u03c3\u2081 := 1 - A / Real.log (Tx X) ^ 9;\n  \u2016I\u2087 \u03bd \u03b5 (Tx X) X \u03c3\u2081\u2016 \u2264 c\u2087 * X * X ^ (-A / Real.log (Tx X) ^ 9) / \u03b5\nhc\u2088 :\n  let \u03c3\u2081 := 1 - A / Real.log (Tx X) ^ 9;\n  \u2016I\u2088 \u03bd \u03b5 (Tx X) X \u03c3\u2081\u2016 \u2264 c\u2088 * X / (\u03b5 * Tx X)\nhc\u2089 : \u2016I\u2089 \u03bd \u03b5 X (Tx X)\u2016 \u2264 c\u2089 * X * Real.log X / (\u03b5 * Tx X)\n\u22a2 c_close * \u03b5 * X * Real.log X + C_main * \u03b5 * X +\n      (c\u2081 * X * Real.log X / (\u03b5 * T) + c\u2082 * X / (\u03b5 * T) + c\u2083 * X * X ^ (-A / Real.log T ^ 9) / \u03b5 + \u2016I\u2084 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 +\n                c\u2085 * X ^ \u03c3\u2082 / \u03b5 +\n              \u2016I\u2086 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 +\n            c\u2087 * X * X ^ (-A / Real.log T ^ 9) / \u03b5 +\n          c\u2088 * X / (\u03b5 * T) +\n        c\u2089 * X * Real.log X / (\u03b5 * T)) =\n    sorry",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/e99e6f7b4a57098ded666cd0ed64aae7078440a3/PrimeNumberTheoremAnd/MediumPNT.lean#L7428"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-06-27T14:56:34-04:00",
        "inclusion_date": "2025-07-21T23:21:07.188403+00:00"
      },
      "id": "4d97f905d48f8644e1317438d95464d955818740b10288158de3fb9354f265aa"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "58ff9ddb3f6bc3860fb0316cc210fca5d488ba62",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 58,
        "start_column": 74,
        "end_line": 58,
        "end_column": 79
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure volume\nm : \u211d\n\u22a2 H[\u2211 i, \u2211 j, Y (i, j)] \u2264 (2 * \u2191p.m - 1) * multiTau p \u03a9 h\u03a9 X + m\u207b\u00b9 * \u2211 i, H[X i]",
        "url": "https://github.com/teorth/pfr/blob/58ff9ddb3f6bc3860fb0316cc210fca5d488ba62/PFR/TorsionEndgame.lean#L58"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-29T08:58:11-07:00",
        "inclusion_date": "2025-07-05T05:06:27.171280+00:00"
      },
      "id": "fd1c8c6ea38703aed8ff8f822caa641ea78bc24d55ec9668936fec4795064c63"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels2",
        "commit": "569835b62c4edb99310bafb4851954ec5e0356ee",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/SliceModel.lean",
        "start_line": 248,
        "start_column": 4,
        "end_line": 248,
        "end_column": 9
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2079 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\nE''' : Type u_5\ninst\u271d\u00b9\u2078 : NormedAddCommGroup E\ninst\u271d\u00b9\u2077 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u2076 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2075 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u2074 : NormedAddCommGroup E''\ninst\u271d\u00b9\u00b3 : NormedSpace \ud835\udd5c E''\ninst\u271d\u00b9\u00b2 : NormedAddCommGroup E'''\ninst\u271d\u00b9\u00b9 : NormedSpace \ud835\udd5c E'''\nF : Type u_6\nF' : Type u_7\ninst\u271d\u00b9\u2070 : NormedAddCommGroup F\ninst\u271d\u2079 : NormedSpace \ud835\udd5c F\ninst\u271d\u2078 : NormedAddCommGroup F'\ninst\u271d\u2077 : NormedSpace \ud835\udd5c F'\nH : Type u_8\nH' : Type u_9\nH'' : Type u_10\nH''' : Type u_11\ninst\u271d\u2076 : TopologicalSpace H\ninst\u271d\u2075 : TopologicalSpace H'\ninst\u271d\u2074 : TopologicalSpace H''\ninst\u271d\u00b3 : TopologicalSpace H'''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nI'' : ModelWithCorners \ud835\udd5c E'' H''\nJ : ModelWithCorners \ud835\udd5c E''' H'''\nM : Type u_12\nM' : Type u_13\ninst\u271d\u00b2 : TopologicalSpace M'\ninst\u271d\u00b9 : ChartedSpace H' M'\nn\u271d : WithTop \u2115\u221e\nn : \u2115\ninst\u271d : NeZero n\n\u22a2 IsEmbedding fun x =>\n    @instSliceModelRealEuclideanSpaceFinSubtypeForallMemSubspaceBotEuclideanQuadrantEuclideanHalfSpaceModelWithCornersEuclideanQuadrantModelWithCornersEuclideanHalfSpace.match_1\n      n (fun x => EuclideanHalfSpace n) x fun x hx => \u27e8x, \u22ef\u27e9",
        "url": "https://github.com/leanprover-community/mathlib4/blob/569835b62c4edb99310bafb4851954ec5e0356ee/Mathlib/Geometry/Manifold/SliceModel.lean#L248"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-06-06T00:33:32+02:00",
        "inclusion_date": "2025-06-13T03:04:40.616925+00:00"
      },
      "id": "f1e9c550a9c708c08ecc0d5b3fa0d72958b25076df8b2f4e5163e7ba2901631f"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 142,
        "start_column": 4,
        "end_line": 142,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type ?u.16996\ninst\u271d : CommRing R\nI J : Ideal R\n\u22a2 \u2200 (c : R) {x : R}, x \u2208 \u2191I \u2229 \u2191J \u2192 c \u2022 x \u2208 \u2191I \u2229 \u2191J",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L142"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "4a6fa000ae1c7a68458a6773a9b9cb5f61db1bb1e238857d886d6bf4c1cd24d3"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean",
        "start_line": 97,
        "start_column": 12,
        "end_line": 97,
        "end_column": 17
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Fintype L\ninst\u271d\u2076 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2075 : Field \ud835\udd3dq\ninst\u271d\u2074 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u00b3 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b2 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u00b9 : NeZero \u03d1\ninst\u271d : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\ni : Fin \u2113\ncoeffs : Fin (2 ^ (\u2113 - \u2191i)) \u2192 L\nr_chal : L\nP_i : Polynomial L := intermediateEvaluationPoly \ud835\udd3dq \u03b2 \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i, \u22ef\u27e9 coeffs\nf_i : \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i, \u22ef\u27e9) \u2192 L :=\n  fun x => Polynomial.eval (\u2191x) P_i\n\u22a2 \u2191i < r",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean#L97"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "0f43e563e0f4f382bc39b4bf6f38862497f3adbbf8c91139af6a8290c314dd8b"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "classic-harmonic-osc-f",
        "commit": "9d369cbee11aa6fca52641685eae6b639cd7f97b",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PhysLean/StatisticalMechanics/CanonicalEnsemble/Basic.lean",
        "start_line": 105,
        "start_column": 69,
        "end_line": 105,
        "end_column": 74
      },
      "debug_info": {
        "goal": "\u03b9 : Type\n\ud835\udcd2 : CanonicalEnsemble \u03b9\ninst\u271d : Fintype \u03b9\nn : \u2115\nT : Temperature\n\u22a2 CanonicalEnsemble.partitionFunction (Fin n \u2192 \u03b9) (CanonicalEnsemble.nsmul \u03b9 n \ud835\udcd2) Pi.instFintype T =\n    CanonicalEnsemble.partitionFunction \u03b9 \ud835\udcd2 inst\u271d T ^ n",
        "url": "https://github.com/HEPLean/PhysLean/blob/9d369cbee11aa6fca52641685eae6b639cd7f97b/PhysLean/StatisticalMechanics/CanonicalEnsemble/Basic.lean#L105"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-06-28T08:23:46+00:00",
        "inclusion_date": "2025-07-16T23:02:13.531595+00:00"
      },
      "id": "15c5baefb2348bea63a28e57ff98806e3597efc8706bd416a65d31b4d2d4f6e6"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 732,
        "start_column": 2,
        "end_line": 732,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 (3\u207b\u00b9 + 5\u207b\u00b9)\u207b\u00b9 = 29",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Valid.lean#L732"
      },
      "metadata": {
        "blame_email_hash": "dd1b74f40c05",
        "blame_date": "2024-07-12T13:01:27-04:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "99b411084ece53d6d36b0d679bac83d73792c2d6403d1a104a772b57e801aaab"
    },
    {
      "repo": {
        "remote": "https://github.com/cmu-l3/llmlean",
        "branch": "kimina-pr",
        "commit": "126a6b2af37727c4d81bb49f6af6b354a380145e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LLMleanTest/Examples.lean",
        "start_line": 17,
        "start_column": 2,
        "end_line": 17,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03a9 : Type u_1\ninst\u271d : Fintype \u03a9\no1 o2 : @my_object \u03a9 inst\u271d\n\u22a2 @my_object.f \u03a9 inst\u271d o1 + @my_object.f \u03a9 inst\u271d o2 \u2265 0",
        "url": "https://github.com/cmu-l3/llmlean/blob/126a6b2af37727c4d81bb49f6af6b354a380145e/LLMleanTest/Examples.lean#L17"
      },
      "metadata": {
        "blame_email_hash": "3ab0971ac342",
        "blame_date": "2024-04-01T17:50:05-04:00",
        "inclusion_date": "2025-06-11T03:39:01.065377+00:00"
      },
      "id": "8d34e892954d554c66414d64d755ceecd5f2bbf81bb0818be6b1635543c579ec"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_06.lean",
        "start_line": 245,
        "start_column": 4,
        "end_line": 245,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case h.e'_3.h.e'_6\nR : Type u_1\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : DivisionRing R\nh : Fintype R\nZ : Subring R := center R\nn : \u2115\nH : \u2203 x y, x \u2260 y\nh_n : n \u2260 0\nq : \u2115 := Fintype.card \u21a5Z\nh_card : Fintype.card R = q ^ n\nfinclassa : (A : ConjClasses R\u02e3) \u2192 Fintype \u2191A.carrier\nthis\u271d\u00b2 : (A : ConjClasses R\u02e3) \u2192 Fintype \u2191{Quotient.out A}.centralizer\nfintypea : ConjClasses R\u02e3 \u2192\n  Fintype\n    \u2191{A |\n        have this := finclassa A;\n        Fintype.card \u2191A.carrier > 1} :=\n  fun A =>\n    setFintype\n      {A |\n        have this := finclassa A;\n        Fintype.card \u2191A.carrier > 1}\nthis\u271d\u00b9 :\n  Fintype\n    \u2191{A |\n        have this := finclassa A;\n        Fintype.card \u2191A.carrier > 1}\nS' : Set (ConjClasses R\u02e3) := ConjClasses.noncenter R\u02e3\nthis\u271d : Fintype \u2191S'\nS : Finset (ConjClasses R\u02e3) := S'.toFinset\nn_k : \u2191S' \u2192 \u2115 := sorry\nh_R : Fintype.card R\u02e3 = q ^ n - 1\nh_Z : Fintype.card (\u21a5Z)\u02e3 = q - 1\nH1 : q ^ n - 1 = q - 1 + \u2211 x \u2208 (ConjClasses.noncenter R\u02e3).toFinset, x.carrier.toFinset.card\ne : \u21a5(Subgroup.center R\u02e3) \u2243* (\u21a5(Submonoid.center R))\u02e3 := Subgroup.centerUnitsEquivUnitsCenter R\nf : (\u21a5(Submonoid.center R))\u02e3 \u2243 (\u21a5Z)\u02e3 := Equiv.inv (\u21a5(Submonoid.center R))\u02e3\nthis : \u2200 (A : \u2191S'), Fintype.card \u2191(\u2191A).carrier * (q ^ n_k A - 1) = q ^ n - 1\n\u22a2 \u2211 A, (q ^ n - 1) / (q ^ n_k A - 1) = \u2211 x \u2208 (ConjClasses.noncenter R\u02e3).toFinset, x.carrier.toFinset.card",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_06.lean#L245"
      },
      "metadata": {
        "blame_email_hash": "2fa6d47f7084",
        "blame_date": "2023-10-12T19:56:03+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "ca6b34c1ef7ed306bf542e8b47167c079c9782cd12544d6c0566413034927044"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/9SpecialMatrices.lean",
        "start_line": 253,
        "start_column": 2,
        "end_line": 253,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b9 : Fintype n\ninst\u271d : DecidableEq n\nA : Matrix n n \u211d\n\u22a2 A.PosDef \u2194 \u2200 (x : n \u2192 \u211d), x \u2260 0 \u2192 x \u2b1d\u1d65 A.mulVec x > 0",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/9SpecialMatrices.lean#L253"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2023-10-11T15:16:39+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "c2ea4719c7b061ffae9050da0aaaa9932208525c3119123686f852b28f5a0fa7"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 1 - 4, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "cb663d0e1ce874ba06b40e0121c51d823f1b5e4be93aa4bb37ff426e89243074"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "remove-lint-warnings",
        "commit": "b576acfceb264c4d9e22dd9de14566bf6767fa6b",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "Foundation/Modal/Maximal/Makinson.lean",
        "start_line": 41,
        "start_column": 50,
        "end_line": 41,
        "end_column": 55
      },
      "debug_info": {
        "goal": "L : Logic \u2115\ninst\u271d\u00b9 : L.IsNormal\ninst\u271d : Consistent L\n\u03c6 : Formula \u2115\nhL : L \u22a2! \u03c6\nhV : Logic.Ver \u22ac \u03c6\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Logic.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis : L \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nh\u03b3L : \u03b3 \u2208 L\nh\u03b3V : \u03b3 \u2209 Logic.Ver\n\u0394 : List { \u03c8 // \u03c8.isPrebox \u2228 \u03c8.isPredia \u2228 \u03c8.degree = 0 }\nh\u03b4\u0393 : \u27e8\u22c1\u0394.unattach, \u22ef\u27e9 \u2208 \u0393\nh\u03b4L : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2208 L\nh\u03b4V : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2209 Logic.Ver\nh\u0394\u2081 : \u2200 \u03c8 \u2208 \u0394, \u00ac(\u2191\u03c8).isPrebox\n\u22a2 \u2203 \u0393, L \u22a2! \u03c6 \u2b64 \u22c0\u0393",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/b576acfceb264c4d9e22dd9de14566bf6767fa6b/Foundation/Modal/Maximal/Makinson.lean#L41"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-06-28T05:49:24+09:00",
        "inclusion_date": "2025-07-07T04:01:35.075616+00:00"
      },
      "id": "0622062d2e24e610d356f56b1325ed95c693c818bb31007934b182d49e230df7"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "e4c6e71e5795569df9e9bdbfe4b136897784b355",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/ToMathlib/RealInterpolation/InterpolatedExponents.lean",
        "start_line": 402,
        "start_column": 12,
        "end_line": 402,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case e_a.e_a\np\u2080 q\u2080 p\u2081 q\u2081 t : ENNReal\nht : t \u2208 Ioo 0 1\naux : t.toReal \u2260 0\n\u22a2 (q\u2081\u207b\u00b9.toReal - q\u2080\u207b\u00b9.toReal) * t.toReal = (1 - t).toReal * q\u2080\u207b\u00b9.toReal + t.toReal * q\u2081\u207b\u00b9.toReal - q\u2080\u207b\u00b9.toReal",
        "url": "https://github.com/fpvandoorn/carleson/blob/e4c6e71e5795569df9e9bdbfe4b136897784b355/Carleson/ToMathlib/RealInterpolation/InterpolatedExponents.lean#L402"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-06-19T17:41:34+02:00",
        "inclusion_date": "2025-06-24T03:23:45.994996+00:00"
      },
      "id": "e90f7ce2b596addb9aa5b8752f10fc6aaef3d474c87f67434e5c9f1a850c8b5a"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-hardly-ramified",
        "commit": "60be88a841fa232b563ea16600befe5efbfb3d07",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FLT/HaarMeasure/HaarChar/FiniteDimensional.lean",
        "start_line": 26,
        "start_column": 2,
        "end_line": 26,
        "end_column": 7
      },
      "debug_info": {
        "goal": "F : Type u_1\ninst\u271d\u00b9\u2074 : Field F\ninst\u271d\u00b9\u00b3 : MeasurableSpace F\ninst\u271d\u00b9\u00b2 : TopologicalSpace F\ninst\u271d\u00b9\u00b9 : BorelSpace F\ninst\u271d\u00b9\u2070 : IsTopologicalRing F\ninst\u271d\u2079 : LocallyCompactSpace F\nV : Type u_2\ninst\u271d\u2078 : AddCommGroup V\ninst\u271d\u2077 : TopologicalSpace V\ninst\u271d\u2076 : MeasurableSpace V\ninst\u271d\u2075 : BorelSpace V\ninst\u271d\u2074 : Module F V\ninst\u271d\u00b3 : FiniteDimensional F V\ninst\u271d\u00b2 : IsModuleTopology F V\ninst\u271d\u00b9 : IsTopologicalAddGroup V\ninst\u271d : LocallyCompactSpace V\n\u03c1 : V \u2243L[F] V\n\u22a2 addEquivAddHaarChar \u03c1.toContinuousAddEquiv = ringHaarChar (LinearEquiv.det \u03c1.toLinearEquiv)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/60be88a841fa232b563ea16600befe5efbfb3d07/FLT/HaarMeasure/HaarChar/FiniteDimensional.lean#L26"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-05-18T13:03:27+01:00",
        "inclusion_date": "2025-09-18T04:05:26.332171+00:00"
      },
      "id": "d52338702eea17e4f4459bcbd16620aac392aa9f599511422a2226cd33da352d"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/GrowthInGroups/Lecture4.lean",
        "start_line": 30,
        "start_column": 30,
        "end_line": 30,
        "end_column": 35
      },
      "debug_info": {
        "goal": "K C\u2080 : \u211d\n\u22a2 \u2203 C > 0,\n    \u2200 (A : Set SL(2, \u2102)),\n      IsApproximateSubgroup K A \u2192 \u2203 Z, \u2203 (_ : \u2200 x \u2208 Z, \u2200 y \u2208 Z, Commute x y), \u2203 F, #F \u2264 C \u2227 A \u2286 \u2191F * \u2191Z",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GrowthInGroups/Lecture4.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-11-16T11:30:19+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "bc809e511427e236c2df25fd3d34a06f10fae32fc59b42754634786397cca7ff"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "b5313cfd2308dfb6b98d7321bf26243984e4d291",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 7343,
        "start_column": 30,
        "end_line": 7343,
        "end_column": 35
      },
      "debug_info": {
        "goal": "\u03bd : \u211d \u2192 \u211d\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\nc_close : \u211d\nc_close_pos : c_close > 0\n\u03b5_main C_main : \u211d\n\u03b5_main_pos : 0 < \u03b5_main\nC_main_pos : 0 < C_main\nA C_bnd : \u211d\nC_bnd_pos : 0 < C_bnd\nA_in_Ioc : A \u2208 Ioc 0 (1 / 2)\nzeta_bnd : LogDerivZetaHasBound A C_bnd\n\u03c3\u2082' : \u211d\n\u03c3\u2082 : \u211d := max \u03c3\u2082' (1 / 2)\n\u03c3\u2082_pos : 0 < \u03c3\u2082\n\u03c3\u2082_lt_one : \u03c3\u2082 < 1\nholo2 : HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (Icc \u03c3\u2082 2 \u00d7\u2102 Icc (-3) 3 \\ {1})\nc\u2081 : \u211d\nc\u2081pos : c\u2081 > 0\nc\u2082 : \u211d\nc\u2082pos : 0 < c\u2082\nc\u2083 : \u211d\nc\u2083pos : 0 < c\u2083\nc\u2085 : \u211d\nc\u2085pos : 0 < c\u2085\nc\u2087 : \u211d\nc\u2087pos : 0 < c\u2087\nc\u2088 : \u211d\nc\u2088pos : 0 < c\u2088\nc\u2089 : \u211d\nc\u2089pos : c\u2089 > 0\nc\u2084 : \u211d\nc\u2084pos : 0 \u2264 c\u2084\nTlb\u2084 : \u211d\nTlb\u2084bnd : 3 < Tlb\u2084\nc\u2086 : \u211d\nc\u2086pos : 0 \u2264 c\u2086\nTlb\u2086 : \u211d\nTlb\u2086bnd : 3 < Tlb\u2086\nc : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\n\u03b5x : \u211d \u2192 \u211d := fun x => Real.exp (-c * Real.log x ^ (1 / 10))\nTx : \u211d \u2192 \u211d := fun x => Real.exp (2 * c * Real.log x ^ (1 / 10))\neventually_\u03b5x_lt_one : \u2200\u1da0 (x : \u211d) in atTop, \u03b5x x < 1\neventually_2_lt : \u2200\u1da0 (x : \u211d) in atTop, 2 < x * \u03b5x x\neventually_T_gt_3 : \u2200\u1da0 (x : \u211d) in atTop, 3 < Tx x\neventually_T_gt_Tlb\u2084 : \u2200\u1da0 (x : \u211d) in atTop, Tlb\u2084 < Tx x\neventually_T_gt_Tlb\u2086 : \u2200\u1da0 (x : \u211d) in atTop, Tlb\u2086 < Tx x\neventually_\u03c3\u2082_lt_\u03c3\u2081 : \u2200\u1da0 (x : \u211d) in atTop, \u03c3\u2082 < 1 - A / Real.log (Tx x) ^ 9\neventually_\u03b5_lt_\u03b5_main : \u2200\u1da0 (x : \u211d) in atTop, \u03b5x x < \u03b5_main\nX : \u211d\nX_gt_3 : 3 < X\n\u03b5_lt_one : \u03b5x X < 1\n\u03b5_X : 2 < X * \u03b5x X\nT_gt_3 : 3 < Tx X\nT_gt_Tlb\u2084 : Tlb\u2084 < Tx X\nT_gt_Tlb\u2086 : Tlb\u2086 < Tx X\n\u03c3\u2082_lt_\u03c3\u2081 : \u03c3\u2082 < 1 - A / Real.log (Tx X) ^ 9\n\u03b5_lt_\u03b5_main : \u03b5x X < \u03b5_main\n\u03b5 : \u211d := \u03b5x X\n\u03b5_pos : 0 < \u03b5\nh_close : \u2016SmoothedChebyshev \u03bd \u03b5 X - \u2191(ChebyshevPsi X)\u2016 \u2264 c_close * \u03b5 * X * Real.log X\n\u03c8_\u03b5_of_X : \u2102 := SmoothedChebyshev \u03bd \u03b5 X\nT : \u211d := Tx X\nholo1 :\n  HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (Icc (1 - A / Real.log T ^ 9) 2 \u00d7\u2102 Icc (-T) T \\ {1})\n\u03c3\u2081 : \u211d := 1 - A / Real.log T ^ 9\n\u03c3\u2081pos : 0 < \u03c3\u2081\n\u03c3\u2081_lt_one : \u03c3\u2081 < 1\nholo2a : HolomorphicOn (SmoothedChebyshevIntegrand \u03bd \u03b5 X) (Icc \u03c3\u2082 2 \u00d7\u2102 Icc (-3) 3 \\ {1})\n\u03c8_\u03b5_diff :\n  \u2016\u03c8_\u03b5_of_X - MellinTransform (fun x => \u2191(Smooth1 \u03bd \u03b5 x)) 1 * \u2191X\u2016 \u2264\n    \u2016I\u2081 \u03bd \u03b5 X T\u2016 + \u2016I\u2082 \u03bd \u03b5 T X \u03c3\u2081\u2016 + \u2016I\u2083 \u03bd \u03b5 T X \u03c3\u2081\u2016 + \u2016I\u2084 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 + \u2016I\u2085 \u03bd \u03b5 X \u03c3\u2082\u2016 + \u2016I\u2086 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 +\n          \u2016I\u2087 \u03bd \u03b5 T X \u03c3\u2081\u2016 +\n        \u2016I\u2088 \u03bd \u03b5 T X \u03c3\u2081\u2016 +\n      \u2016I\u2089 \u03bd \u03b5 X T\u2016\nh_main : \u2016MellinTransform (fun x => \u2191(Smooth1 \u03bd \u03b5 x)) 1 - 1\u2016 \u2264 C_main * \u03b5\nmain : \u2016MellinTransform (fun x => \u2191(Smooth1 \u03bd \u03b5 x)) 1 * \u2191X - \u2191X\u2016 \u2264 C_main * \u03b5 * X\nhc\u2081 : \u2016I\u2081 \u03bd \u03b5 X (Tx X)\u2016 \u2264 c\u2081 * X * Real.log X / (\u03b5 * Tx X)\nhc\u2082 :\n  let \u03c3\u2081 := 1 - A / Real.log (Tx X) ^ 9;\n  \u2016I\u2082 \u03bd \u03b5 (Tx X) X \u03c3\u2081\u2016 \u2264 c\u2082 * X / (\u03b5 * Tx X)\nhc\u2083 :\n  let \u03c3\u2081 := 1 - A / Real.log (Tx X) ^ 9;\n  \u2016I\u2083 \u03bd \u03b5 (Tx X) X \u03c3\u2081\u2016 \u2264 c\u2083 * X * X ^ (-A / Real.log (Tx X) ^ 9) / \u03b5\nhc\u2085 : \u2016I\u2085 \u03bd \u03b5 X \u03c3\u2082\u2016 \u2264 c\u2085 * X ^ \u03c3\u2082 / \u03b5\nhc\u2087 :\n  let \u03c3\u2081 := 1 - A / Real.log (Tx X) ^ 9;\n  \u2016I\u2087 \u03bd \u03b5 (Tx X) X \u03c3\u2081\u2016 \u2264 c\u2087 * X * X ^ (-A / Real.log (Tx X) ^ 9) / \u03b5\nhc\u2088 :\n  let \u03c3\u2081 := 1 - A / Real.log (Tx X) ^ 9;\n  \u2016I\u2088 \u03bd \u03b5 (Tx X) X \u03c3\u2081\u2016 \u2264 c\u2088 * X / (\u03b5 * Tx X)\nhc\u2089 : \u2016I\u2089 \u03bd \u03b5 X (Tx X)\u2016 \u2264 c\u2089 * X * Real.log X / (\u03b5 * Tx X)\nhc\u2084 :\n  let \u03c3\u2081 := 1 - A / Real.log (Tx X) ^ 9;\n  \u2016I\u2084 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 \u2264 c\u2084 * X * X ^ (-A / Real.log (Tx X) ^ 9) / \u03b5\nhc\u2086 :\n  let \u03c3\u2081 := 1 - A / Real.log (Tx X) ^ 9;\n  \u2016I\u2086 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 \u2264 c\u2086 * X * X ^ (-A / Real.log (Tx X) ^ 9) / \u03b5\n\u22a2 c_close * \u03b5 * X * Real.log X + C_main * \u03b5 * X +\n      (c\u2081 * X * Real.log X / (\u03b5 * T) + c\u2082 * X / (\u03b5 * T) + c\u2083 * X * X ^ (-A / Real.log T ^ 9) / \u03b5 +\n                  c\u2084 * X * X ^ (-A / Real.log (Tx X) ^ 9) / \u03b5 +\n                c\u2085 * X ^ \u03c3\u2082 / \u03b5 +\n              c\u2086 * X * X ^ (-A / Real.log (Tx X) ^ 9) / \u03b5 +\n            c\u2087 * X * X ^ (-A / Real.log T ^ 9) / \u03b5 +\n          c\u2088 * X / (\u03b5 * T) +\n        c\u2089 * X * Real.log X / (\u03b5 * T)) =\n    sorry",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/b5313cfd2308dfb6b98d7321bf26243984e4d291/PrimeNumberTheoremAnd/MediumPNT.lean#L7343"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-06-27T14:56:34-04:00",
        "inclusion_date": "2025-07-22T23:27:42.532828+00:00"
      },
      "id": "018ab6a0484ed4a488539f4116d3512b45158e0f0efdbe0ceb89aa4c9e026c8e"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "58ff9ddb3f6bc3860fb0316cc210fca5d488ba62",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 61,
        "start_column": 94,
        "end_line": 61,
        "end_column": 99
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure volume\nm : \u211d\n\u22a2 H[\u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j)] \u2264 (8 * \u2191p.m ^ 2 - 16 * \u2191p.m + 1) * multiTau p \u03a9 h\u03a9 X + m\u207b\u00b9 * \u2211 i, H[X i]",
        "url": "https://github.com/teorth/pfr/blob/58ff9ddb3f6bc3860fb0316cc210fca5d488ba62/PFR/TorsionEndgame.lean#L61"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-29T08:58:11-07:00",
        "inclusion_date": "2025-07-05T05:06:27.171280+00:00"
      },
      "id": "84e8f99046f6ef37fbb5a139e2190d495499f6fd90d54bd2f55838f77ea0b01c"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels2",
        "commit": "edf5065812424e6a70b155037e1f32547069ee83",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/SliceModel.lean",
        "start_line": 283,
        "start_column": 4,
        "end_line": 283,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case h\n\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2078 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\nE''' : Type u_5\ninst\u271d\u00b9\u2077 : NormedAddCommGroup E\ninst\u271d\u00b9\u2076 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E''\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E''\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E'''\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E'''\nF : Type u_6\nF' : Type u_7\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\ninst\u271d\u2077 : NormedAddCommGroup F'\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F'\nH : Type u_8\nH' : Type u_9\nH'' : Type u_10\nH''' : Type u_11\ninst\u271d\u2075 : TopologicalSpace H\ninst\u271d\u2074 : TopologicalSpace H'\ninst\u271d\u00b3 : TopologicalSpace H''\ninst\u271d\u00b2 : TopologicalSpace H'''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nI'' : ModelWithCorners \ud835\udd5c E'' H''\nJ : ModelWithCorners \ud835\udd5c E''' H'''\nM : Type u_12\nM' : Type u_13\ninst\u271d\u00b9 : TopologicalSpace M'\ninst\u271d : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nh : @SliceModel \ud835\udd5c inst\u271d\u00b9\u2078 E E' inst\u271d\u00b9\u2077 inst\u271d\u00b9\u2076 inst\u271d\u00b9\u2075 inst\u271d\u00b9\u2074 F inst\u271d\u2079 inst\u271d\u2078 H H' inst\u271d\u2075 inst\u271d\u2074 I I'\nh' : @SliceModel \ud835\udd5c inst\u271d\u00b9\u2078 E' E'' inst\u271d\u00b9\u2075 inst\u271d\u00b9\u2074 inst\u271d\u00b9\u00b3 inst\u271d\u00b9\u00b2 F' inst\u271d\u2077 inst\u271d\u2076 H' H'' inst\u271d\u2074 inst\u271d\u00b3 I' I''\nx : H\n\u22a2 \u2191I''\n      (@SliceModel.map \ud835\udd5c inst\u271d\u00b9\u2078 E' E'' inst\u271d\u00b9\u2075 inst\u271d\u00b9\u2074 inst\u271d\u00b9\u00b3 inst\u271d\u00b9\u00b2 F' inst\u271d\u2077 inst\u271d\u2076 H' H'' inst\u271d\u2074 inst\u271d\u00b3 I' I'' h'\n        (@SliceModel.map \ud835\udd5c inst\u271d\u00b9\u2078 E E' inst\u271d\u00b9\u2077 inst\u271d\u00b9\u2076 inst\u271d\u00b9\u2075 inst\u271d\u00b9\u2074 F inst\u271d\u2079 inst\u271d\u2078 H H' inst\u271d\u2075 inst\u271d\u2074 I I' h x)) =\n    (@SliceModel.equiv \ud835\udd5c inst\u271d\u00b9\u2078 E' E'' inst\u271d\u00b9\u2075 inst\u271d\u00b9\u2074 inst\u271d\u00b9\u00b3 inst\u271d\u00b9\u00b2 F' inst\u271d\u2077 inst\u271d\u2076 H' H'' inst\u271d\u2074 inst\u271d\u00b3 I' I'' h')\n      ((@SliceModel.equiv \ud835\udd5c inst\u271d\u00b9\u2078 E E' inst\u271d\u00b9\u2077 inst\u271d\u00b9\u2076 inst\u271d\u00b9\u2075 inst\u271d\u00b9\u2074 F inst\u271d\u2079 inst\u271d\u2078 H H' inst\u271d\u2075 inst\u271d\u2074 I I' h)\n          ((ContinuousLinearEquiv.symm\n                (@ContinuousLinearEquiv.prodAssoc \ud835\udd5c E F F' Field.toSemifield.toDivisionSemiring.toSemiring\n                  NormedAddCommGroup.toENormedAddCommMonoid.toAddCommMonoid\n                  NormedAddCommGroup.toENormedAddCommMonoid.toAddCommMonoid\n                  NormedAddCommGroup.toENormedAddCommMonoid.toAddCommMonoid inst\u271d\u00b9\u2076.toModule inst\u271d\u2078.toModule\n                  inst\u271d\u2076.toModule PseudoMetricSpace.toUniformSpace.toTopologicalSpace\n                  PseudoMetricSpace.toUniformSpace.toTopologicalSpace\n                  PseudoMetricSpace.toUniformSpace.toTopologicalSpace))\n              (\u2191I x, 0)).1,\n        ((ContinuousLinearEquiv.symm\n              (@ContinuousLinearEquiv.prodAssoc \ud835\udd5c E F F' Field.toSemifield.toDivisionSemiring.toSemiring\n                NormedAddCommGroup.toENormedAddCommMonoid.toAddCommMonoid\n                NormedAddCommGroup.toENormedAddCommMonoid.toAddCommMonoid\n                NormedAddCommGroup.toENormedAddCommMonoid.toAddCommMonoid inst\u271d\u00b9\u2076.toModule inst\u271d\u2078.toModule\n                inst\u271d\u2076.toModule PseudoMetricSpace.toUniformSpace.toTopologicalSpace\n                PseudoMetricSpace.toUniformSpace.toTopologicalSpace\n                PseudoMetricSpace.toUniformSpace.toTopologicalSpace))\n            (\u2191I x, 0)).2)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/edf5065812424e6a70b155037e1f32547069ee83/Mathlib/Geometry/Manifold/SliceModel.lean#L283"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-06-06T00:33:32+02:00",
        "inclusion_date": "2025-06-12T03:06:38.845031+00:00"
      },
      "id": "db6dd5f2d43acc55a848970c1bf3ee6344d777920301fcfcf1b14ce0787069f7"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 191,
        "start_column": 4,
        "end_line": 191,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type ?u.20745\ninst\u271d\u00b9 : CommRing R\nS : Type ?u.20751\ninst\u271d : CommRing S\nf : R \u2192+* S\nx : R\n\u22a2 x \u2208 ker f \u2192 f x = 0",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L191"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "d8a04e9f3f5b9822bb60ad43ee30481090647fd3dd5fb056d041b96c6305f871"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean",
        "start_line": 99,
        "start_column": 42,
        "end_line": 99,
        "end_column": 47
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Fintype L\ninst\u271d\u2076 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2075 : Field \ud835\udd3dq\ninst\u271d\u2074 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u00b3 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b2 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u00b9 : NeZero \u03d1\ninst\u271d : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\ni : Fin \u2113\ncoeffs : Fin (2 ^ (\u2113 - \u2191i)) \u2192 L\nr_chal : L\nP_i : Polynomial L := intermediateEvaluationPoly \ud835\udd3dq \u03b2 \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i, \u22ef\u27e9 coeffs\nf_i : \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i, \u22ef\u27e9) \u2192 L :=\n  fun x => Polynomial.eval (\u2191x) P_i\nf_i_plus_1 : \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191\u27e8\u2191i, \u22ef\u27e9 + 1, \u22ef\u27e9) \u2192 L :=\n  Binius.BinaryBasefold.fold L inst\u271d\u2078 inst\u271d\u2077 inst\u271d\u2076 \ud835\udd3dq inst\u271d\u2075 inst\u271d\u2074 h_Fq_char_prime h_Fq_card_gt_1 inst\u271d\u00b3 r inst\u271d\u00b2 \u03b2\n    h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i, \u22ef\u27e9 f_i r_chal\nj : Fin (2 ^ (\u2113 - \u2191i - 1))\n\u22a2 \u2191j * 2 < 2 ^ (\u2113 - \u2191i)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean#L99"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "1227d4cdf1556e1fb25975d08f8ed79d8ef968677a233219feb1671f56758915"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "classic-harmonic-osc-f",
        "commit": "9d369cbee11aa6fca52641685eae6b639cd7f97b",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PhysLean/StatisticalMechanics/CanonicalEnsemble/Basic.lean",
        "start_line": 150,
        "start_column": 29,
        "end_line": 150,
        "end_column": 34
      },
      "debug_info": {
        "goal": "\u03b9 : Type\n\ud835\udcd2 : CanonicalEnsemble \u03b9\ninst\u271d : Fintype \u03b9\ni : CanonicalEnsemble.microstates \u03b9 \ud835\udcd2\nT : Temperature\n\u22a2 CanonicalEnsemble.probability \u03b9 \ud835\udcd2 inst\u271d i T \u2264 1",
        "url": "https://github.com/HEPLean/PhysLean/blob/9d369cbee11aa6fca52641685eae6b639cd7f97b/PhysLean/StatisticalMechanics/CanonicalEnsemble/Basic.lean#L150"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-06-28T08:23:46+00:00",
        "inclusion_date": "2025-07-16T23:02:13.531595+00:00"
      },
      "id": "b0477fa2d8d5042070810af16605dc5abb42b8cd0d4b1f95f21fa0e3f76e7a50"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 1023,
        "start_column": 2,
        "end_line": 1023,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 (2 + 3)\u207b\u00b9 - (2\u207b\u00b9 + 3\u207b\u00b9) = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Valid.lean#L1023"
      },
      "metadata": {
        "blame_email_hash": "dd1b74f40c05",
        "blame_date": "2024-07-12T13:01:27-04:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "d266be31456818cfb33e44e5a4c779bbe956dfb3e12a961d395714d7422939f7"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_06.lean",
        "start_line": 294,
        "start_column": 6,
        "end_line": 294,
        "end_column": 11
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : DivisionRing R\nh : Fintype R\nZ : Subring R := center R\nn : \u2115\nH : \u2203 x y, x \u2260 y\nh_n : n \u2260 0\nq : \u2115 := Fintype.card \u21a5Z\nh_card : Fintype.card R = q ^ n\nfinclassa : (A : ConjClasses R\u02e3) \u2192 Fintype \u2191A.carrier\nthis\u271d\u00b3 : (A : ConjClasses R\u02e3) \u2192 Fintype \u2191{Quotient.out A}.centralizer\nfintypea : ConjClasses R\u02e3 \u2192\n  Fintype\n    \u2191{A |\n        have this := finclassa A;\n        Fintype.card \u2191A.carrier > 1} :=\n  fun A =>\n    setFintype\n      {A |\n        have this := finclassa A;\n        Fintype.card \u2191A.carrier > 1}\nthis\u271d\u00b2 :\n  Fintype\n    \u2191{A |\n        have this := finclassa A;\n        Fintype.card \u2191A.carrier > 1}\nS' : Set (ConjClasses R\u02e3) := ConjClasses.noncenter R\u02e3\nthis\u271d\u00b9 : Fintype \u2191S'\nS : Finset (ConjClasses R\u02e3) := S'.toFinset\nn_k : \u2191S' \u2192 \u2115 := sorry\nh_R : Fintype.card R\u02e3 = q ^ n - 1\nh_Z : Fintype.card (\u21a5Z)\u02e3 = q - 1\nH1 : q ^ n - 1 = q - 1 + \u2211 x \u2208 (ConjClasses.noncenter R\u02e3).toFinset, x.carrier.toFinset.card\ne : \u21a5(Subgroup.center R\u02e3) \u2243* (\u21a5(Submonoid.center R))\u02e3 := Subgroup.centerUnitsEquivUnitsCenter R\nf : (\u21a5(Submonoid.center R))\u02e3 \u2243 (\u21a5Z)\u02e3 := Equiv.inv (\u21a5(Submonoid.center R))\u02e3\nthis\u271d : \u2200 (A : \u2191S'), Fintype.card \u2191(\u2191A).carrier * (q ^ n_k A - 1) = q ^ n - 1\nh1 : q ^ n - 1 = q - 1 + \u2211 A, (q ^ n - 1) / (q ^ n_k A - 1)\nhZ : Nonempty \u21a5Z\nhq_pow_pos : \u2200 (m : \u2115), 1 \u2264 q ^ m\nh_n_k_A_dvd : \u2200 (A : \u2191S'), n_k A \u2223 n\nh_phi_dvd_q_sub_one : eval (\u2191q) (phi n) \u2223 \u2191(q - 1)\nx\u271d : \u00acIsField R\ng : Polynomial.map (Int.castRingHom \u2102) (phi n) = \u220f lamb \u2208 primitiveRoots n \u2102, (X - C lamb)\nthis : 2 \u2264 q\n\u22a2 1 < n",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_06.lean#L294"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2023-10-09T22:01:21+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "88dde89f7c4209200e7b000b07caad56afb52ba6c1deb974ba6f40722e615969"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/9SpecialMatrices.lean",
        "start_line": 256,
        "start_column": 2,
        "end_line": 256,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b9 : Fintype n\ninst\u271d : DecidableEq n\nA : Matrix n n \u211d\n\u22a2 A.PosSemidef \u2194 \u2200 (x : n \u2192 \u211d), x \u2b1d\u1d65 A.mulVec x \u2265 0",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/9SpecialMatrices.lean#L256"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2023-10-11T15:16:39+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "89c7741a746346069c094ceae7800f4eb3ae0b7a1829bb5a03629ab37785ebd4"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 2 - 4, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "338df36c8e3359512d558471f6c8ae553079999294470ff526f0d4146a045c6f"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "remove-lint-warnings",
        "commit": "b576acfceb264c4d9e22dd9de14566bf6767fa6b",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "Foundation/Modal/Kripke/Logic/GLPoint3.lean",
        "start_line": 38,
        "start_column": 84,
        "end_line": 38,
        "end_column": 89
      },
      "debug_info": {
        "goal": "\u22a2 Complete Logic.GLPoint3 LO.Modal.Kripke.FrameClass.finite_GLPoint3",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/b576acfceb264c4d9e22dd9de14566bf6767fa6b/Foundation/Modal/Kripke/Logic/GLPoint3.lean#L38"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-06-28T05:49:24+09:00",
        "inclusion_date": "2025-07-07T04:01:35.075616+00:00"
      },
      "id": "dea0f4cd39038dbc87d84124bf7b79f21a4af2c1e6e06da596ef16c7f9bd4ee2"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "e4c6e71e5795569df9e9bdbfe4b136897784b355",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/ToMathlib/RealInterpolation/InterpolatedExponents.lean",
        "start_line": 402,
        "start_column": 12,
        "end_line": 402,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case e_a.e_a\np\u2080 q\u2080 p\u2081 q\u2081 t : ENNReal\nht : t \u2208 Ioo 0 1\naux : t.toReal \u2260 0\n\u22a2 (p\u2081\u207b\u00b9.toReal - p\u2080\u207b\u00b9.toReal) * t.toReal = (1 - t).toReal * p\u2080\u207b\u00b9.toReal + t.toReal * p\u2081\u207b\u00b9.toReal - p\u2080\u207b\u00b9.toReal",
        "url": "https://github.com/fpvandoorn/carleson/blob/e4c6e71e5795569df9e9bdbfe4b136897784b355/Carleson/ToMathlib/RealInterpolation/InterpolatedExponents.lean#L402"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-06-19T17:41:34+02:00",
        "inclusion_date": "2025-06-24T03:23:45.994996+00:00"
      },
      "id": "6292bb42046baa62989a0a15880b9379420b9c4e4b023034d7877c14e6e6a140"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "pitmonticone/code_of_conduct",
        "commit": "faee09f005172dc474f0b790aa128fc71c50542b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "FLT/HaarMeasure/HaarChar/Ring.lean",
        "start_line": 81,
        "start_column": 2,
        "end_line": 81,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro.mk.intro.intro\nR : Type u_1\ninst\u271d\u2075 : Ring R\ninst\u271d\u2074 : TopologicalSpace R\ninst\u271d\u00b3 : IsTopologicalRing R\ninst\u271d\u00b2 : LocallyCompactSpace R\ninst\u271d\u00b9 : MeasurableSpace R\ninst\u271d : BorelSpace R\nf : R \u2192 \u211d\nf_cont : Continuous f\nf_comp : HasCompactSupport \u21d1{ toFun := f, continuous_toFun := f_cont }\nf_nonneg : 0 \u2264 { toFun := f, continuous_toFun := f_cont }\nf_one : { toFun := f, continuous_toFun := f_cont } 1 \u2260 0\nint_f_ne_zero : \u222b (x : R), f x \u2202addHaar \u2260 0\n\u22a2 Continuous fun u => addEquivAddHaarChar (@ContinuousAddEquiv.mulLeft R inst\u271d\u2075 inst\u271d\u2074 inst\u271d\u00b3 u)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/faee09f005172dc474f0b790aa128fc71c50542b/FLT/HaarMeasure/HaarChar/Ring.lean#L81"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-05-18T13:03:27+01:00",
        "inclusion_date": "2025-06-17T04:57:20.745994+00:00"
      },
      "id": "97dde2d82475bdeeab7bc1a6896e8c0f11cc5aa4cdc9b86fcbbca5ae00cbdde2"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/GrowthInGroups/Lecture4.lean",
        "start_line": 41,
        "start_column": 69,
        "end_line": 41,
        "end_column": 74
      },
      "debug_info": {
        "goal": "C : \u211d\nG : Type u_2\ninst\u271d\u00b9 : Group G\ninst\u271d : DecidableEq G\nS : Finset G\nhSsymm : S\u207b\u00b9 = S\nhSgen : \u2191(Subgroup.closure \u2191S) = Set.univ\nd : \u2115\nhS : \u2200 (n : \u2115), \u2191(#(S ^ n)) \u2264 C * \u2191n ^ d\n\u22a2 IsVirtuallyNilpotent G",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GrowthInGroups/Lecture4.lean#L41"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-11-16T11:30:19+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "27ebd927086c4db93549c5a98d6cf30a84d8c7108f91354d83a57fe135fc2189"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "5d2c803989e44af9fd233b1034045c8fc2ba5735",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 2520,
        "start_column": 22,
        "end_line": 2520,
        "end_column": 27
      },
      "debug_info": {
        "goal": "C' : \u211d := sorry\n\u22a2 C' > 0",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/5d2c803989e44af9fd233b1034045c8fc2ba5735/PrimeNumberTheoremAnd/MediumPNT.lean#L2520"
      },
      "metadata": {
        "blame_email_hash": "3b5a2f161a6f",
        "blame_date": "2025-06-27T14:48:48-04:00",
        "inclusion_date": "2025-07-01T03:15:09.382319+00:00"
      },
      "id": "5b62be989fdd4f606386998155e7ba2d1b7c021b040419fac34b2b0a84101da7"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "58ff9ddb3f6bc3860fb0316cc210fca5d488ba62",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 64,
        "start_column": 60,
        "end_line": 64,
        "end_column": 65
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure volume\n\u22a2 I[\u2211 i, \u2211 j, Y (i, j) : \u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j)] \u2264 2 * (\u2191p.m - 1) * multiTau p \u03a9 h\u03a9 X",
        "url": "https://github.com/teorth/pfr/blob/58ff9ddb3f6bc3860fb0316cc210fca5d488ba62/PFR/TorsionEndgame.lean#L64"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-29T08:58:11-07:00",
        "inclusion_date": "2025-07-05T05:06:27.171280+00:00"
      },
      "id": "ced4710d05b75fddf8d9ec62616ae6f072f7b8fa74d094b3134e073d14eb481c"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "suppress_sorry",
        "commit": "49cefc9b99e01f76e30fd93840728c4020e35c60",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "MathlibTest/suppressSorry.lean",
        "start_line": 72,
        "start_column": 63,
        "end_line": 72,
        "end_column": 68
      },
      "debug_info": {
        "goal": "x : sorry\n\u22a2 True",
        "url": "https://github.com/leanprover-community/mathlib4/blob/49cefc9b99e01f76e30fd93840728c4020e35c60/MathlibTest/suppressSorry.lean#L72"
      },
      "metadata": {
        "blame_email_hash": "8a7dcd08b95f",
        "blame_date": "2025-06-05T03:09:24+02:00",
        "inclusion_date": "2025-06-05T03:11:37.701006+00:00"
      },
      "id": "53b0a85634b8e8aa9ea27c39370d44a3cc41e46141db47293065e436f579fe1e"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 256,
        "start_column": 6,
        "end_line": 256,
        "end_column": 11
      },
      "debug_info": {
        "goal": "R : Type ?u.28136\ninst\u271d\u00b9 : CommRing R\nS : Type ?u.28142\ninst\u271d : CommRing S\nf : R \u2192+* S\nhf : Surjective \u21d1f\n\u22a2 LeftInverse (fun x => (Ideal.Quotient.mk (ker f)) (surjInv hf x)) \u21d1(@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L256"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "43a1cd74d14d57f7902091b5358ffe47dbcb204eafdf47fa76e72309ec0459ea"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean",
        "start_line": 99,
        "start_column": 88,
        "end_line": 99,
        "end_column": 93
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Fintype L\ninst\u271d\u2076 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2075 : Field \ud835\udd3dq\ninst\u271d\u2074 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u00b3 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b2 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u00b9 : NeZero \u03d1\ninst\u271d : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\ni : Fin \u2113\ncoeffs : Fin (2 ^ (\u2113 - \u2191i)) \u2192 L\nr_chal : L\nP_i : Polynomial L := intermediateEvaluationPoly \ud835\udd3dq \u03b2 \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i, \u22ef\u27e9 coeffs\nf_i : \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i, \u22ef\u27e9) \u2192 L :=\n  fun x => Polynomial.eval (\u2191x) P_i\nf_i_plus_1 : \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191\u27e8\u2191i, \u22ef\u27e9 + 1, \u22ef\u27e9) \u2192 L :=\n  Binius.BinaryBasefold.fold L inst\u271d\u2078 inst\u271d\u2077 inst\u271d\u2076 \ud835\udd3dq inst\u271d\u2075 inst\u271d\u2074 h_Fq_char_prime h_Fq_card_gt_1 inst\u271d\u00b3 r inst\u271d\u00b2 \u03b2\n    h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i, \u22ef\u27e9 f_i r_chal\nj : Fin (2 ^ (\u2113 - \u2191i - 1))\n\u22a2 \u2191j * 2 + 1 < 2 ^ (\u2113 - \u2191i)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean#L99"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "f1946fd7bdeb24b0b9794405a660ad5be27d65bc1f05dc47593201db72b551e5"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "classic-harmonic-osc-f",
        "commit": "9d369cbee11aa6fca52641685eae6b639cd7f97b",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PhysLean/StatisticalMechanics/CanonicalEnsemble/Basic.lean",
        "start_line": 155,
        "start_column": 29,
        "end_line": 155,
        "end_column": 34
      },
      "debug_info": {
        "goal": "\u03b9 : Type\n\ud835\udcd2 : CanonicalEnsemble \u03b9\ninst\u271d : Fintype \u03b9\ni : CanonicalEnsemble.microstates \u03b9 \ud835\udcd2\nT : Temperature\n\u22a2 0 \u2264 CanonicalEnsemble.probability \u03b9 \ud835\udcd2 inst\u271d i T",
        "url": "https://github.com/HEPLean/PhysLean/blob/9d369cbee11aa6fca52641685eae6b639cd7f97b/PhysLean/StatisticalMechanics/CanonicalEnsemble/Basic.lean#L155"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-06-28T08:23:46+00:00",
        "inclusion_date": "2025-07-16T23:02:13.531595+00:00"
      },
      "id": "fa6849fbc7002567afc685c30ee22cbca26a9f70d74a1626256771bd2074498f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 18,
        "start_column": 15,
        "end_line": 18,
        "end_column": 20
      },
      "debug_info": {
        "goal": "b h v : \u211d\nh\u2080 : 0 < b \u2227 0 < h \u2227 0 < v\nh\u2081 : v = 1 / 3 * (b * h)\nh\u2082 : b = 30\nh\u2083 : h = 13 / 2\n\u22a2 v = 65",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L18"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "53d07300a22f495fef818ccb96cd044b17e321c9ed3ec46430e456ec40fc3ce0"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_06.lean",
        "start_line": 86,
        "start_column": 59,
        "end_line": 86,
        "end_column": 64
      },
      "debug_info": {
        "goal": "q n : \u2115\nlamb : \u2102\na : \u211d := lamb.re\nb : \u211d := lamb.im\nh : lamb \u2208 primitiveRoots n \u2102\nh_lamb : lamb \u2260 1\nh_a_lt_one : \u2016a\u2016 < 1\nh_ineq : \u2016eval (\u2191q) (X - C lamb)\u2016 ^ 2 > (\u2191q - 1) ^ 2\nthis : 0 \u2264 (\u2191q - 1) ^ 2\ng : \u221a((\u2191q - 1) ^ 2) < \u221a(\u2016eval (\u2191q) (X - C lamb)\u2016 ^ 2)\n\u22a2 \u221a((\u2191q - 1) ^ 2) = \u2191q - 1",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_06.lean#L86"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2023-10-09T20:31:32+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "3ea6f050d49b4dc0143c3a2f8d01723777216785281e84ef93bbce76607fc4d5"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/9SpecialMatrices.lean",
        "start_line": 431,
        "start_column": 2,
        "end_line": 431,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_2\nm : Type u_1\ninst\u271d\u00b2 : Fintype m\ninst\u271d\u00b9 : DecidableEq m\ninst\u271d : Field R\nA : Matrix m m R\n\u22a2 sorry \u2194 A = -A.transpose",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/9SpecialMatrices.lean#L431"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2023-10-11T15:16:39+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "5e189749ea8e77c1ef289b55db79cb7ad8cdeb77c771987b85104e24cc2a55df"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 3 - 4, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "3c54d0a3795b90b086596695c5ad6954507deeb3bab878598e4a4a174afcf40b"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "zfc-axiom",
        "commit": "47bca9e8b9346cf4297b1dd73f39951c727612fd",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Foundation/Modal/Maximal/Makinson.lean",
        "start_line": 42,
        "start_column": 50,
        "end_line": 42,
        "end_column": 55
      },
      "debug_info": {
        "goal": "L : Logic \u2115\ninst\u271d\u00b9 : L.IsNormal\ninst\u271d : Consistent L\n\u03c6 : Formula \u2115\nhL : L \u22a2! \u03c6\nhV : Modal.Ver \u22ac \u03c6\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K.logic \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis : L \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nh\u03b3L : \u03b3 \u2208 L\nh\u03b3V : \u03b3 \u2209 Modal.Ver\n\u0394 : List { \u03c8 // \u03c8.isPrebox \u2228 \u03c8.isPredia \u2228 \u03c8.degree = 0 }\nh\u03b4\u0393 : \u27e8\u22c1\u0394.unattach, \u22ef\u27e9 \u2208 \u0393\nh\u03b4L : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2208 L\nh\u03b4V : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2209 Modal.Ver\nh\u0394\u2081 : \u2200 \u03c8 \u2208 \u0394, \u00ac(\u2191\u03c8).isPrebox\n\u22a2 \u2203 \u0393, L \u22a2! \u03c6 \u2b64 \u22c0\u0393",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/47bca9e8b9346cf4297b1dd73f39951c727612fd/Foundation/Modal/Maximal/Makinson.lean#L42"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-06-28T05:49:24+09:00",
        "inclusion_date": "2025-09-18T03:51:26.203441+00:00"
      },
      "id": "34b75f844920266b909ccc62091e443a8c64caa9de234aca584970fa30bab620"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "6d700b1e66ff8e7d9ee9a98d181186427c706722",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/ToMathlib/RealInterpolation/InterpolatedExponents.lean",
        "start_line": 818,
        "start_column": 8,
        "end_line": 818,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case e_a\nq\u2080 q\u2081 q t : ENNReal\nht : t \u2208 Ioo 0 1\nhq\u2080 : 0 < q\u2080\nhq\u2081 : 0 < q\u2081\nhq\u2080q\u2081 : q\u2080 \u2260 q\u2081\nhq : q\u207b\u00b9 = (1 - t) * q\u2080\u207b\u00b9 + t * q\u2081\u207b\u00b9\nhq\u2080' : q\u2080 \u2260 \u22a4\n\u22a2 q\u2081\u207b\u00b9.toReal - ((1 - t).toReal * q\u2080\u207b\u00b9.toReal + t.toReal * q\u2081\u207b\u00b9.toReal) = (1 - t).toReal * (q\u2081\u207b\u00b9.toReal - q\u2080\u207b\u00b9.toReal)",
        "url": "https://github.com/fpvandoorn/carleson/blob/6d700b1e66ff8e7d9ee9a98d181186427c706722/Carleson/ToMathlib/RealInterpolation/InterpolatedExponents.lean#L818"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-06-19T17:41:34+02:00",
        "inclusion_date": "2025-06-23T03:43:36.957287+00:00"
      },
      "id": "3f2d4bf261feb39be6f751597f464c965267fe340da59fef93c00ffd80fc8db4"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "pitmonticone/code_of_conduct",
        "commit": "faee09f005172dc474f0b790aa128fc71c50542b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "FLT/HaarMeasure/HaarChar/AddEquiv.lean",
        "start_line": 243,
        "start_column": 2,
        "end_line": 243,
        "end_column": 7
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b9\u00b9 : Group G\ninst\u271d\u00b9\u2070 : TopologicalSpace G\ninst\u271d\u2079 : IsTopologicalGroup G\ninst\u271d\u2078 : LocallyCompactSpace G\nH : Type u_2\ninst\u271d\u2077 : Group H\ninst\u271d\u2076 : TopologicalSpace H\ninst\u271d\u2075 : IsTopologicalGroup H\ninst\u271d\u2074 : LocallyCompactSpace H\ninst\u271d\u00b3 : MeasurableSpace G\ninst\u271d\u00b2 : BorelSpace G\ninst\u271d\u00b9 : MeasurableSpace H\ninst\u271d : BorelSpace H\n\u03c6 : G \u2243\u209c* G\n\u03c8 : H \u2243\u209c* H\n\u22a2 @MeasureTheory.mulEquivHaarChar (G \u00d7 H) Prod.instGroup instTopologicalSpaceProd (borel (G \u00d7 H)) \u22ef \u22ef \u22ef\n      (@ContinuousMulEquiv.prodCongr G G H H inst\u271d\u00b9\u00b9 inst\u271d\u00b9\u00b9 inst\u271d\u2077 inst\u271d\u2077 inst\u271d\u00b9\u2070 inst\u271d\u00b9\u2070 inst\u271d\u2076 inst\u271d\u2076 \u03c6 \u03c8) =\n    @MeasureTheory.mulEquivHaarChar G inst\u271d\u00b9\u00b9 inst\u271d\u00b9\u2070 inst\u271d\u00b3 inst\u271d\u00b2 inst\u271d\u2079 inst\u271d\u2078 \u03c6 *\n      @MeasureTheory.mulEquivHaarChar H inst\u271d\u2077 inst\u271d\u2076 inst\u271d\u00b9 inst\u271d inst\u271d\u2075 inst\u271d\u2074 \u03c8",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/faee09f005172dc474f0b790aa128fc71c50542b/FLT/HaarMeasure/HaarChar/AddEquiv.lean#L243"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-05-18T13:03:27+01:00",
        "inclusion_date": "2025-06-17T04:57:20.745994+00:00"
      },
      "id": "0bfc8409ac02c0d1e5b6fd574e5eeaebac3039e661667213d4512a3966566194"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "99a77d19845fb8083456331fd1256bf35a48f60c",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "LeanCamCombi/GrowthInGroups/Lecture4.lean",
        "start_line": 25,
        "start_column": 60,
        "end_line": 25,
        "end_column": 65
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b9 : Fintype n\ninst\u271d : DecidableEq n\nC\u2080 : \u211d\nhC\u2080 : \u2191(Fintype.card n) < C\u2080\nK : \u211d\n\u22a2 \u2203 \u03b4,\n    \u2200 (A : Finset (GL n \u2102)),\n      IsApproximateSubgroup K \u2191A \u2192 (\u2200 a \u2208 A, \u2016\u2191a\u2016 \u2264 C\u2080) \u2192 \u2203 \u03b3 \u2208 A ^ 2, \u03b4 * \u2191A.card \u2264 \u2191{x \u2208 A ^ 4 | Commute \u03b3 x}.card",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/99a77d19845fb8083456331fd1256bf35a48f60c/LeanCamCombi/GrowthInGroups/Lecture4.lean#L25"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-11-16T11:30:19+00:00",
        "inclusion_date": "2025-09-08T22:03:06.847248+00:00"
      },
      "id": "1d76ac30da259b2ecb13803ac248525182e548a897f23acedc920331dd2e10b3"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "5d2c803989e44af9fd233b1034045c8fc2ba5735",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 2521,
        "start_column": 30,
        "end_line": 2521,
        "end_column": 35
      },
      "debug_info": {
        "goal": "C' : \u211d := \u22ef\nthis : C' > 0\n\u22a2 0 < \u20161 / (2 * \u2191Real.pi * I)\u2016 * (3 * C')",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/5d2c803989e44af9fd233b1034045c8fc2ba5735/PrimeNumberTheoremAnd/MediumPNT.lean#L2521"
      },
      "metadata": {
        "blame_email_hash": "3b5a2f161a6f",
        "blame_date": "2025-06-27T14:48:48-04:00",
        "inclusion_date": "2025-07-01T03:15:09.382319+00:00"
      },
      "id": "7ff8c6addad298fa93213c86b37484a22ec55fa43ecc17c306bd17707b54d50c"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "58ff9ddb3f6bc3860fb0316cc210fca5d488ba62",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 67,
        "start_column": 88,
        "end_line": 67,
        "end_column": 93
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure volume\n\u22a2 \u2211 i, d[X i # \u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j) | \u2211 i, \u2211 j, Y (i, j)] \u2264 8 * (\u2191p.m ^ 3 - \u2191p.m ^ 2) * multiTau p \u03a9 h\u03a9 X",
        "url": "https://github.com/teorth/pfr/blob/58ff9ddb3f6bc3860fb0316cc210fca5d488ba62/PFR/TorsionEndgame.lean#L67"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-29T08:58:11-07:00",
        "inclusion_date": "2025-07-05T05:06:27.171280+00:00"
      },
      "id": "51eadef1abe58e8af2670f7270f36580bb76e0cb958946ac647c98c4ca5840ba"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "terminalCat",
        "commit": "a2f04a3f90bf6a62c9b984897f5eb40a46b5f735",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean",
        "start_line": 368,
        "start_column": 4,
        "end_line": 368,
        "end_column": 9
      },
      "debug_info": {
        "goal": "x :\n  (stdSimplex.obj (SimplexCategory.mk 0)).obj\n    (op ((inclusion 2).obj { obj := SimplexCategory.mk 0, property := SSet.OneTruncation\u2082._proof_1 }))\nf : SimplexCategory.mk 0 \u27f6 SimplexCategory.mk 0\neq : (stdSimplex.obj (SimplexCategory.mk 0)).obj (op (SimplexCategory.mk 0)) \u2243\n  (unop (op (SimplexCategory.mk 0)) \u27f6 SimplexCategory.mk 0) :=\n  stdSimplex.objEquiv\nthis : f = (SimplexCategory.mk 0).const (SimplexCategory.mk 0) 0\n\u22a2 x =\n    stdSimplex.const 0 0\n      (op ((inclusion 2).obj { obj := SimplexCategory.mk 0, property := SSet.OneTruncation\u2082._proof_1 }))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/a2f04a3f90bf6a62c9b984897f5eb40a46b5f735/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L368"
      },
      "metadata": {
        "blame_email_hash": "eaaeec08515d",
        "blame_date": "2025-06-04T17:28:16-04:00",
        "inclusion_date": "2025-06-05T03:12:28.661777+00:00"
      },
      "id": "3e4bc31726eec4f77b112c348d896294305790c77a66f94a87e7c6051592932f"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 245,
        "start_column": 6,
        "end_line": 245,
        "end_column": 11
      },
      "debug_info": {
        "goal": "R : Type ?u.28136\ninst\u271d\u00b9 : CommRing R\nS : Type ?u.28142\ninst\u271d : CommRing S\nf : R \u2192+* S\nhf : Surjective \u21d1f\n\u22a2 \u2200 (x y : R \u29f8 ker f),\n    (@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f) (x * y) =\n      (@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f) x * (@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f) y",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L245"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "90386a2e12921d658d81c3634ef4d71192d4590a05d6168f89e850bd752c49bc"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean",
        "start_line": 101,
        "start_column": 5,
        "end_line": 101,
        "end_column": 10
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Fintype L\ninst\u271d\u2076 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2075 : Field \ud835\udd3dq\ninst\u271d\u2074 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u00b3 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b2 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u00b9 : NeZero \u03d1\ninst\u271d : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\ni : Fin \u2113\ncoeffs : Fin (2 ^ (\u2113 - \u2191i)) \u2192 L\nr_chal : L\nP_i : Polynomial L := intermediateEvaluationPoly \ud835\udd3dq \u03b2 \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i, \u22ef\u27e9 coeffs\nf_i : \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i, \u22ef\u27e9) \u2192 L :=\n  fun x => Polynomial.eval (\u2191x) P_i\nf_i_plus_1 : \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191\u27e8\u2191i, \u22ef\u27e9 + 1, \u22ef\u27e9) \u2192 L :=\n  Binius.BinaryBasefold.fold L inst\u271d\u2078 inst\u271d\u2077 inst\u271d\u2076 \ud835\udd3dq inst\u271d\u2075 inst\u271d\u2074 h_Fq_char_prime h_Fq_card_gt_1 inst\u271d\u00b3 r inst\u271d\u00b2 \u03b2\n    h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i, \u22ef\u27e9 f_i r_chal\nnew_coeffs : Fin (2 ^ (\u2113 - \u2191i - 1)) \u2192 L := fun j => (1 - r_chal) * coeffs \u27e8\u2191j * 2, \u22ef\u27e9 + r_chal * coeffs \u27e8\u2191j * 2 + 1, \u22ef\u27e9\n\u22a2 \u2191i + 1 < \u2113 + 1",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean#L101"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "54baaeba08038ab28d845a5f48b6280f5b1ea62fc6f7a2b5edfb013794d42c12"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "classic-harmonic-osc-f",
        "commit": "9d369cbee11aa6fca52641685eae6b639cd7f97b",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PhysLean/StatisticalMechanics/CanonicalEnsemble/Basic.lean",
        "start_line": 178,
        "start_column": 64,
        "end_line": 178,
        "end_column": 69
      },
      "debug_info": {
        "goal": "\u03b9 : Type\n\ud835\udcd2 : CanonicalEnsemble \u03b9\ninst\u271d : Fintype \u03b9\nn : \u2115\nf : CanonicalEnsemble.microstates (Fin n \u2192 \u03b9) (CanonicalEnsemble.nsmul \u03b9 n \ud835\udcd2)\nT : Temperature\n\u22a2 CanonicalEnsemble.probability (Fin n \u2192 \u03b9) (CanonicalEnsemble.nsmul \u03b9 n \ud835\udcd2) Pi.instFintype f T =\n    \u220f i, CanonicalEnsemble.probability \u03b9 \ud835\udcd2 inst\u271d (@f i) T",
        "url": "https://github.com/HEPLean/PhysLean/blob/9d369cbee11aa6fca52641685eae6b639cd7f97b/PhysLean/StatisticalMechanics/CanonicalEnsemble/Basic.lean#L178"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-06-28T08:23:46+00:00",
        "inclusion_date": "2025-07-16T23:02:13.531595+00:00"
      },
      "id": "858e13a2f8ee29ee69c174635e530553783d8de7e208b5d4079cc9470957b494"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 22,
        "start_column": 33,
        "end_line": 22,
        "end_column": 38
      },
      "debug_info": {
        "goal": "x y : \u2124\n\u22a2 4 * x ^ 3 - 7 * y ^ 3 \u2260 2003",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L22"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "9f8bd85983c64bc45baf9e636b2f08f65accdc91e76f969a12028c906c9c552f"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_06.lean",
        "start_line": 72,
        "start_column": 30,
        "end_line": 72,
        "end_column": 35
      },
      "debug_info": {
        "goal": "q n : \u2115\nlamb : \u2102\na : \u211d := lamb.re\nb : \u211d := lamb.im\nh : lamb \u2208 primitiveRoots n \u2102\n\u22a2 lamb \u2260 1",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_06.lean#L72"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2023-10-09T18:03:35+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "2a5f4435e6e88ce5b0009f557e5323b592e913d4eb03bc9aeea60c4b974336f6"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/9SpecialMatrices.lean",
        "start_line": 438,
        "start_column": 3,
        "end_line": 438,
        "end_column": 8
      },
      "debug_info": {
        "goal": "R : Type u_2\nm : Type u_1\ninst\u271d\u00b2 : Fintype m\ninst\u271d\u00b9 : DecidableEq m\ninst\u271d : Field R\nA : Matrix m m R\nhA : A = -A.transpose\nhn : Odd (Fintype.card m)\n\u22a2 -A.det = 0",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/9SpecialMatrices.lean#L438"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2023-10-11T15:16:39+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "dc2a910d4353f8a6781d22abf86ca6dd9a5d7db1bf456f9f2c9bb82619f2a92a"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 4 - 4, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "1121f8e9b163ec41eaa6f3fb5d37d01deb1abde552412d5e54640c8be6897bd6"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "master",
        "commit": "cfdae30afde6102dbe39fde8ff70e421bc0bb7d4",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Foundation/Modal/Kripke/Logic/GLPoint3.lean",
        "start_line": 38,
        "start_column": 88,
        "end_line": 38,
        "end_column": 93
      },
      "debug_info": {
        "goal": "\u22a2 Complete Hilbert.GLPoint3 LO.Modal.Kripke.FrameClass.finite_GLPoint3",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/cfdae30afde6102dbe39fde8ff70e421bc0bb7d4/Foundation/Modal/Kripke/Logic/GLPoint3.lean#L38"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-06-19T21:48:22+09:00",
        "inclusion_date": "2025-06-27T03:33:47.593280+00:00"
      },
      "id": "6c3538fdd32fe7198da6de44c15a558cf8d13c6fa4a21bcf3ec802d46f974785"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "6d700b1e66ff8e7d9ee9a98d181186427c706722",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/ToMathlib/RealInterpolation/InterpolatedExponents.lean",
        "start_line": 845,
        "start_column": 8,
        "end_line": 845,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case e_a\np\u2080 q\u2080 q\u2081 q t : ENNReal\nht : t \u2208 Ioo 0 1\nhq\u2080 : 0 < q\u2080\nhq\u2081 : 0 < q\u2081\nhq\u2080q\u2081 : q\u2080 \u2260 q\u2081\nhq : q\u207b\u00b9 = (1 - t) * q\u2080\u207b\u00b9 + t * q\u2081\u207b\u00b9\nhq\u2080' : q\u2080 \u2260 \u22a4\n\u22a2 q\u2081\u207b\u00b9.toReal - ((1 - t).toReal * q\u2080\u207b\u00b9.toReal + t.toReal * q\u2081\u207b\u00b9.toReal) = (1 - t).toReal * (q\u2081\u207b\u00b9.toReal - q\u2080\u207b\u00b9.toReal)",
        "url": "https://github.com/fpvandoorn/carleson/blob/6d700b1e66ff8e7d9ee9a98d181186427c706722/Carleson/ToMathlib/RealInterpolation/InterpolatedExponents.lean#L845"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-06-19T17:41:34+02:00",
        "inclusion_date": "2025-06-23T03:43:36.957287+00:00"
      },
      "id": "6ab6d83b70970c5475bd101e2b351e317800a76cdfcb1021ae613a5a82fd939a"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/HaarMeasure/DistribHaarChar/Basic.lean",
        "start_line": 99,
        "start_column": 40,
        "end_line": 99,
        "end_column": 45
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u2075 : Ring R\ninst\u271d\u2074 : MeasurableSpace R\ninst\u271d\u00b3 : TopologicalSpace R\ninst\u271d\u00b2 : BorelSpace R\ninst\u271d\u00b9 : IsTopologicalAddGroup R\ninst\u271d : LocallyCompactSpace R\n\u22a2 MeasurableSMul R\u02e3 R",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/HaarMeasure/DistribHaarChar/Basic.lean#L99"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-05-09T09:50:50+01:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "243004c59bc4e7eb755301385cb4ad7fa5f0b0ec9d0ad1dc653d25cf11beb5d5"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "99a77d19845fb8083456331fd1256bf35a48f60c",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "LeanCamCombi/GrowthInGroups/Lecture4.lean",
        "start_line": 30,
        "start_column": 30,
        "end_line": 30,
        "end_column": 35
      },
      "debug_info": {
        "goal": "K C\u2080 : \u211d\n\u22a2 \u2203 C > 0,\n    \u2200 (A : Set (Matrix.SpecialLinearGroup (Fin 2) \u2102)),\n      IsApproximateSubgroup K A \u2192 \u2203 Z, \u2203 (_ : \u2200 x \u2208 Z, \u2200 y \u2208 Z, Commute x y), \u2203 F, F.card \u2264 C \u2227 A \u2286 \u2191F * \u2191Z",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/99a77d19845fb8083456331fd1256bf35a48f60c/LeanCamCombi/GrowthInGroups/Lecture4.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-11-16T11:30:19+00:00",
        "inclusion_date": "2025-09-08T22:03:06.847248+00:00"
      },
      "id": "af8511820f2b8c04f36f08ecdea7cdee532c6c022ce40f68380a248102ac457f"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "5d2c803989e44af9fd233b1034045c8fc2ba5735",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 2101,
        "start_column": 4,
        "end_line": 2101,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case intro.intro\ns a b e \u03c3 : \u211d\nf : \u2102 \u2192 \u2102\nhf : IntegrableOn (fun t => f (\u2191\u03c3 + \u2191t * I)) (Icc s e) volume\nhsa : s < a\nhab : a < b\nhbe : b < e\nsa_subset_sb : Icc s a \u2286 Icc s b\n\u22a2 IntervalIntegrable (fun t => f (\u2191\u03c3 + \u2191t * I)) volume a e",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/5d2c803989e44af9fd233b1034045c8fc2ba5735/PrimeNumberTheoremAnd/MediumPNT.lean#L2101"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-06-27T13:50:08-04:00",
        "inclusion_date": "2025-07-01T03:15:09.382319+00:00"
      },
      "id": "94ab55ce421b18dcc6fd87103826acc1dc49449e3ef5038187ef5438806b2f74"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "58ff9ddb3f6bc3860fb0316cc210fca5d488ba62",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 82,
        "start_column": 27,
        "end_line": 82,
        "end_column": 32
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b9 : MeasureableFinGroup G\ninst\u271d : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u22a2 multiTau p \u03a9 h\u03a9 X = 0",
        "url": "https://github.com/teorth/pfr/blob/58ff9ddb3f6bc3860fb0316cc210fca5d488ba62/PFR/TorsionEndgame.lean#L82"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-28T21:28:18-07:00",
        "inclusion_date": "2025-07-05T05:06:27.171280+00:00"
      },
      "id": "5454fffa135058cc53e70390644470ecd289a52c3c75463bd3792d0432febb22"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "terminalCat",
        "commit": "a2f04a3f90bf6a62c9b984897f5eb40a46b5f735",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean",
        "start_line": 374,
        "start_column": 10,
        "end_line": 374,
        "end_column": 15
      },
      "debug_info": {
        "goal": "x y : @SSet.OneTruncation\u2082 ((truncation 2).obj (stdSimplex.obj (SimplexCategory.mk 0)))\n\u22a2 \u2200 (a : x \u27f6 y), a = sorry",
        "url": "https://github.com/leanprover-community/mathlib4/blob/a2f04a3f90bf6a62c9b984897f5eb40a46b5f735/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L374"
      },
      "metadata": {
        "blame_email_hash": "eaaeec08515d",
        "blame_date": "2025-06-04T17:28:16-04:00",
        "inclusion_date": "2025-06-05T03:12:28.661777+00:00"
      },
      "id": "301dc9b24d6c01ec00de3a5f89424e3123c2ee0b45cf34f7605bc16423499f31"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 247,
        "start_column": 6,
        "end_line": 247,
        "end_column": 11
      },
      "debug_info": {
        "goal": "R : Type ?u.28136\ninst\u271d\u00b9 : CommRing R\nS : Type ?u.28142\ninst\u271d : CommRing S\nf : R \u2192+* S\nhf : Surjective \u21d1f\n\u22a2 \u2200 (x y : R \u29f8 ker f),\n    (@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f) (x + y) =\n      (@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f) x + (@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f) y",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L247"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "2a63a8ea658d4bb0b7f11d2eda043de076808ea9ada560cf804dee75d40a440b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean",
        "start_line": 103,
        "start_column": 2,
        "end_line": 103,
        "end_column": 7
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Fintype L\ninst\u271d\u2076 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2075 : Field \ud835\udd3dq\ninst\u271d\u2074 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u00b3 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b2 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u00b9 : NeZero \u03d1\ninst\u271d : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\ni : Fin \u2113\ncoeffs : Fin (2 ^ (\u2113 - \u2191i)) \u2192 L\nr_chal : L\nP_i : Polynomial L := intermediateEvaluationPoly \ud835\udd3dq \u03b2 \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i, \u22ef\u27e9 coeffs\nf_i : \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i, \u22ef\u27e9) \u2192 L :=\n  fun x => Polynomial.eval (\u2191x) P_i\nf_i_plus_1 : \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191\u27e8\u2191i, \u22ef\u27e9 + 1, \u22ef\u27e9) \u2192 L :=\n  Binius.BinaryBasefold.fold L inst\u271d\u2078 inst\u271d\u2077 inst\u271d\u2076 \ud835\udd3dq inst\u271d\u2075 inst\u271d\u2074 h_Fq_char_prime h_Fq_card_gt_1 inst\u271d\u00b3 r inst\u271d\u00b2 \u03b2\n    h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i, \u22ef\u27e9 f_i r_chal\nnew_coeffs : Fin (2 ^ (\u2113 - \u2191i - 1)) \u2192 L := fun j => (1 - r_chal) * coeffs \u27e8\u2191j * 2, \u22ef\u27e9 + r_chal * coeffs \u27e8\u2191j * 2 + 1, \u22ef\u27e9\nP_i_plus_1 : Polynomial L := intermediateEvaluationPoly \ud835\udd3dq \u03b2 \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i + 1, \u22ef\u27e9 new_coeffs\n\u22a2 \u2191i + 1 < r",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean#L103"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "36e81d43b96c202862f59d144d8c79c2951e7d492ce6f4dce55b87df716a9cbb"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "classic-harmonic-osc-f",
        "commit": "9d369cbee11aa6fca52641685eae6b639cd7f97b",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PhysLean/StatisticalMechanics/CanonicalEnsemble/Basic.lean",
        "start_line": 232,
        "start_column": 2,
        "end_line": 232,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\n\ud835\udcd2 : CanonicalEnsemble \u03b9\ninst\u271d : Fintype \u03b9\nn : \u2115\nT : Temperature\n\u22a2 CanonicalEnsemble.meanEnergy (Fin n \u2192 \u03b9) (CanonicalEnsemble.nsmul \u03b9 n \ud835\udcd2) Pi.instFintype T =\n    \u2191n * CanonicalEnsemble.meanEnergy \u03b9 \ud835\udcd2 inst\u271d T",
        "url": "https://github.com/HEPLean/PhysLean/blob/9d369cbee11aa6fca52641685eae6b639cd7f97b/PhysLean/StatisticalMechanics/CanonicalEnsemble/Basic.lean#L232"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-06-28T08:23:46+00:00",
        "inclusion_date": "2025-07-16T23:02:13.531595+00:00"
      },
      "id": "c65e82dcc3cef84bbce2d5386d29571e3b974c603b655748a670df9af23b1b76"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 26,
        "start_column": 87,
        "end_line": 26,
        "end_column": 92
      },
      "debug_info": {
        "goal": "x y z w : \u2115\nht : 1 < x \u2227 1 < y \u2227 1 < z\nhw : 0 \u2264 w\nh0 : Real.log \u2191w / Real.log \u2191x = 24\nh1 : Real.log \u2191w / Real.log \u2191y = 40\nh2 : Real.log \u2191w / Real.log (\u2191x * \u2191y * \u2191z) = 12\n\u22a2 Real.log \u2191w / Real.log \u2191z = 60",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L26"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "ecaf85da5e766b6e36ff4b763aadb435c85e7bf0fc377fb5099fdecb424bb938"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_06.lean",
        "start_line": 73,
        "start_column": 33,
        "end_line": 73,
        "end_column": 38
      },
      "debug_info": {
        "goal": "q n : \u2115\nlamb : \u2102\na : \u211d := lamb.re\nb : \u211d := lamb.im\nh : lamb \u2208 primitiveRoots n \u2102\nh_lamb : lamb \u2260 1\n\u22a2 \u2016a\u2016 < 1",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_06.lean#L73"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2023-10-09T18:03:35+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "95390fca44a01066ed1896ab7477dd35671a85819e911a1ac0795115c15338a3"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/9SpecialMatrices.lean",
        "start_line": 438,
        "start_column": 10,
        "end_line": 438,
        "end_column": 15
      },
      "debug_info": {
        "goal": "R : Type u_2\nm : Type u_1\ninst\u271d\u00b2 : Fintype m\ninst\u271d\u00b9 : DecidableEq m\ninst\u271d : Field R\nA : Matrix m m R\nhA : A = -A.transpose\nhn : Odd (Fintype.card m)\n\u22a2 (-A).det = 0",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/9SpecialMatrices.lean#L438"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2023-10-11T15:16:39+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "269b9eb72c42e9674613ae9d4b599dacc42a832de207b84faa359b1dadb7b588"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 5 - 4, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "5d603cce10e4b14df55f1eee78e88d8aeca193063a2a2c6f389265ed4c73953c"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "master",
        "commit": "cfdae30afde6102dbe39fde8ff70e421bc0bb7d4",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Foundation/Modal/Kripke/Logic/GrzPoint3.lean",
        "start_line": 48,
        "start_column": 4,
        "end_line": 48,
        "end_column": 9
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 {\u03c6 : Formula \u2115},\n    Grz.miniCanonicalFrame Hilbert.GrzPoint3 \u03c6 \u2208 LO.Modal.Kripke.FrameClass.finite_connected_partial_order",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/cfdae30afde6102dbe39fde8ff70e421bc0bb7d4/Foundation/Modal/Kripke/Logic/GrzPoint3.lean#L48"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-28T04:08:18+09:00",
        "inclusion_date": "2025-06-27T03:33:47.593280+00:00"
      },
      "id": "15ec2a1eebdb36ca7e62f5d640a19d7a729d47c199e45fd32f03fe3297a19adf"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "6d700b1e66ff8e7d9ee9a98d181186427c706722",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/ToMathlib/RealInterpolation/InterpolatedExponents.lean",
        "start_line": 867,
        "start_column": 6,
        "end_line": 867,
        "end_column": 11
      },
      "debug_info": {
        "goal": "q\u2080 q\u2081 q t : ENNReal\nht : t \u2208 Ioo 0 1\nhq\u2080 : 0 < q\u2080\nhq\u2081 : 0 < q\u2081\nhq\u2080q\u2081 : q\u2080 \u2260 q\u2081\nhq : q\u207b\u00b9 = (1 - t) * q\u2080\u207b\u00b9 + t * q\u2081\u207b\u00b9\nhq\u2080' : q\u2080 \u2260 \u22a4\n\u22a2 q.toReal * (q\u2080\u207b\u00b9.toReal - ((1 - t).toReal * q\u2080\u207b\u00b9.toReal + t.toReal * q\u2081\u207b\u00b9.toReal)) =\n    -t.toReal * q.toReal * (q\u2081\u207b\u00b9.toReal - q\u2080\u207b\u00b9.toReal)",
        "url": "https://github.com/fpvandoorn/carleson/blob/6d700b1e66ff8e7d9ee9a98d181186427c706722/Carleson/ToMathlib/RealInterpolation/InterpolatedExponents.lean#L867"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-06-19T17:41:34+02:00",
        "inclusion_date": "2025-06-23T03:43:36.957287+00:00"
      },
      "id": "8d2ac2a773a52413e6bc458be73fc51f7ef9b89edeed069a4efe79d0c9a30505"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/HaarMeasure/DistribHaarChar/Basic.lean",
        "start_line": 101,
        "start_column": 45,
        "end_line": 101,
        "end_column": 50
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u2075 : Ring R\ninst\u271d\u2074 : MeasurableSpace R\ninst\u271d\u00b3 : TopologicalSpace R\ninst\u271d\u00b2 : BorelSpace R\ninst\u271d\u00b9 : IsTopologicalAddGroup R\ninst\u271d : LocallyCompactSpace R\n\u22a2 ContinuousConstSMul R\u02e3 R",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/HaarMeasure/DistribHaarChar/Basic.lean#L101"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-05-09T09:50:50+01:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "7d85522ef78131f7304e6bb1c0c072d9798b449db7bb30eb48a353715baf81ee"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "99a77d19845fb8083456331fd1256bf35a48f60c",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "LeanCamCombi/GrowthInGroups/Lecture4.lean",
        "start_line": 41,
        "start_column": 69,
        "end_line": 41,
        "end_column": 74
      },
      "debug_info": {
        "goal": "C : \u211d\nG : Type u_2\ninst\u271d\u00b9 : Group G\ninst\u271d : DecidableEq G\nS : Finset G\nhSsymm : S\u207b\u00b9 = S\nhSgen : \u2191(Subgroup.closure \u2191S) = Set.univ\nd : \u2115\nhS : \u2200 (n : \u2115), \u2191(S ^ n).card \u2264 C * \u2191n ^ d\n\u22a2 IsVirtuallyNilpotent G",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/99a77d19845fb8083456331fd1256bf35a48f60c/LeanCamCombi/GrowthInGroups/Lecture4.lean#L41"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-11-16T11:30:19+00:00",
        "inclusion_date": "2025-09-08T22:03:06.847248+00:00"
      },
      "id": "5e8609da15c96fe873956f559eb233baad68657c1aa89e44edc5a370472ccf07"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "5d2c803989e44af9fd233b1034045c8fc2ba5735",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 2106,
        "start_column": 6,
        "end_line": 2106,
        "end_column": 11
      },
      "debug_info": {
        "goal": "s a b e \u03c3 : \u211d\nf : \u2102 \u2192 \u2102\nhf : IntegrableOn (fun t => f (\u2191\u03c3 + \u2191t * I)) (Icc s e) volume\nhf_sa : IntervalIntegrable (fun t => f (\u2191\u03c3 + \u2191t * I)) volume a e\nhsa : s < a\nhab : a < b\nhbe : b < e\n\u22a2 Icc a e \u2286 Icc s e",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/5d2c803989e44af9fd233b1034045c8fc2ba5735/PrimeNumberTheoremAnd/MediumPNT.lean#L2106"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-06-27T13:50:08-04:00",
        "inclusion_date": "2025-07-01T03:15:09.382319+00:00"
      },
      "id": "09bb471958c8197117476abcad9f893af87365fb8197fe4c0075977dc4bf592a"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 89,
        "start_column": 54,
        "end_line": 89,
        "end_column": 59
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u2074 : AddCommGroup G\ninst\u271d\u00b3 : Fintype G\ninst\u271d\u00b2 : MeasurableSpace G\ninst\u271d\u00b9 : MeasurableSingletonClass G\nm : \u2115\nhm : m \u2265 2\nhtorsion : \u2200 (x : G), m \u2022 x = 0\n\u03a9 : Type u_2\ninst\u271d : MeasureSpace \u03a9\nX : \u03a9 \u2192 G\n\u22a2 \u2203 H \u03a9' m\u03a9 U, IsUniform (\u2191H) U \u2119 \u2227 d[X # U] \u2264 64 * \u2191m ^ 3 * d[X # X]",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L89"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-28T21:28:18-07:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "affce0b8ad784ae4fb1eb28a54faf85650fdcc5be46728fc59806179c398bedc"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "terminalCat",
        "commit": "a2f04a3f90bf6a62c9b984897f5eb40a46b5f735",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean",
        "start_line": 378,
        "start_column": 66,
        "end_line": 378,
        "end_column": 71
      },
      "debug_info": {
        "goal": "this : Unique (@SSet.Truncated.HomotopyCategory ((truncation 2).obj (stdSimplex.obj (SimplexCategory.mk 0)))) := \u22ef\n\u22a2 IsDiscrete (@SSet.Truncated.HomotopyCategory ((truncation 2).obj (stdSimplex.obj (SimplexCategory.mk 0))))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/a2f04a3f90bf6a62c9b984897f5eb40a46b5f735/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L378"
      },
      "metadata": {
        "blame_email_hash": "eaaeec08515d",
        "blame_date": "2025-06-04T17:28:16-04:00",
        "inclusion_date": "2025-06-05T03:12:28.661777+00:00"
      },
      "id": "8f95885f9753d73139215f99deca7beca2d270e9dbcb1b121379af638a5f0a6b"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 293,
        "start_column": 8,
        "end_line": 293,
        "end_column": 13
      },
      "debug_info": {
        "goal": "R : Type ?u.30509\ninst\u271d : CommRing R\n\u03b9 : Type\nI : \u03b9 \u2192 Ideal R\n\u22a2 \u2200 a \u2208 \u2a05 i, I i, (Pi.ringHom fun i => Quotient.mk (I i)) a = 0",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L293"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "752b0ddbdc0d37b5d25d413c8685defec931c96810b98f6c2d2f83c08eeacd27"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean",
        "start_line": 105,
        "start_column": 10,
        "end_line": 105,
        "end_column": 15
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2077 : Field L\ninst\u271d\u2076 : Fintype L\ninst\u271d\u2075 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2074 : Field \ud835\udd3dq\ninst\u271d\u00b3 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u00b2 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b9 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 : \u2115\ninst\u271d : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\ni : Fin \u2113\ncoeffs : Fin (2 ^ (\u2113 - \u2191i)) \u2192 L\nr_chal : L\nP_i\u271d : Polynomial L := intermediateEvaluationPoly \ud835\udd3dq \u03b2 \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i, \u22ef\u27e9 coeffs\nf_i\u271d : \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i, \u22ef\u27e9) \u2192 L :=\n  fun x => Polynomial.eval (\u2191x) P_i\u271d\nf_i_plus_1\u271d : \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191\u27e8\u2191i, \u22ef\u27e9 + 1, \u22ef\u27e9) \u2192 L :=\n  Binius.BinaryBasefold.fold L inst\u271d\u2077 inst\u271d\u2076 inst\u271d\u2075 \ud835\udd3dq inst\u271d\u2074 inst\u271d\u00b3 h_Fq_char_prime h_Fq_card_gt_1 inst\u271d\u00b2 r inst\u271d\u00b9 \u03b2\n    h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i, \u22ef\u27e9 f_i\u271d r_chal\nnew_coeffs\u271d : Fin (2 ^ (\u2113 - \u2191i - 1)) \u2192 L := fun j => (1 - r_chal) * coeffs \u27e8\u2191j * 2, \u22ef\u27e9 + r_chal * coeffs \u27e8\u2191j * 2 + 1, \u22ef\u27e9\nP_i_plus_1\u271d : Polynomial L := intermediateEvaluationPoly \ud835\udd3dq \u03b2 \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i + 1, \u22ef\u27e9 new_coeffs\u271d\ny\u271d : \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i + 1, \u22ef\u27e9)\n\u22a2 f_i_plus_1\u271d y\u271d = Polynomial.eval (\u2191y\u271d) P_i_plus_1\u271d",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean#L105"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "2ef690baa0e817e96c1df486b14d18345d5c5a1e8dab6e9adad21cfa5d5a7db6"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "classic-harmonic-osc-f",
        "commit": "9d369cbee11aa6fca52641685eae6b639cd7f97b",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PhysLean/StatisticalMechanics/CanonicalEnsemble/Basic.lean",
        "start_line": 296,
        "start_column": 47,
        "end_line": 296,
        "end_column": 52
      },
      "debug_info": {
        "goal": "\u03b9 : Type\n\ud835\udcd2 : CanonicalEnsemble \u03b9\ninst\u271d : Fintype \u03b9\nn : \u2115\nT : Temperature\n\u22a2 CanonicalEnsemble.entropy (Fin n \u2192 \u03b9) (CanonicalEnsemble.nsmul \u03b9 n \ud835\udcd2) Pi.instFintype T =\n    \u2191n * CanonicalEnsemble.entropy \u03b9 \ud835\udcd2 inst\u271d T",
        "url": "https://github.com/HEPLean/PhysLean/blob/9d369cbee11aa6fca52641685eae6b639cd7f97b/PhysLean/StatisticalMechanics/CanonicalEnsemble/Basic.lean#L296"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-06-28T08:23:46+00:00",
        "inclusion_date": "2025-07-16T23:02:13.531595+00:00"
      },
      "id": "42f3fb96256eb9622ea6a8298e296a7c322bdc560f51bb5e9442ed883ae22310"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 29,
        "start_column": 122,
        "end_line": 29,
        "end_column": 127
      },
      "debug_info": {
        "goal": "\u22a2 {x \u2208 Finset.range 10000 | \u00acEven x}.prod id = factorial 10000 / (2 ^ 5000 * factorial 5000)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L29"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "5651ce4e4bd8713682df9a5a584c7ea30d394b75fa2ee2c7f2d7b85fa3be94e1"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_06.lean",
        "start_line": 79,
        "start_column": 38,
        "end_line": 79,
        "end_column": 43
      },
      "debug_info": {
        "goal": "q n : \u2115\nlamb : \u2102\na : \u211d := lamb.re\nb : \u211d := lamb.im\nh : lamb \u2208 primitiveRoots n \u2102\nh_lamb : lamb \u2260 1\nh_a_lt_one : \u2016a\u2016 < 1\n\u22a2 \u2016\u2191q - lamb\u2016 ^ 2 = \u2016\u2191q - \u2191a - I * \u2191b\u2016 ^ 2",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_06.lean#L79"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2023-10-09T18:03:35+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "bed302447a7bb28a45cc504e67ba4b12fcec24dba3b279363be7754ee7071ff4"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/3Inverses.lean",
        "start_line": 157,
        "start_column": 2,
        "end_line": 157,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b9 : Fintype n\ninst\u271d : DecidableEq n\nA : Matrix n n \u2102\n\u22a2 (1 + A\u207b\u00b9)\u207b\u00b9 = A * (A + 1)\u207b\u00b9",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/3Inverses.lean#L157"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2023-10-11T15:16:39+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "debaec1bd98f4a11a5b1c68997df9dddd41a9d0cbde80a7caf33ddb81d586020"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 6 - 4, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "c85747599a537c6ffca3bd2bbfd3b443d0b8d68d9cb0ad78f42756c5469c2373"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "master",
        "commit": "765aebbfbd13123f5a3a25a84c921a0a9c4ef573",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Foundation/Modal/Kripke/Logic/GLPoint3.lean",
        "start_line": 33,
        "start_column": 101,
        "end_line": 33,
        "end_column": 106
      },
      "debug_info": {
        "goal": "\u22a2 Complete Hilbert.GLPoint3 LO.Modal.Kripke.FrameClass.finite_strict_linear_order",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/765aebbfbd13123f5a3a25a84c921a0a9c4ef573/Foundation/Modal/Kripke/Logic/GLPoint3.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-28T04:08:18+09:00",
        "inclusion_date": "2025-06-17T03:52:35.650219+00:00"
      },
      "id": "d64e85b163a0deb3a4ac5c9865aa3d3457dbe9443a10e525dfbdfa47f1353b28"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "6d700b1e66ff8e7d9ee9a98d181186427c706722",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/ToMathlib/RealInterpolation/InterpolatedExponents.lean",
        "start_line": 890,
        "start_column": 6,
        "end_line": 890,
        "end_column": 11
      },
      "debug_info": {
        "goal": "q\u2080 p\u2081 q\u2081 q t : ENNReal\nht : t \u2208 Ioo 0 1\nhq\u2080 : 0 < q\u2080\nhq\u2081 : 0 < q\u2081\nhq\u2080q\u2081 : q\u2080 \u2260 q\u2081\nhq : q\u207b\u00b9 = (1 - t) * q\u2080\u207b\u00b9 + t * q\u2081\u207b\u00b9\nhq\u2080' : q\u2080 \u2260 \u22a4\n\u22a2 p\u2081\u207b\u00b9.toReal * q.toReal * (q\u2080\u207b\u00b9.toReal - ((1 - t).toReal * q\u2080\u207b\u00b9.toReal + t.toReal * q\u2081\u207b\u00b9.toReal)) =\n    -t.toReal * p\u2081\u207b\u00b9.toReal * q.toReal * (q\u2081\u207b\u00b9.toReal - q\u2080\u207b\u00b9.toReal)",
        "url": "https://github.com/fpvandoorn/carleson/blob/6d700b1e66ff8e7d9ee9a98d181186427c706722/Carleson/ToMathlib/RealInterpolation/InterpolatedExponents.lean#L890"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-06-19T17:41:34+02:00",
        "inclusion_date": "2025-06-23T03:43:36.957287+00:00"
      },
      "id": "36fe61e211cffaaefd938e361d30cc02d51284ac4ee83ea1a25a43a89c71db84"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/HaarMeasure/DistribHaarChar/AdeleRing.lean",
        "start_line": 20,
        "start_column": 75,
        "end_line": 20,
        "end_column": 80
      },
      "debug_info": {
        "goal": "K : Type u_1\ninst\u271d\u2074 : Field K\ninst\u271d\u00b3 : NumberField K\nB : Type u_2\ninst\u271d\u00b2 : Ring B\ninst\u271d\u00b9 : Algebra K B\ninst\u271d : FiniteDimensional K B\n\u22a2 Module.Finite (AdeleRing (RingOfIntegers K) K) (TensorProduct K B (AdeleRing (RingOfIntegers K) K))",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/HaarMeasure/DistribHaarChar/AdeleRing.lean#L20"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-05-09T09:50:50+01:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "db7db512ab55ec27353684d62fcc1989f866fbaaed9c9d685714fe84d507ae4a"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/PlainCombi/VanDenBergKesten.lean",
        "start_line": 97,
        "start_column": 72,
        "end_line": 97,
        "end_column": 77
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\ninst\u271d\u00b9 : DecidableEq \u03b1\ninst\u271d : Fintype \u03b1\n\ud835\udc9c \u212c : Finset (Finset \u03b1)\n\u22a2 2 ^ Fintype.card \u03b1 * #(\ud835\udc9c \u25a1 \u212c) \u2264 #\ud835\udc9c * #\u212c",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/PlainCombi/VanDenBergKesten.lean#L97"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-10-21T08:29:20+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "0fcbdc47a490598239e7f1e78eaa58164a051ca492662eb6f40959b437097dc1"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "5d2c803989e44af9fd233b1034045c8fc2ba5735",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 2108,
        "start_column": 4,
        "end_line": 2108,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case intro.intro\ns a b e \u03c3 : \u211d\nf : \u2102 \u2192 \u2102\nhf : IntegrableOn (fun t => f (\u2191\u03c3 + \u2191t * I)) (Icc s e) volume\nhf_sa : IntervalIntegrable (fun t => f (\u2191\u03c3 + \u2191t * I)) volume a e\nhsa : s < a\nhab : a < b\nhbe : b < e\nsa_subset_sb : Icc a e \u2286 Icc s e\n\u22a2 IntervalIntegrable (fun t => f (\u2191\u03c3 + \u2191t * I)) volume a e",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/5d2c803989e44af9fd233b1034045c8fc2ba5735/PrimeNumberTheoremAnd/MediumPNT.lean#L2108"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-06-27T13:50:08-04:00",
        "inclusion_date": "2025-07-01T03:15:09.382319+00:00"
      },
      "id": "2fd7447c4b606f75ee93bdf20717b28ab7b5cfd7fc9e93630af1784da50ed3f3"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "58ff9ddb3f6bc3860fb0316cc210fca5d488ba62",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 89,
        "start_column": 54,
        "end_line": 89,
        "end_column": 59
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u2074 : AddCommGroup G\ninst\u271d\u00b3 : Fintype G\ninst\u271d\u00b2 : MeasurableSpace G\ninst\u271d\u00b9 : MeasurableSingletonClass G\nm : \u2115\nhm : m \u2265 2\nhtorsion : \u2200 (x : G), m \u2022 x = 0\n\u03a9 : Type u_2\ninst\u271d : MeasureSpace \u03a9\nX : \u03a9 \u2192 G\n\u22a2 \u2203 H \u03a9' m\u03a9 U, IsUniform (\u2191H) U volume \u2227 d[X # U] \u2264 64 * \u2191m ^ 3 * d[X # X]",
        "url": "https://github.com/teorth/pfr/blob/58ff9ddb3f6bc3860fb0316cc210fca5d488ba62/PFR/TorsionEndgame.lean#L89"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-28T21:28:18-07:00",
        "inclusion_date": "2025-07-05T05:06:27.171280+00:00"
      },
      "id": "50467bd6a44b722014c2f8224f5b9bac37883ba6f8db6d11e7d5af730dd613e6"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "jt496_blowups",
        "commit": "027c0cfa03753148e0b5d67ebe558b46b0fe635b",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Combinatorics/SimpleGraph/BlowupGraph.lean",
        "start_line": 80,
        "start_column": 6,
        "end_line": 80,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case h.e'_1\n\u03b9 : Type u_1\nH : SimpleGraph \u03b9\nV : \u03b9 \u2192 Type u_2\nf : (i : \u03b9) \u2192 V i\ne : \u2191(H.blowupGraph V).edgeSet\n\u22a2 (Quot.out \u2191(cast \u22ef \u27e8s((Quot.out \u2191(cast \u22ef e)).1.fst, (Quot.out \u2191(cast \u22ef e)).2.fst), \u22ef\u27e9)).1 = (Quot.out \u2191e).1.fst",
        "url": "https://github.com/leanprover-community/mathlib4/blob/027c0cfa03753148e0b5d67ebe558b46b0fe635b/Mathlib/Combinatorics/SimpleGraph/BlowupGraph.lean#L80"
      },
      "metadata": {
        "blame_email_hash": "8580f8c44a06",
        "blame_date": "2025-06-04T21:21:20+01:00",
        "inclusion_date": "2025-06-05T03:07:14.517524+00:00"
      },
      "id": "582445c341b48b1af003c25295e59c3a7c44343aac577daa6779c008e9ce0ffa"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
        "start_line": 54,
        "start_column": 2,
        "end_line": 54,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\n\u22a2 IndepSet A B \u2192 IndepSet B A",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L54"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "2f9731105fae795b1ca7739f54772f72f05c51adec11b26fa333257973f8fd31"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean",
        "start_line": 220,
        "start_column": 48,
        "end_line": 220,
        "end_column": 53
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Fintype L\ninst\u271d\u2076 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2075 : Field \ud835\udd3dq\ninst\u271d\u2074 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u00b3 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b2 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u00b9 : NeZero \u03d1\ninst\u271d : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\ni : Fin (\u2113 + 1)\nf :\n  Binius.BinaryBasefold.OracleFunction L inst\u271d\u2078 inst\u271d\u2077 inst\u271d\u2076 \ud835\udd3dq inst\u271d\u2075 inst\u271d\u2074 h_Fq_char_prime h_Fq_card_gt_1 inst\u271d\u00b3 r\n    inst\u271d\u00b2 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i, \u22ef\u27e9\nh_within_radius : failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)\ndomain_size : \u2115 := Fintype.card \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i, \u22ef\u27e9)\nk : \u2115 := 2 ^ (\u2113 - \u2191i)\ne : \u2115 := (domain_size - k - 1) / 2\ndomain_to_fin : \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i, \u22ef\u27e9) \u2243\n  Fin domain_size :=\n  sorry\n\u03c9s : Fin domain_size \u2192 L := fun j => \u2191(domain_to_fin.symm j)\nf_vals : Fin domain_size \u2192 L := fun j => @f (domain_to_fin.symm j)\n\u22a2 NeZero domain_size",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean#L220"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "f59a87d2976ba7187a65fbf5044d74f6ddf723f90815d90502230734dc8e4acf"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "classic-harmonic-osc-f",
        "commit": "9d369cbee11aa6fca52641685eae6b639cd7f97b",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PhysLean/StatisticalMechanics/CanonicalEnsemble/Basic.lean",
        "start_line": 320,
        "start_column": 71,
        "end_line": 320,
        "end_column": 76
      },
      "debug_info": {
        "goal": "\u03b9 : Type\n\ud835\udcd2 : CanonicalEnsemble \u03b9\ninst\u271d : Fintype \u03b9\nn : \u2115\nT : Temperature\n\u22a2 CanonicalEnsemble.helmholtzFreeEnergy (Fin n \u2192 \u03b9) (CanonicalEnsemble.nsmul \u03b9 n \ud835\udcd2) Pi.instFintype T =\n    \u2191n * CanonicalEnsemble.helmholtzFreeEnergy \u03b9 \ud835\udcd2 inst\u271d T",
        "url": "https://github.com/HEPLean/PhysLean/blob/9d369cbee11aa6fca52641685eae6b639cd7f97b/PhysLean/StatisticalMechanics/CanonicalEnsemble/Basic.lean#L320"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-06-28T08:23:46+00:00",
        "inclusion_date": "2025-07-16T23:02:13.531595+00:00"
      },
      "id": "e87cd23b6b2653ed170c84507b2fe93731ff63e436baaa95843a9320861e6610"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 36,
        "start_column": 5,
        "end_line": 36,
        "end_column": 10
      },
      "debug_info": {
        "goal": "a b : \u211d\nh\u2081 : a * b = 180\nh\u2082 : 2 * (a + b) = 54\n\u22a2 a ^ 2 + b ^ 2 = 369",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L36"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "8ba1353d95d2b5ed51419221bb9f756667dda535c98a6b69056d8c65420ec0c3"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_06.lean",
        "start_line": 80,
        "start_column": 40,
        "end_line": 80,
        "end_column": 45
      },
      "debug_info": {
        "goal": "q n : \u2115\nlamb : \u2102\na : \u211d := lamb.re\nb : \u211d := lamb.im\nh : lamb \u2208 primitiveRoots n \u2102\nh_lamb : lamb \u2260 1\nh_a_lt_one : \u2016a\u2016 < 1\n\u22a2 \u2016\u2191q - \u2191a - I * \u2191b\u2016 ^ 2 = \u2016\u2191q - \u2191a\u2016 ^ 2 + \u2016b\u2016 ^ 2",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_06.lean#L80"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2023-10-09T18:03:35+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "3523afaa8e8f9ab6fda1caf0cee1aa906c451180e0ece1e5308cde96ba107167"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/3Inverses.lean",
        "start_line": 160,
        "start_column": 2,
        "end_line": 160,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b9 : Fintype n\ninst\u271d : DecidableEq n\nA B : Matrix n n \u2102\n\u22a2 (A + B.transpose * B)\u207b\u00b9 * B = A\u207b\u00b9 * B * (1 + B.transpose * A\u207b\u00b9 * B)\u207b\u00b9",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/3Inverses.lean#L160"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2023-10-11T15:16:39+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "e78284de87bc7ed31bceb5f3adbeeb42c84426cad002880640ea174150fd02be"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 7 - 4, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "4c24939fc4bdb84e88077c67f9ad18f0da6ab223108218504392b3050f5be35c"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "remove-lint-warnings",
        "commit": "b576acfceb264c4d9e22dd9de14566bf6767fa6b",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "Foundation/Modal/Kripke/Logic/GrzPoint3.lean",
        "start_line": 48,
        "start_column": 4,
        "end_line": 48,
        "end_column": 9
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 {\u03c6 : Formula \u2115},\n    Grz.Kripke.miniCanonicalFrame Logic.GrzPoint3 \u03c6 \u2208 LO.Modal.Kripke.FrameClass.finite_connected_partial_order",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/b576acfceb264c4d9e22dd9de14566bf6767fa6b/Foundation/Modal/Kripke/Logic/GrzPoint3.lean#L48"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-28T04:08:18+09:00",
        "inclusion_date": "2025-07-07T04:01:35.075616+00:00"
      },
      "id": "fe3c9ac4b2c43484efa6f7bcbb6bc3f9e08fb8b6f48492d76e748540e5f99606"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "e4c6e71e5795569df9e9bdbfe4b136897784b355",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/ToMathlib/RealInterpolation/InterpolatedExponents.lean",
        "start_line": 915,
        "start_column": 2,
        "end_line": 915,
        "end_column": 7
      },
      "debug_info": {
        "goal": "q\u2080 q\u2081 q t : ENNReal\nht : t \u2208 Ioo 0 1\nhq\u2080 : 0 < q\u2080\nhq\u2081 : 0 < q\u2081\nhq\u2080q\u2081 : q\u2080 \u2260 q\u2081\nhq : q\u207b\u00b9 = (1 - t) * q\u2080\u207b\u00b9 + t * q\u2081\u207b\u00b9\nhq\u2081' : q\u2081 \u2260 \u22a4\n\u22a2 (1 - t).toReal * q.toReal = t.toReal * q.toReal",
        "url": "https://github.com/fpvandoorn/carleson/blob/e4c6e71e5795569df9e9bdbfe4b136897784b355/Carleson/ToMathlib/RealInterpolation/InterpolatedExponents.lean#L915"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-06-19T17:41:34+02:00",
        "inclusion_date": "2025-06-24T03:23:45.994996+00:00"
      },
      "id": "1a43857fa745953b966ee01fc13bc65bb1745dd7f4cb0a2a1bd65664602712b6"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/HaarMeasure/DistribHaarChar/AdeleRing.lean",
        "start_line": 26,
        "start_column": 61,
        "end_line": 26,
        "end_column": 66
      },
      "debug_info": {
        "goal": "K : Type u_1\ninst\u271d\u2074 : Field K\ninst\u271d\u00b3 : NumberField K\nB : Type u_2\ninst\u271d\u00b2 : Ring B\ninst\u271d\u00b9 : Algebra K B\ninst\u271d : FiniteDimensional K B\n\u22a2 LocallyCompactSpace (TensorProduct K B (AdeleRing (RingOfIntegers K) K))",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/HaarMeasure/DistribHaarChar/AdeleRing.lean#L26"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-05-09T09:50:50+01:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "a3092531ced6921a475e0ae609640140f10e22b8ab11b868e07fe4d34fc8b9d2"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "99a77d19845fb8083456331fd1256bf35a48f60c",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "LeanCamCombi/PlainCombi/VanDenBergKesten.lean",
        "start_line": 97,
        "start_column": 72,
        "end_line": 97,
        "end_column": 77
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\ninst\u271d\u00b9 : DecidableEq \u03b1\ninst\u271d : Fintype \u03b1\n\ud835\udc9c \u212c : Finset (Finset \u03b1)\n\u22a2 2 ^ Fintype.card \u03b1 * card (@Finset.certificator (Finset \u03b1) booleanAlgebra \ud835\udc9c \u212c) \u2264 \ud835\udc9c.card * \u212c.card",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/99a77d19845fb8083456331fd1256bf35a48f60c/LeanCamCombi/PlainCombi/VanDenBergKesten.lean#L97"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-10-21T08:29:20+00:00",
        "inclusion_date": "2025-09-08T22:03:06.847248+00:00"
      },
      "id": "d944d3e0174944bd1abed9326f7ff701e971f764a7e2b3ccfb4c60fa8b44d375"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "5d2c803989e44af9fd233b1034045c8fc2ba5735",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 2114,
        "start_column": 4,
        "end_line": 2114,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case intro.intro\ns a b e \u03c3 : \u211d\nf : \u2102 \u2192 \u2102\nhf : IntegrableOn (fun t => f (\u2191\u03c3 + \u2191t * I)) (Icc s e) volume\nhf_sa hf_ae : IntervalIntegrable (fun t => f (\u2191\u03c3 + \u2191t * I)) volume a e\nhsa : s < a\nhab : a < b\nhbe : b < e\nsa_subset_sb : Icc a b \u2286 Icc a e\n\u22a2 IntervalIntegrable (fun t => f (\u2191\u03c3 + \u2191t * I)) volume a b",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/5d2c803989e44af9fd233b1034045c8fc2ba5735/PrimeNumberTheoremAnd/MediumPNT.lean#L2114"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-06-27T13:50:08-04:00",
        "inclusion_date": "2025-07-01T03:15:09.382319+00:00"
      },
      "id": "48d16055c3081ebfcb8f2bf0e188f31d000ba608774fb713eb77aabd123bb5bf"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/MoreRuzsaDist.lean",
        "start_line": 760,
        "start_column": 62,
        "end_line": 760,
        "end_column": 67
      },
      "debug_info": {
        "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\n\u03a9 : Type u_9\nh\u03a9 : MeasureSpace \u03a9\nX : Fin m \u2192 \u03a9 \u2192 G\nh_indep : iIndepFun X \u2119\n\u22a2 D[X ; fun x => h\u03a9] = H[\u2211 i, X i] - (\u2211 i, H[X i]) / \u2191m",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L760"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-22T09:31:46-07:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "53952a34d0aa5bb64a0888247bda3172fe2169cc81bf4d400733ade08457c553"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "jt496_blowups",
        "commit": "027c0cfa03753148e0b5d67ebe558b46b0fe635b",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Combinatorics/SimpleGraph/BlowupGraph.lean",
        "start_line": 83,
        "start_column": 14,
        "end_line": 83,
        "end_column": 19
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\nH : SimpleGraph \u03b9\nV : \u03b9 \u2192 Type u_2\nf : (i : \u03b9) \u2192 V i\n\u22a2 Function.LeftInverse sorry fun e =>\n    \u27e8\u22ef.mpr \u27e8s((Quot.out \u2191(\u22ef.mp e)).1.fst, (Quot.out \u2191(\u22ef.mp e)).2.fst), \u22ef\u27e9, (\u22ef.mpr (Quot.out \u2191e).1.snd, sorry)\u27e9",
        "url": "https://github.com/leanprover-community/mathlib4/blob/027c0cfa03753148e0b5d67ebe558b46b0fe635b/Mathlib/Combinatorics/SimpleGraph/BlowupGraph.lean#L83"
      },
      "metadata": {
        "blame_email_hash": "8580f8c44a06",
        "blame_date": "2025-06-04T21:21:20+01:00",
        "inclusion_date": "2025-06-05T03:07:14.517524+00:00"
      },
      "id": "54edd5a2d7e66839e1ceb939e3f45f758bcbd036f6a7e6af20d253d9a04172ef"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
        "start_line": 64,
        "start_column": 2,
        "end_line": 64,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\nhA : MeasurableSet A\nhB : MeasurableSet B\n\u22a2 IndepSet A B \u2192 IndepSet A B\u1d9c",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L64"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "ddadc8968c74f61b562b9d11dc06f3747e3e596bfe5d52314d62ebacd1c24b2b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean",
        "start_line": 227,
        "start_column": 4,
        "end_line": 227,
        "end_column": 9
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Fintype L\ninst\u271d\u2076 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2075 : Field \ud835\udd3dq\ninst\u271d\u2074 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u00b3 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b2 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u00b9 : NeZero \u03d1\ninst\u271d : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\ni : Fin (\u2113 + 1)\nf :\n  Binius.BinaryBasefold.OracleFunction L inst\u271d\u2078 inst\u271d\u2077 inst\u271d\u2076 \ud835\udd3dq inst\u271d\u2075 inst\u271d\u2074 h_Fq_char_prime h_Fq_card_gt_1 inst\u271d\u00b3 r\n    inst\u271d\u00b2 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i, \u22ef\u27e9\nh_within_radius : failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)\ndomain_size : \u2115 := Fintype.card \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i, \u22ef\u27e9)\nk : \u2115 := 2 ^ (\u2113 - \u2191i)\ne : \u2115 := (domain_size - k - 1) / 2\ndomain_to_fin : \u21a5(sDomain \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i, \u22ef\u27e9) \u2243\n  Fin domain_size :=\n  sorry\n\u03c9s : Fin domain_size \u2192 L := fun j => \u2191(domain_to_fin.symm j)\nf_vals : Fin domain_size \u2192 L := fun j => @f (domain_to_fin.symm j)\ndomain_neZero : NeZero domain_size\nberlekamp_welch_result : Option (Polynomial L) := decoder e k \u03c9s f_vals\nh : berlekamp_welch_result = none\n\u22a2 False",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean#L227"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "ca33f1d1917c031ec91efe5ba5f859f7a52de8f972aacd96c7ab886b2ff5af83"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "master",
        "commit": "a28c2a770d0c267b697ceb5bd2a6a58d3cb1ad19",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PhysLean/ClassicalMechanics/HarmonicOscillator/Solution.lean",
        "start_line": 350,
        "start_column": 23,
        "end_line": 350,
        "end_column": 28
      },
      "debug_info": {
        "goal": "S : HarmonicOscillator\nIC : ClassicalMechanics.HarmonicOscillator.InitialConditions\nx : Time \u2192 Space 1\n\u22a2 EquationOfMotion x \u2227\n      x 0 = ClassicalMechanics.HarmonicOscillator.InitialConditions.x\u2080 IC \u2227\n        deriv x 0 = ClassicalMechanics.HarmonicOscillator.InitialConditions.v\u2080 IC \u2192\n    x = ClassicalMechanics.HarmonicOscillator.sol S IC",
        "url": "https://github.com/HEPLean/PhysLean/blob/a28c2a770d0c267b697ceb5bd2a6a58d3cb1ad19/PhysLean/ClassicalMechanics/HarmonicOscillator/Solution.lean#L350"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-06-28T08:23:46+00:00",
        "inclusion_date": "2025-07-22T23:42:00.157211+00:00"
      },
      "id": "4c11169d26a700af1f33dca01d1d6b9499d69fa772bc86e63c14da361297e47d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 50,
        "start_column": 31,
        "end_line": 50,
        "end_column": 36
      },
      "debug_info": {
        "goal": "m n : \u211d\nk : \u2115\na : \u2115 \u2192 \u211d\ny : \u211d \u2192 \u211d\nh\u2080 : 0 < k\nh\u2081 : \u2200 (x : \u211d), y x = \u2211 i \u2208 Finset.range k, cos (a i + x) / 2 ^ i\nh\u2082 : y m = 0\nh\u2083 : y n = 0\n\u22a2 \u2203 t, m - n = \u2191t * Real.pi",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L50"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "256c3cf7bf03516e0b468ecebe89b7710c1763b9990284968f207601b429068a"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_06.lean",
        "start_line": 81,
        "start_column": 52,
        "end_line": 81,
        "end_column": 57
      },
      "debug_info": {
        "goal": "q n : \u2115\nlamb : \u2102\na : \u211d := lamb.re\nb : \u211d := lamb.im\nh : lamb \u2208 primitiveRoots n \u2102\nh_lamb : lamb \u2260 1\nh_a_lt_one : \u2016a\u2016 < 1\n\u22a2 \u2016\u2191q - \u2191a\u2016 ^ 2 + \u2016b\u2016 ^ 2 = \u2191q ^ 2 - 2 * \u2016a\u2016 * \u2191q + \u2016a\u2016 ^ 2 + \u2016b\u2016 ^ 2",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_06.lean#L81"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2023-10-09T18:03:35+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "de7ab4e69f403a8b6f5b93e7a894c33ce95f0c5d5b33b795e580fd2f01023466"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/3Inverses.lean",
        "start_line": 171,
        "start_column": 2,
        "end_line": 171,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b9 : Fintype n\ninst\u271d : DecidableEq n\nA B : Matrix n n \u2102\n\u22a2 A - A * (A + B)\u207b\u00b9 * A = B - B * (A + B)\u207b\u00b9 * B",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/3Inverses.lean#L171"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2023-10-11T15:16:39+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "9290c8842b37045dc818131f054115f6cf522584dd3ca23d569bba08cfc50e42"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 8 - 4, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "3ba55cfc35d1b19ae77790c8e836b2c20bff6ad49190ba76f56b8d7c1c41f910"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "zfc-axiom",
        "commit": "47bca9e8b9346cf4297b1dd73f39951c727612fd",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Foundation/Modal/Kripke/Logic/GrzPoint3.lean",
        "start_line": 59,
        "start_column": 4,
        "end_line": 59,
        "end_column": 9
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 {\u03c6 : Formula \u2115},\n    Hilbert.Grz.Kripke.miniCanonicalFrame Hilbert.GrzPoint3 \u03c6 \u2208 LO.Modal.Kripke.FrameClass.finite_GrzPoint3",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/47bca9e8b9346cf4297b1dd73f39951c727612fd/Foundation/Modal/Kripke/Logic/GrzPoint3.lean#L59"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-28T04:08:18+09:00",
        "inclusion_date": "2025-09-18T03:51:26.203441+00:00"
      },
      "id": "397ab3960b086a5c5d40bfe30a1b4d6fb849c6e2f9755558d791a587aa6be7a2"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "e4c6e71e5795569df9e9bdbfe4b136897784b355",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/ToMathlib/RealInterpolation/InterpolatedExponents.lean",
        "start_line": 922,
        "start_column": 2,
        "end_line": 922,
        "end_column": 7
      },
      "debug_info": {
        "goal": "q\u2080 q\u2081 q t : ENNReal\nht : t \u2208 Ioo 0 1\nhq\u2080 : 0 < q\u2080\nhq\u2081 : 0 < q\u2081\nhq\u2080q\u2081 : q\u2080 \u2260 q\u2081\nhq : q\u207b\u00b9 = (1 - t) * q\u2080\u207b\u00b9 + t * q\u2081\u207b\u00b9\nhq\u2081' : q\u2081 \u2260 \u22a4\n\u22a2 -(-t.toReal * q.toReal) = (1 - t).toReal * q.toReal",
        "url": "https://github.com/fpvandoorn/carleson/blob/e4c6e71e5795569df9e9bdbfe4b136897784b355/Carleson/ToMathlib/RealInterpolation/InterpolatedExponents.lean#L922"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-06-19T17:41:34+02:00",
        "inclusion_date": "2025-06-24T03:23:45.994996+00:00"
      },
      "id": "9f7c53c60e463f1cc843bd2e6d782f7c469d2fa5397cbbd9173e87c00ab07b98"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/HaarMeasure/DistribHaarChar/AdeleRing.lean",
        "start_line": 37,
        "start_column": 85,
        "end_line": 37,
        "end_column": 90
      },
      "debug_info": {
        "goal": "K : Type u_1\ninst\u271d\u2076 : Field K\ninst\u271d\u2075 : NumberField K\nB : Type u_2\ninst\u271d\u2074 : Ring B\ninst\u271d\u00b3 : Algebra K B\ninst\u271d\u00b2 : FiniteDimensional K B\ninst\u271d\u00b9 : MeasurableSpace (TensorProduct K B (AdeleRing (RingOfIntegers K) K))\ninst\u271d : BorelSpace (TensorProduct K B (AdeleRing (RingOfIntegers K) K))\nb : B\u02e3\n\u22a2 (Units.map \u2191Algebra.TensorProduct.includeLeftRingHom) b \u2208\n    distribHaarChar.ker (TensorProduct K B (AdeleRing (RingOfIntegers K) K))",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/HaarMeasure/DistribHaarChar/AdeleRing.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-05-09T09:50:50+01:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "446f40e38e90fdf65e3c32b7d0d7074c6c7c41cfa85d8c71916d9cfe0eaf1b5a"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "99a77d19845fb8083456331fd1256bf35a48f60c",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 38,
        "start_column": 2,
        "end_line": 38,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\nG : SimpleGraph \u03b1\na : \u03b1\nw : G.Walk a a\nhw : Odd w.length\n\u22a2 \u2203 b p, Odd (\u2191p).length",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/99a77d19845fb8083456331fd1256bf35a48f60c/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L38"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-09-08T22:03:06.847248+00:00"
      },
      "id": "23c1317f02dd5d543e37640070f9494e06cd71b7ed69237d35c4b0e5bd351e3a"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "5d2c803989e44af9fd233b1034045c8fc2ba5735",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 2120,
        "start_column": 4,
        "end_line": 2120,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case intro.intro\ns a b e \u03c3 : \u211d\nf : \u2102 \u2192 \u2102\nhf : IntegrableOn (fun t => f (\u2191\u03c3 + \u2191t * I)) (Icc s e) volume\nhf_sa hf_ae : IntervalIntegrable (fun t => f (\u2191\u03c3 + \u2191t * I)) volume a e\nhf_ab : IntervalIntegrable (fun t => f (\u2191\u03c3 + \u2191t * I)) volume a b\nhsa : s < a\nhab : a < b\nhbe : b < e\nsa_subset_sb : Icc b e \u2286 Icc a e\n\u22a2 IntervalIntegrable (fun t => f (\u2191\u03c3 + \u2191t * I)) volume b e",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/5d2c803989e44af9fd233b1034045c8fc2ba5735/PrimeNumberTheoremAnd/MediumPNT.lean#L2120"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-06-27T13:50:08-04:00",
        "inclusion_date": "2025-07-01T03:15:09.382319+00:00"
      },
      "id": "5f68a19fa1bb1c04a6361767d7ac28107385077ec01e142b343295539d11cdbc"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "58ff9ddb3f6bc3860fb0316cc210fca5d488ba62",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PFR/MoreRuzsaDist.lean",
        "start_line": 763,
        "start_column": 62,
        "end_line": 763,
        "end_column": 67
      },
      "debug_info": {
        "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\n\u03a9 : Type u_9\nh\u03a9 : MeasureSpace \u03a9\nX : Fin m \u2192 \u03a9 \u2192 G\nh_indep : iIndepFun X volume\n\u22a2 @multiDist G hG inst\u271d\u00b2 m (fun x => \u03a9) (fun x => h\u03a9) X = H[\u2211 i, X i] - (\u2211 i, H[X i]) / \u2191m",
        "url": "https://github.com/teorth/pfr/blob/58ff9ddb3f6bc3860fb0316cc210fca5d488ba62/PFR/MoreRuzsaDist.lean#L763"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-22T09:31:46-07:00",
        "inclusion_date": "2025-07-05T05:06:27.171280+00:00"
      },
      "id": "6fb6f36bf9c773e3d723a5db9a2c960a08a997a0dd8b154cf01f3d0e1f5accfc"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "jt496_blowups",
        "commit": "027c0cfa03753148e0b5d67ebe558b46b0fe635b",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Combinatorics/SimpleGraph/BlowupGraph.lean",
        "start_line": 84,
        "start_column": 15,
        "end_line": 84,
        "end_column": 20
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\nH : SimpleGraph \u03b9\nV : \u03b9 \u2192 Type u_2\nf : (i : \u03b9) \u2192 V i\n\u22a2 Function.RightInverse sorry fun e =>\n    \u27e8\u22ef.mpr \u27e8s((Quot.out \u2191(\u22ef.mp e)).1.fst, (Quot.out \u2191(\u22ef.mp e)).2.fst), \u22ef\u27e9, (\u22ef.mpr (Quot.out \u2191e).1.snd, sorry)\u27e9",
        "url": "https://github.com/leanprover-community/mathlib4/blob/027c0cfa03753148e0b5d67ebe558b46b0fe635b/Mathlib/Combinatorics/SimpleGraph/BlowupGraph.lean#L84"
      },
      "metadata": {
        "blame_email_hash": "8580f8c44a06",
        "blame_date": "2025-06-04T21:21:20+01:00",
        "inclusion_date": "2025-06-05T03:07:14.517524+00:00"
      },
      "id": "9277ac16def959d60bedd8765498214635ff90b5ae1fce3df643f950ecf8c87a"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
        "start_line": 71,
        "start_column": 2,
        "end_line": 71,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\nhA : MeasurableSet A\nhB : MeasurableSet B\n\u22a2 IndepSet A B\u1d9c \u2194 IndepSet A B",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L71"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "67addfe9d8c814b350ca38bee763cec3b650b9c3262e865cfe7f79eea442a813"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean",
        "start_line": 242,
        "start_column": 2,
        "end_line": 242,
        "end_column": 7
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Fintype L\ninst\u271d\u2076 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2075 : Field \ud835\udd3dq\ninst\u271d\u2074 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u00b3 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b2 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 : \u2115\ninst\u271d\u00b9 : NeZero \u03d1\ninst\u271d : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\ni : Fin \u2113\nh_bound : \u2191i + \u03d1 \u2264 \u2113\nf :\n  Binius.BinaryBasefold.OracleFunction L inst\u271d\u2078 inst\u271d\u2077 inst\u271d\u2076 \ud835\udd3dq inst\u271d\u2075 inst\u271d\u2074 h_Fq_char_prime h_Fq_card_gt_1 inst\u271d\u00b3 r\n    inst\u271d\u00b2 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i, \u22ef\u27e9\nh_fw_dist_lt :\n  2 *\n      \u2191(Binius.BinaryBasefold.fiberwiseDistance L inst\u271d\u2078 inst\u271d\u2077 inst\u271d\u2076 \ud835\udd3dq inst\u271d\u2075 inst\u271d\u2074 h_Fq_char_prime h_Fq_card_gt_1\n          inst\u271d\u00b3 r inst\u271d\u00b2 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate i \u03d1 inst\u271d\u00b9 h_bound f) <\n    \u2191(Binius.BinaryBasefold.BBF_CodeDistance \u2113 \ud835\udce1 \u27e8\u2191i + \u03d1, \u22ef\u27e9)\n\u22a2 failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean#L242"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "426a1a36f719679fbc27b539b9e619cc1cd50b9e77209f1202773e182d563b42"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "master",
        "commit": "8718a75c1dbbbdc338836c1b5f7d47c12571b3ea",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "PhysLean/ClassicalMechanics/HarmonicOscillator/Basic.lean",
        "start_line": 170,
        "start_column": 49,
        "end_line": 170,
        "end_column": 54
      },
      "debug_info": {
        "goal": "x : Time \u2192 Space 1\n\u22a2 ClassicalMechanics.HarmonicOscillator.EquationOfMotion x \u2194 ClassicalMechanics.HarmonicOscillator.ExtremaOfAction x",
        "url": "https://github.com/HEPLean/PhysLean/blob/8718a75c1dbbbdc338836c1b5f7d47c12571b3ea/PhysLean/ClassicalMechanics/HarmonicOscillator/Basic.lean#L170"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-06-28T08:23:46+00:00",
        "inclusion_date": "2025-09-14T03:35:49.340182+00:00"
      },
      "id": "bd5c9d11e689d699c12f7d9097191fa545e7b8bc0ed13e0c5d39ddfdb42b9d11"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 56,
        "start_column": 22,
        "end_line": 56,
        "end_column": 27
      },
      "debug_info": {
        "goal": "s t : \u211d\nh\u2080 : s = 9 - 2 * t\nh\u2081 : t = 3 * s + 1\n\u22a2 s = 1 \u2227 t = 4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L56"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "77f7a038aa361b8f76228666edb8b95cc6ea682079d300a13c1468e31286e1f3"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_06.lean",
        "start_line": 82,
        "start_column": 32,
        "end_line": 82,
        "end_column": 37
      },
      "debug_info": {
        "goal": "q n : \u2115\nlamb : \u2102\na : \u211d := lamb.re\nb : \u211d := lamb.im\nh : lamb \u2208 primitiveRoots n \u2102\nh_lamb : lamb \u2260 1\nh_a_lt_one : \u2016a\u2016 < 1\n\u22a2 \u2191q ^ 2 - 2 * \u2016a\u2016 * \u2191q + \u2016a\u2016 ^ 2 + \u2016b\u2016 ^ 2 > (\u2191q - 1) ^ 2",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_06.lean#L82"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2023-10-09T18:03:35+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "c16eae9da88bc5aa241988d1343866112c3a28393a3a8985d684f9d9d5ae2849"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/3Inverses.lean",
        "start_line": 177,
        "start_column": 2,
        "end_line": 177,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b9 : Fintype n\ninst\u271d : DecidableEq n\nA B : Matrix n n \u2102\n\u22a2 (1 + A * B)\u207b\u00b9 = 1 - A * (1 + B * A)\u207b\u00b9 * B",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/3Inverses.lean#L177"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2023-10-11T15:16:39+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "0e5603236d073716ef298b24647e2684335bc6eca844e76d001987fdbe31102a"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 1 - 5, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "c78f65069c3786a53ce41267a2990b8f5e1c5a5a51e637d6857bb34fdcf08a06"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "zfc-axiom",
        "commit": "47bca9e8b9346cf4297b1dd73f39951c727612fd",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "Foundation/Modal/Kripke/AxiomMk.lean",
        "start_line": 59,
        "start_column": 2,
        "end_line": 59,
        "end_column": 7
      },
      "debug_info": {
        "goal": "F : Frame\nS : Type u_1\ninst\u271d\u2074 : Entailment (Formula \u2115) S\n\ud835\udce2 : S\ninst\u271d\u00b3 : Consistent \ud835\udce2\ninst\u271d\u00b2 : Entailment.K \ud835\udce2\ninst\u271d\u00b9 : HasAxiomT \ud835\udce2\ninst\u271d : HasAxiomMk \ud835\udce2\n\u22a2 \u2200 (x : (canonicalFrame \ud835\udce2).World), \u2203 y, x \u227a y \u2227 y \u227a x \u2227 \u2200 (z : (canonicalFrame \ud835\udce2).World), y \u227a^[2] z \u2192 x \u227a z",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/47bca9e8b9346cf4297b1dd73f39951c727612fd/Foundation/Modal/Kripke/AxiomMk.lean#L59"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-21T06:41:18+09:00",
        "inclusion_date": "2025-09-18T03:51:26.203441+00:00"
      },
      "id": "4dddda37080b03211362dc89848cafa232821e4e3a90533926e0e74bc958ce43"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "ineq_6_3_30",
        "commit": "04b2b281044042b8ed618a6f28a027fb295a168d",
        "lean_version": "v4.22.0-rc2"
      },
      "location": {
        "path": "Carleson/Antichain/Basic.lean",
        "start_line": 326,
        "start_column": 6,
        "end_line": 326,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case h.e'_3.h.e'_5.h.h.e'_1.h.e'_11.e_a\nX : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\np\u2081 : NNReal := 2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2)\nhp\u2081 : p\u2081 = 2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2)\naux : 0 < 3 * (2 * nnq X / (nnq X + 1)) - 2\nhp\u2081_ge : 1 \u2264 p\u2081\nhp\u2081_lt : p\u2081 < 2\nhf1 : AEStronglyMeasurable f volume\nhf_top : eLpNorm f 2 volume < \u22a4\nthis :\n  HasStrongType (fun f x => maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) (\u2191p\u2081) f x) 2 2 volume\n    volume \u2191(C2_0_6 (2 ^ a) p\u2081 2)\nhh :\n  eLpNorm\n      (fun x2 =>\n        (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n            (\u2191(2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2))) f x2).toReal)\n      2 volume \u2264\n    \u2191(CMB (2 ^ a) (2 / (2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2))) ^\n          (\u2191(2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2)))\u207b\u00b9) *\n      eLpNorm f 2 volume\nx\u271d : X\n\u22a2 3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2 = \u2191(3 * (2 * nnq X / (nnq X + 1)) - 2)",
        "url": "https://github.com/fpvandoorn/carleson/blob/04b2b281044042b8ed618a6f28a027fb295a168d/Carleson/Antichain/Basic.lean#L326"
      },
      "metadata": {
        "blame_email_hash": "44a80a4a9c95",
        "blame_date": "2025-06-04T11:19:38+02:00",
        "inclusion_date": "2025-07-12T23:01:54.898186+00:00"
      },
      "id": "91160dbdbf93daf41e2fb31eb6c1214324b36d2a8470b2ae0a2fe4d256f2f78a"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/DedekindDomain/AdicValuation.lean",
        "start_line": 244,
        "start_column": 2,
        "end_line": 244,
        "end_column": 7
      },
      "debug_info": {
        "goal": "A : Type u_1\nK : Type u_2\ninst\u271d\u2074 : CommRing A\ninst\u271d\u00b3 : Field K\ninst\u271d\u00b2 : Algebra A K\ninst\u271d\u00b9 : IsFractionRing A K\ninst\u271d : IsDedekindDomain A\nv : HeightOneSpectrum A\n\u22a2 Function.Bijective\n    \u21d1(@IsDedekindDomain.HeightOneSpectrum.ResidueFieldToCompletionResidueField A K inst\u271d\u2074 inst\u271d\u00b3 inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d v)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/DedekindDomain/AdicValuation.lean#L244"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-04-30T00:07:20+01:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "2be5400fd58f9e7af7fd6f56037b845638079e0e739c723c7b70ca098a25ceb4"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "99a77d19845fb8083456331fd1256bf35a48f60c",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 57,
        "start_column": 2,
        "end_line": 57,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : Fintype \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\n\u22a2 \u2203 a b, a \u2260 b \u2227 G.degree a = G.degree b",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/99a77d19845fb8083456331fd1256bf35a48f60c/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L57"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-09-08T22:03:06.847248+00:00"
      },
      "id": "7e72c30142b45a5984054a838f388ab532fc699c1be2963d577de56c5f8f4e7c"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "5d2c803989e44af9fd233b1034045c8fc2ba5735",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 2125,
        "start_column": 4,
        "end_line": 2125,
        "end_column": 9
      },
      "debug_info": {
        "goal": "s a b e \u03c3 : \u211d\nf : \u2102 \u2192 \u2102\nhf : IntegrableOn (fun t => f (\u2191\u03c3 + \u2191t * I)) (Icc s e) volume\nhab : s < a \u2227 a < b \u2227 b < e\nhf_sa hf_ae : IntervalIntegrable (fun t => f (\u2191\u03c3 + \u2191t * I)) volume a e\nhf_ab : IntervalIntegrable (fun t => f (\u2191\u03c3 + \u2191t * I)) volume a b\nhf_be : IntervalIntegrable (fun t => f (\u2191\u03c3 + \u2191t * I)) volume b e\n\u22a2 \u222b (t : \u211d) in s..e, f (\u2191\u03c3 + \u2191t * I) = \u222b (t : \u211d) in s..a, f (\u2191\u03c3 + \u2191t * I) + \u222b (t : \u211d) in a..e, f (\u2191\u03c3 + \u2191t * I)",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/5d2c803989e44af9fd233b1034045c8fc2ba5735/PrimeNumberTheoremAnd/MediumPNT.lean#L2125"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-06-27T13:50:08-04:00",
        "inclusion_date": "2025-07-01T03:15:09.382319+00:00"
      },
      "id": "052621f74521b2be0c78043db1263ff7cb8572b9b199151206e5527cd0ff93a9"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "58ff9ddb3f6bc3860fb0316cc210fca5d488ba62",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PFR/MoreRuzsaDist.lean",
        "start_line": 530,
        "start_column": 2,
        "end_line": 530,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03a9 : Type u_1\nG : Type u_5\nm\u03a9 : MeasurableSpace \u03a9\n\u03bc : Measure \u03a9\nhG : MeasurableSpace G\ninst\u271d\u00b3 : MeasurableSingletonClass G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : Countable G\ninst\u271d : IsProbabilityMeasure \u03bc\nI : Type u_8\ns t : Finset I\nhdisj : Disjoint s t\nhs : s.Nonempty\nht : t.Nonempty\nX : I \u2192 \u03a9 \u2192 G\nhX : \u2200 (i : I), Measurable (X i)\nhX' : \u2200 (i : I), FiniteRange (X i)\nh_indep : iIndepFun X \u03bc\nf : I \u2192 I\nhf : Finset.image f t \u2286 s\n\u22a2 H[\u2211 i \u2208 t, X i ; \u03bc] \u2264 H[\u2211 i \u2208 s, X i ; \u03bc] + \u2211 i \u2208 t, (H[X i - X (f i) ; \u03bc] - H[X (f i) ; \u03bc])",
        "url": "https://github.com/teorth/pfr/blob/58ff9ddb3f6bc3860fb0316cc210fca5d488ba62/PFR/MoreRuzsaDist.lean#L530"
      },
      "metadata": {
        "blame_email_hash": "6e8091041644",
        "blame_date": "2024-05-31T19:35:50+01:00",
        "inclusion_date": "2025-07-05T05:06:27.171280+00:00"
      },
      "id": "ee879fdae8040a0de6aec1d9487b8098b8ec902fd00025f49d83908cc9626290"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "oliver-butterley/Variation",
        "commit": "aef30115b3dd3c5068dc46afef414d474ed42897",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/MeasureTheory/VectorMeasure/Variation.lean",
        "start_line": 432,
        "start_column": 2,
        "end_line": 432,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\ninst\u271d : MeasurableSpace X\n\u03bc : VectorMeasure X ENNReal\n\u22a2 @VectorMeasure.variation X inst\u271d ENNReal ENNReal.instTopologicalSpace instENormedAddCommMonoidENNReal instT2Space \u03bc =\n    \u03bc",
        "url": "https://github.com/leanprover-community/mathlib4/blob/aef30115b3dd3c5068dc46afef414d474ed42897/Mathlib/MeasureTheory/VectorMeasure/Variation.lean#L432"
      },
      "metadata": {
        "blame_email_hash": "b5f629390682",
        "blame_date": "2025-06-04T22:05:05+02:00",
        "inclusion_date": "2025-06-05T03:10:34.447452+00:00"
      },
      "id": "3797bec25ae795b7bd9208d2fc9926b7bf350b1a07d8d76a93853efa6d390a34"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
        "start_line": 77,
        "start_column": 2,
        "end_line": 77,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\nhA : MeasurableSet A\nhB : MeasurableSet B\nh : IndepSet A B\n\u22a2 IndepSet A\u1d9c B",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L77"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "3577f3cf5999bad2f3b6bd7ce1a7b4b43afe49b10f7643e474cff5dfb1aa018b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean",
        "start_line": 256,
        "start_column": 32,
        "end_line": 256,
        "end_column": 37
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Fintype L\ninst\u271d\u2076 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2075 : Field \ud835\udd3dq\ninst\u271d\u2074 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u00b3 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b2 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u00b9 : NeZero \u03d1\ninst\u271d : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\ni_val : \u2115\nhi_dvd : \u03d1 \u2223 i_val\nh_bound : i_val + \u03d1 \u2264 \u2113\nf_i :\n  Binius.BinaryBasefold.OracleFunction L inst\u271d\u2078 inst\u271d\u2077 inst\u271d\u2076 \ud835\udd3dq inst\u271d\u2075 inst\u271d\u2074 h_Fq_char_prime h_Fq_card_gt_1 inst\u271d\u00b3 r\n    inst\u271d\u00b2 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8i_val, \u22ef\u27e9\nf_i_plus_\u03d1 :\n  Binius.BinaryBasefold.OracleFunction L inst\u271d\u2078 inst\u271d\u2077 inst\u271d\u2076 \ud835\udd3dq inst\u271d\u2075 inst\u271d\u2074 h_Fq_char_prime h_Fq_card_gt_1 inst\u271d\u00b3 r\n    inst\u271d\u00b2 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8i_val + \u03d1, \u22ef\u27e9\nchallenges : Fin \u03d1 \u2192 L\n\u22a2 i_val < \u2113",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean#L256"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "47af900011471505f36b8bf7957807c36556b6512e6da89c1ed4a678d03dfc41"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "master",
        "commit": "8718a75c1dbbbdc338836c1b5f7d47c12571b3ea",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "PhysLean/ClassicalMechanics/HarmonicOscillator/Solution.lean",
        "start_line": 379,
        "start_column": 23,
        "end_line": 379,
        "end_column": 28
      },
      "debug_info": {
        "goal": "S : HarmonicOscillator\nIC : ClassicalMechanics.HarmonicOscillator.InitialConditions\nx : Time \u2192 Space 1\n\u22a2 EquationOfMotion x \u2227\n      x 0 = ClassicalMechanics.HarmonicOscillator.InitialConditions.x\u2080 IC \u2227\n        Time.deriv x 0 = ClassicalMechanics.HarmonicOscillator.InitialConditions.v\u2080 IC \u2192\n    x = ClassicalMechanics.HarmonicOscillator.sol S IC",
        "url": "https://github.com/HEPLean/PhysLean/blob/8718a75c1dbbbdc338836c1b5f7d47c12571b3ea/PhysLean/ClassicalMechanics/HarmonicOscillator/Solution.lean#L379"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-06-28T08:23:46+00:00",
        "inclusion_date": "2025-09-14T03:35:49.340182+00:00"
      },
      "id": "5cc1093de7278e87482fb3377426f7f2583474ec3e524fe973e562c16acd1584"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 63,
        "start_column": 25,
        "end_line": 63,
        "end_column": 30
      },
      "debug_info": {
        "goal": "\u03c3 : \u211d \u2243 \u211d\nh\u2080 : \u03c3.invFun 2 = 10\nh\u2081 : \u03c3.invFun 10 = 1\nh\u2082 : \u03c3.invFun 1 = 2\n\u22a2 \u03c3.toFun (\u03c3.toFun 10) = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L63"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "1e70dd51d3ead4eccf97dfb04911c11cd7d0c5004231514433dd702a7eb09d8c"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_01.lean",
        "start_line": 360,
        "start_column": 2,
        "end_line": 360,
        "end_column": 7
      },
      "debug_info": {
        "goal": "S : \u2115 \u2192 \u2124\nh\u2081 : AlmostInjective S\nh\u2082 : Asymptotics.ofSubexponentialGrowth S\n\u22a2 {p | \u2203 n, \u2191\u2191p \u2223 S n}.Finite",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_01.lean#L360"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2023-08-01T15:20:42+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "8b0bdb422df4208ee0e8c89228ad719521e58f332288bb35fbc5d0d5621dc230"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/3Inverses.lean",
        "start_line": 180,
        "start_column": 2,
        "end_line": 180,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b9 : Fintype n\ninst\u271d : DecidableEq n\nA B : Matrix n n \u2102\n\u22a2 (1 + A * B)\u207b\u00b9 * A = A * (1 + B * A)\u207b\u00b9",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/3Inverses.lean#L180"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2023-10-11T15:16:39+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "dbe3875470e28ce28bebe1dc8cc2154f4434deba8b4d50fc5deeb7ddab2eec52"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 2 - 5, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "732bc3d627983f68e0a0ae3489d7e202b4c8676ff9a5e8e511ae47c49a5fbdc9"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "master",
        "commit": "5d0eb4e51de098b32e1623f00fe8c84dff24a004",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Modal/MaximalConsistentSet.lean",
        "start_line": 191,
        "start_column": 4,
        "end_line": 191,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case inl\n\u03b1 : Type u_1\nS : Type u_2\ninst\u271d\u00b3 : Entailment (Formula \u03b1) S\n\ud835\udce2 : S\ninst\u271d\u00b2 : DecidableEq \u03b1\nT : FormulaSet \u03b1\ninst\u271d\u00b9 : Entailment.Cl \ud835\udce2\n\u03c6 : Formula \u03b1\ninst\u271d : Necessitation \ud835\udce2\nT_consis : Consistent \ud835\udce2 T\nh : \u223c\u25a1\u03c6 \u2208 T\nh\u0393 : \u2191\u2205 \u2286 {\u223c\u03c6}\n\u22a2 \u2191\u2205 *\u22ac[\ud835\udce2] \u22a5",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/5d0eb4e51de098b32e1623f00fe8c84dff24a004/Foundation/Modal/MaximalConsistentSet.lean#L191"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-12T12:29:45+09:00",
        "inclusion_date": "2025-05-15T23:27:40.059657+00:00"
      },
      "id": "16bf128716f7898dc911f671d8ef2b1417c9789e709da5084d5ac4000b39f3c6"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "ineq_6_3_30",
        "commit": "04b2b281044042b8ed618a6f28a027fb295a168d",
        "lean_version": "v4.22.0-rc2"
      },
      "location": {
        "path": "Carleson/Antichain/Basic.lean",
        "start_line": 331,
        "start_column": 6,
        "end_line": 331,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case h.e'_4.h.e'_5\nX : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\np\u2081 : NNReal := 2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2)\nhp\u2081 : p\u2081 = 2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2)\naux : 0 < 3 * (2 * nnq X / (nnq X + 1)) - 2\nhp\u2081_ge : 1 \u2264 p\u2081\nhp\u2081_lt : p\u2081 < 2\nhf1 : AEStronglyMeasurable f volume\nhf_top : eLpNorm f 2 volume < \u22a4\nthis :\n  HasStrongType (fun f x => maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) (\u2191p\u2081) f x) 2 2 volume\n    volume \u2191(C2_0_6 (2 ^ a) p\u2081 2)\nhh :\n  eLpNorm\n      (fun x2 =>\n        (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n            (\u2191(2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2))) f x2).toReal)\n      2 volume \u2264\n    \u2191(CMB (2 ^ a) (2 / (2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2))) ^\n          (\u2191(2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2)))\u207b\u00b9) *\n      eLpNorm f 2 volume\n\u22a2 \u2191(2 ^ (2 * a)) * (3 * (\u2191(2 * nnq X) / \u2191(nnq X + 1)) - 2) / (2 * (\u2191(2 * nnq X) / \u2191(nnq X + 1)) - 2) =\n    \u2191(CMB (\u2191(2 ^ a)) (2 / (2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2))) ^\n        \u2191(2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2))\u207b\u00b9)",
        "url": "https://github.com/fpvandoorn/carleson/blob/04b2b281044042b8ed618a6f28a027fb295a168d/Carleson/Antichain/Basic.lean#L331"
      },
      "metadata": {
        "blame_email_hash": "44a80a4a9c95",
        "blame_date": "2025-06-04T11:19:38+02:00",
        "inclusion_date": "2025-07-12T23:01:54.898186+00:00"
      },
      "id": "485db9086959213f7c65056438fd5413525cb6b9ebb63e8f053768a0af9849ec"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/QuaternionAlgebra/NumberField.lean",
        "start_line": 148,
        "start_column": 2,
        "end_line": 148,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m : Type u_3\n\u03b1 : Type u_4\n\u03b2 : Type u_5\ninst\u271d\u2075 : Fintype m\ninst\u271d\u2074 : DecidableEq m\ninst\u271d\u00b3 : NonAssocSemiring \u03b1\ninst\u271d\u00b2 : NonAssocSemiring \u03b2\ninst\u271d\u00b9 : TopologicalSpace \u03b1\ninst\u271d : TopologicalSpace \u03b2\nf : \u03b1 \u2192+* \u03b2\nhf : Topology.IsOpenEmbedding \u21d1f\n\u22a2 IsOpenMap \u21d1f.mapMatrix",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/QuaternionAlgebra/NumberField.lean#L148"
      },
      "metadata": {
        "blame_email_hash": "6a0fe98fa9e8",
        "blame_date": "2025-04-14T10:40:13-04:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "47e1be26d6aab916d27553170f755f5e0fea0491529dcb4535fcfdb07b6e776b"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 101,
        "start_column": 2,
        "end_line": 101,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d : Fintype \u03b1\ns : Multiset \u2115\nhs : s.card = card \u03b1\nh\u2080 : 0 \u2209 s\n\u22a2 s.sum = 2 * card \u03b1 - 2 \u2194 \u2203 G x, degreeSequence G = s",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L101"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "63d07dffb67aae4cdb0cac3b28801a01b2dbc0aa7fd1faef1eac94a6f7fef6cd"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "5d2c803989e44af9fd233b1034045c8fc2ba5735",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 2131,
        "start_column": 4,
        "end_line": 2131,
        "end_column": 9
      },
      "debug_info": {
        "goal": "s a b e \u03c3 : \u211d\nf : \u2102 \u2192 \u2102\nhf : IntegrableOn (fun t => f (\u2191\u03c3 + \u2191t * I)) (Icc s e) volume\nhab : s < a \u2227 a < b \u2227 b < e\nhf_sa hf_ae : IntervalIntegrable (fun t => f (\u2191\u03c3 + \u2191t * I)) volume a e\nhf_ab : IntervalIntegrable (fun t => f (\u2191\u03c3 + \u2191t * I)) volume a b\nhf_be : IntervalIntegrable (fun t => f (\u2191\u03c3 + \u2191t * I)) volume b e\nh1 : \u222b (t : \u211d) in s..e, f (\u2191\u03c3 + \u2191t * I) = \u222b (t : \u211d) in s..a, f (\u2191\u03c3 + \u2191t * I) + \u222b (t : \u211d) in a..e, f (\u2191\u03c3 + \u2191t * I)\n\u22a2 \u222b (t : \u211d) in s..e, f (\u2191\u03c3 + \u2191t * I) = \u222b (t : \u211d) in s..a, f (\u2191\u03c3 + \u2191t * I) + \u222b (t : \u211d) in a..e, f (\u2191\u03c3 + \u2191t * I)",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/5d2c803989e44af9fd233b1034045c8fc2ba5735/PrimeNumberTheoremAnd/MediumPNT.lean#L2131"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-06-27T13:50:08-04:00",
        "inclusion_date": "2025-07-01T03:15:09.382319+00:00"
      },
      "id": "070fa1449a934187f00d70703562c7258f79470419851c610add57aeaf5fa1f4"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "oliver-butterley/Variation",
        "commit": "aef30115b3dd3c5068dc46afef414d474ed42897",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/MeasureTheory/VectorMeasure/Variation.lean",
        "start_line": 439,
        "start_column": 2,
        "end_line": 439,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\ninst\u271d : MeasurableSpace X\n\u03bc : SignedMeasure X\n\u22a2 \u03bc.totalVariation =\n    ennrealToMeasure\n      (@VectorMeasure.variation X inst\u271d \u211d PseudoMetricSpace.toUniformSpace.toTopologicalSpace\n        NormedAddCommGroup.toENormedAddCommMonoid \u22ef \u03bc)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/aef30115b3dd3c5068dc46afef414d474ed42897/Mathlib/MeasureTheory/VectorMeasure/Variation.lean#L439"
      },
      "metadata": {
        "blame_email_hash": "b5f629390682",
        "blame_date": "2025-06-04T22:05:05+02:00",
        "inclusion_date": "2025-06-05T03:10:34.447452+00:00"
      },
      "id": "b611642628ed7e1491a26884e4ba55a0cd5c36b3592b139aecceb1d5166b8e03"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
        "start_line": 86,
        "start_column": 2,
        "end_line": 86,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA : Set \u03a9\nh : IndepSet A A\n\u22a2 \u2119 A = 0 \u2228 \u2119 A = 1",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L86"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "926e207c68bf5e0eee2705fbb68f26df59dede909b1f81f8c8ef961360bae260"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean",
        "start_line": 262,
        "start_column": 57,
        "end_line": 262,
        "end_column": 62
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Fintype L\ninst\u271d\u2076 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2075 : Field \ud835\udd3dq\ninst\u271d\u2074 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u00b3 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b2 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u00b9 : NeZero \u03d1\ninst\u271d : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\ni_val : \u2115\nhi_dvd : \u03d1 \u2223 i_val\nh_bound : i_val + \u03d1 \u2264 \u2113\nf_i :\n  Binius.BinaryBasefold.OracleFunction L inst\u271d\u2078 inst\u271d\u2077 inst\u271d\u2076 \ud835\udd3dq inst\u271d\u2075 inst\u271d\u2074 h_Fq_char_prime h_Fq_card_gt_1 inst\u271d\u00b3 r\n    inst\u271d\u00b2 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8i_val, \u22ef\u27e9\nf_i_plus_\u03d1 :\n  Binius.BinaryBasefold.OracleFunction L inst\u271d\u2078 inst\u271d\u2077 inst\u271d\u2076 \ud835\udd3dq inst\u271d\u2075 inst\u271d\u2074 h_Fq_char_prime h_Fq_card_gt_1 inst\u271d\u00b3 r\n    inst\u271d\u00b2 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8i_val + \u03d1, \u22ef\u27e9\nchallenges : Fin \u03d1 \u2192 L\nh_fw_dist_lt :\n  2 *\n      \u2191(Binius.BinaryBasefold.fiberwiseDistance L inst\u271d\u2078 inst\u271d\u2077 inst\u271d\u2076 \ud835\udd3dq inst\u271d\u2075 inst\u271d\u2074 h_Fq_char_prime h_Fq_card_gt_1\n          inst\u271d\u00b3 r inst\u271d\u00b2 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8i_val, \u22ef\u27e9 \u03d1 inst\u271d\u00b9 h_bound f_i) <\n    \u2191(Binius.BinaryBasefold.BBF_CodeDistance \u2113 \ud835\udce1 \u27e8i_val + \u03d1, \u22ef\u27e9)\nh_dist_next_lt : failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)\n\u22a2 i_val < \u2113",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean#L262"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "37e1d3bf6946e9fe39f2cd339007b9c2d5234c4b6924a4baea5fbac11d6bcc5a"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "Inertia",
        "commit": "1597a1afa1c8c9794baad65270a05523d232cfa9",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "PhysLean/ClassicalMechanics/HarmonicOscillator/Solution.lean",
        "start_line": 300,
        "start_column": 23,
        "end_line": 300,
        "end_column": 28
      },
      "debug_info": {
        "goal": "S : HarmonicOscillator\nIC : ClassicalMechanics.HarmonicOscillator.InitialConditions\nx : Time \u2192 Space 1\n\u22a2 S.EquationOfMotion x \u2227\n      x 0 = ClassicalMechanics.HarmonicOscillator.InitialConditions.x\u2080 IC \u2227\n        Time.deriv x 0 = ClassicalMechanics.HarmonicOscillator.InitialConditions.v\u2080 IC \u2192\n    x = ClassicalMechanics.HarmonicOscillator.sol S IC",
        "url": "https://github.com/HEPLean/PhysLean/blob/1597a1afa1c8c9794baad65270a05523d232cfa9/PhysLean/ClassicalMechanics/HarmonicOscillator/Solution.lean#L300"
      },
      "metadata": {
        "blame_email_hash": "7187e3a9e9f5",
        "blame_date": "2025-06-28T08:23:46+00:00",
        "inclusion_date": "2025-09-12T04:22:08.671672+00:00"
      },
      "id": "cbabc61f56a249d2692f552e974a8a1449354582b3403e3d20ca16c5edaf6b6e"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 69,
        "start_column": 14,
        "end_line": 69,
        "end_column": 19
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : n \u2264 9\nh\u2081 : 18 \u2223 374 * 10 + n\n\u22a2 n = 4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L69"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "a5d3a169cb07cda6b9df784c044b490beeeb7476e5d357806796915f3543d5e0"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_01.lean",
        "start_line": 339,
        "start_column": 2,
        "end_line": 339,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 Tendsto (fun n => \u2211 p \u2208 range n with Nat.Prime p, 1 / \u2191p) atTop atTop",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_01.lean#L339"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2023-08-01T13:41:07+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "2b91fbc020b2b3ed6123d416e3883afcff1108342f6383549de490c7e99b5879"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/5SolutionsAndDecompositions.lean",
        "start_line": 53,
        "start_column": 2,
        "end_line": 53,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : Type u_2\nR : Type u_4\ninst\u271d\u00b2 : Fintype n\ninst\u271d\u00b9 : DecidableEq n\ninst\u271d : Field R\nA : Matrix n n R\nx b : n \u2192 R\nh : A.det \u2260 0\n\u22a2 A.mulVec x = b \u2194 \u2200 (i : n), x i = A.det\u207b\u00b9 \u2022 A.cramerMap b i",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/5SolutionsAndDecompositions.lean#L53"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2023-10-11T15:16:39+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "48d7b568dc1a339628e9ff928deb28c9366e4712436de4bde972dd6a5ee747f2"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 3 - 5, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "9fd9f09a7f5151a28239f6b543542e12b1dea9c71ad71da1258cbdf8cce28951"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "master",
        "commit": "5d0eb4e51de098b32e1623f00fe8c84dff24a004",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Modal/MaximalConsistentSet.lean",
        "start_line": 194,
        "start_column": 4,
        "end_line": 194,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case inr\n\u03b1 : Type u_1\nS : Type u_2\ninst\u271d\u00b3 : Entailment (Formula \u03b1) S\n\ud835\udce2 : S\ninst\u271d\u00b2 : DecidableEq \u03b1\nT : FormulaSet \u03b1\ninst\u271d\u00b9 : Entailment.Cl \ud835\udce2\n\u03c6 : Formula \u03b1\ninst\u271d : Necessitation \ud835\udce2\nT_consis : Consistent \ud835\udce2 T\nh : \u223c\u25a1\u03c6 \u2208 T\nh\u0393 : \u2191{\u223c\u03c6} \u2286 {\u223c\u03c6}\n\u22a2 \u2191{\u223c\u03c6} *\u22ac[\ud835\udce2] \u22a5",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/5d0eb4e51de098b32e1623f00fe8c84dff24a004/Foundation/Modal/MaximalConsistentSet.lean#L194"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-12T12:29:45+09:00",
        "inclusion_date": "2025-05-15T23:27:40.059657+00:00"
      },
      "id": "ec60fa49e5ecd09d8454c8d07337a05aa1b6ff1ceb384dfed9bd0c12e9669f8b"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "ineq_6_3_30",
        "commit": "04b2b281044042b8ed618a6f28a027fb295a168d",
        "lean_version": "v4.22.0-rc2"
      },
      "location": {
        "path": "Carleson/Antichain/Basic.lean",
        "start_line": 309,
        "start_column": 6,
        "end_line": 309,
        "end_column": 11
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\np\u2081 : NNReal := \u22ef\nhp\u2081 : p\u2081 = 2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2)\naux : 0 < 3 * (2 * nnq X / (nnq X + 1)) - 2\nhp\u2081_ge : 1 \u2264 p\u2081\nhp\u2081_lt : p\u2081 < 2\nhf1 : AEStronglyMeasurable f volume\nhf_top : eLpNorm f 2 volume < \u22a4\n\u22a2 HasStrongType (fun f x => maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) (\u2191p\u2081) f x) 2 2 volume\n    volume \u2191(C2_0_6 (2 ^ a) p\u2081 2)",
        "url": "https://github.com/fpvandoorn/carleson/blob/04b2b281044042b8ed618a6f28a027fb295a168d/Carleson/Antichain/Basic.lean#L309"
      },
      "metadata": {
        "blame_email_hash": "44a80a4a9c95",
        "blame_date": "2025-06-04T11:19:38+02:00",
        "inclusion_date": "2025-07-12T23:01:54.898186+00:00"
      },
      "id": "123fba2ad880f5b6379c04dd06edac874cc51bc0c2ef52a14ff1f4757231c74d"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-distribHaarChar-harder-results",
        "commit": "b2cbce8e4933bae37a3a22712e17cf6467d25edd",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "FLT/HaarMeasure/DistribHaarChar/LessBasic.lean",
        "start_line": 25,
        "start_column": 2,
        "end_line": 25,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u2075 : TopologicalSpace R\ninst\u271d\u2074 : LocallyCompactSpace R\ninst\u271d\u00b3 : CommRing R\ninst\u271d\u00b2 : IsTopologicalRing R\ninst\u271d\u00b9 : MeasurableSpace R\ninst\u271d : BorelSpace R\n\u22a2 Continuous \u21d1(distribHaarChar R)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b2cbce8e4933bae37a3a22712e17cf6467d25edd/FLT/HaarMeasure/DistribHaarChar/LessBasic.lean#L25"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-04-14T15:27:33+01:00",
        "inclusion_date": "2025-04-14T23:58:47.451190+00:00"
      },
      "id": "2d9a654995dde411660797fa06220ff10e86cae6be456c754a9d914c9ddc3ee3"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "99a77d19845fb8083456331fd1256bf35a48f60c",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 113,
        "start_column": 2,
        "end_line": 113,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\n\u03b1 : Type u_2\nG : SimpleGraph \u03b1\nhG : G.IsAcyclic\ns : Finset \u03b9\nf : \u03b9 \u2192 G.Subgraph\nhf : \u2200 i \u2208 s, (f i).coe.IsAcyclic\nh : \u2200 i \u2208 s, \u2200 j \u2208 s, f i \u2293 f j \u2260 \u22a5\n\u22a2 s.inf f \u2260 \u22a5",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/99a77d19845fb8083456331fd1256bf35a48f60c/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L113"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-09-08T22:03:06.847248+00:00"
      },
      "id": "4ac63e3aaecde0c67d19307851abb2a773e98889c5d1160d375b4a51d8a4e12e"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "5d2c803989e44af9fd233b1034045c8fc2ba5735",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 2133,
        "start_column": 2,
        "end_line": 2133,
        "end_column": 7
      },
      "debug_info": {
        "goal": "s a b e \u03c3 : \u211d\nf : \u2102 \u2192 \u2102\nhf : IntegrableOn (fun t => f (\u2191\u03c3 + \u2191t * I)) (Icc s e) volume\nhab : s < a \u2227 a < b \u2227 b < e\nhf_sa hf_ae : IntervalIntegrable (fun t => f (\u2191\u03c3 + \u2191t * I)) volume a e\nhf_ab : IntervalIntegrable (fun t => f (\u2191\u03c3 + \u2191t * I)) volume a b\nhf_be : IntervalIntegrable (fun t => f (\u2191\u03c3 + \u2191t * I)) volume b e\nh1 h2 : \u222b (t : \u211d) in s..e, f (\u2191\u03c3 + \u2191t * I) = \u222b (t : \u211d) in s..a, f (\u2191\u03c3 + \u2191t * I) + \u222b (t : \u211d) in a..e, f (\u2191\u03c3 + \u2191t * I)\n\u22a2 I \u2022 \u222b (y : \u211d) in s..e, f (\u2191\u03c3 + \u2191y * I) =\n    ((I \u2022 \u222b (y : \u211d) in s..a, f (\u2191\u03c3 + \u2191y * I)) + I \u2022 \u222b (y : \u211d) in a..b, f (\u2191\u03c3 + \u2191y * I)) +\n      I \u2022 \u222b (y : \u211d) in b..e, f (\u2191\u03c3 + \u2191y * I)",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/5d2c803989e44af9fd233b1034045c8fc2ba5735/PrimeNumberTheoremAnd/MediumPNT.lean#L2133"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-06-27T13:50:08-04:00",
        "inclusion_date": "2025-07-01T03:15:09.382319+00:00"
      },
      "id": "c530b97fac01f925fdefe189401b3a515c21b03865c02f882a58707023a80ba9"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "terminalCat",
        "commit": "a2f04a3f90bf6a62c9b984897f5eb40a46b5f735",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/AlgebraicTopology/SimplicialSet/HoFunctorPreservesBinaryProducts.lean",
        "start_line": 139,
        "start_column": 2,
        "end_line": 139,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n m : \u2115\nthis\u271d\u00b3 : IsIso (prodComparison hoFunctor (nerve (Fin (n + 1))) (nerve (Fin (m + 1))))\nthis\u271d\u00b2 : failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)\nthis\u271d\u00b9 : failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)\nthis\u271d : failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)\nthis : failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)\n\u22a2 IsIso (prodComparison hoFunctor (stdSimplex.obj (SimplexCategory.mk n)) (stdSimplex.obj (SimplexCategory.mk m)))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/a2f04a3f90bf6a62c9b984897f5eb40a46b5f735/Mathlib/AlgebraicTopology/SimplicialSet/HoFunctorPreservesBinaryProducts.lean#L139"
      },
      "metadata": {
        "blame_email_hash": "eaaeec08515d",
        "blame_date": "2025-05-27T17:57:50-04:00",
        "inclusion_date": "2025-06-05T03:12:28.661777+00:00"
      },
      "id": "816e951d3fd135fc953cbc96274de77d955f98c1d053fa64009fa24aed6bc6fd"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
        "start_line": 108,
        "start_column": 2,
        "end_line": 108,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\nhA : \u2119 A = 0\n\u22a2 \u2119(A|B) = 0",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L108"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "212f9d566f3205e8383b7539fb3aef5fba81877c8733ec919faed61dcbe31141"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean",
        "start_line": 264,
        "start_column": 38,
        "end_line": 264,
        "end_column": 43
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Fintype L\ninst\u271d\u2076 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2075 : Field \ud835\udd3dq\ninst\u271d\u2074 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u00b3 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b2 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u00b9 : NeZero \u03d1\ninst\u271d : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\ni_val : \u2115\nhi_dvd : \u03d1 \u2223 i_val\nh_bound : i_val + \u03d1 \u2264 \u2113\nf_i :\n  Binius.BinaryBasefold.OracleFunction L inst\u271d\u2078 inst\u271d\u2077 inst\u271d\u2076 \ud835\udd3dq inst\u271d\u2075 inst\u271d\u2074 h_Fq_char_prime h_Fq_card_gt_1 inst\u271d\u00b3 r\n    inst\u271d\u00b2 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8i_val, \u22ef\u27e9\nf_i_plus_\u03d1 :\n  Binius.BinaryBasefold.OracleFunction L inst\u271d\u2078 inst\u271d\u2077 inst\u271d\u2076 \ud835\udd3dq inst\u271d\u2075 inst\u271d\u2074 h_Fq_char_prime h_Fq_card_gt_1 inst\u271d\u00b3 r\n    inst\u271d\u00b2 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8i_val + \u03d1, \u22ef\u27e9\nchallenges : Fin \u03d1 \u2192 L\nh_fw_dist_lt :\n  2 *\n      \u2191(Binius.BinaryBasefold.fiberwiseDistance L inst\u271d\u2078 inst\u271d\u2077 inst\u271d\u2076 \ud835\udd3dq inst\u271d\u2075 inst\u271d\u2074 h_Fq_char_prime h_Fq_card_gt_1\n          inst\u271d\u00b3 r inst\u271d\u00b2 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8i_val, \u22ef\u27e9 \u03d1 inst\u271d\u00b9 h_bound f_i) <\n    \u2191(Binius.BinaryBasefold.BBF_CodeDistance \u2113 \ud835\udce1 \u27e8i_val + \u03d1, \u22ef\u27e9)\nh_dist_next_lt : failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)\nh_dist_curr_lt : failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation) :=\n  Binius.BinaryBasefold.fiberwise_dist_lt_imp_dist_lt L inst\u271d\u2078 inst\u271d\u2077 inst\u271d\u2076 \ud835\udd3dq inst\u271d\u2075 inst\u271d\u2074 h_Fq_char_prime\n    h_Fq_card_gt_1 inst\u271d\u00b3 r inst\u271d\u00b2 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 \u03d1 inst\u271d\u00b9 inst\u271d h_\u2113_add_R_rate \u27e8i_val, \u22ef\u27e9 h_bound f_i h_fw_dist_lt\n\u22a2 i_val < \u2113 + 1",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean#L264"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "49d13b425b0d9689dc4648ed66f046ed5f104c0d60399e731d07f967770839b7"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
        "commit": "b4a420deef68762a68898a4245f54fb1992b6f4c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
        "start_line": 86,
        "start_column": 2,
        "end_line": 86,
        "end_column": 7
      },
      "debug_info": {
        "goal": "d : \u2115\n\u22a2 _root_.IsConnected \u2191(LorentzGroup.restricted d)",
        "url": "https://github.com/HEPLean/PhysLean/blob/b4a420deef68762a68898a4245f54fb1992b6f4c/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L86"
      },
      "metadata": {
        "blame_email_hash": "f5ab4f28bed3",
        "blame_date": "2025-05-13T20:30:02+10:00",
        "inclusion_date": "2025-05-13T23:18:43.440253+00:00"
      },
      "id": "56d416332db27680a625dc9e3fcef645b48675ece9e1ee3f47398a3dcf1da58f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 77,
        "start_column": 70,
        "end_line": 77,
        "end_column": 75
      },
      "debug_info": {
        "goal": "a b c : \u211d\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c\nh\u2081 : c < a + b\nh\u2082 : b < a + c\nh\u2083 : a < b + c\n\u22a2 0 \u2264 a ^ 2 * b * (a - b) + b ^ 2 * c * (b - c) + c ^ 2 * a * (c - a)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L77"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "67b6bf7ff32c0c42533f710cf8dc0194b680e1c2d310cc18cd8d47538af3ab26"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_01.lean",
        "start_line": 190,
        "start_column": 2,
        "end_line": 190,
        "end_column": 7
      },
      "debug_info": {
        "goal": "H_log_le_primeCountingReal_add_one : \u2200 (n : \u2115), \u2200 x \u2265 \u2191n, x < \u2191n + 1 \u2192 Real.log x \u2264 \u2191(primeCountingReal x) + 1\n\u22a2 Tendsto primeCounting atTop atTop",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_01.lean#L190"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2023-08-01T09:36:18+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "7292efca8120c58d013c5825f896e6bbd72e3267eeb6f2ce0760eb246629a54d"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/5SolutionsAndDecompositions.lean",
        "start_line": 88,
        "start_column": 2,
        "end_line": 88,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m : Type u_1\ninst\u271d\u00b9 : Fintype m\ninst\u271d : DecidableEq m\nA : Matrix m m \u211d\nhA : A.IsSymm\n\u22a2 (\u2200 (x : m \u2192 \u211d), x \u2b1d\u1d65 A.mulVec x = 0) \u2192 A = 0",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/5SolutionsAndDecompositions.lean#L88"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2023-10-11T15:16:39+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "61aedc089a8efd41525fd4ade9b4e38ee330232b916f8be35f855c9c299eb0f7"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 4 - 5, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "3a31f762344cc10a3f4a285b9707d82eec683ef62d3bc53e24878d8351c81e69"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "R0-interpolant",
        "commit": "27899b297f54acabdd717207c8c34c4c86525664",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Foundation/Modal/MaximalConsistentSet.lean",
        "start_line": 191,
        "start_column": 4,
        "end_line": 191,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case inl\n\u03b1 : Type u_1\nS : Type u_2\ninst\u271d\u00b3 : Entailment (Formula \u03b1) S\n\ud835\udce2 : S\ninst\u271d\u00b2 : DecidableEq \u03b1\nT : FormulaSet \u03b1\ninst\u271d\u00b9 : Entailment.Cl \ud835\udce2\n\u03c6 : Formula \u03b1\ninst\u271d : Necessitation \ud835\udce2\nT_consis : @LO.Modal.FormulaSet.Consistent \u03b1 S inst\u271d\u00b3 \ud835\udce2 T\nh : \u223c\u25a1\u03c6 \u2208 T\nh\u0393 : \u2191\u2205 \u2286 {\u223c\u03c6}\n\u22a2 \u2191\u2205 *\u22ac[\ud835\udce2] \u22a5",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/27899b297f54acabdd717207c8c34c4c86525664/Foundation/Modal/MaximalConsistentSet.lean#L191"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-12T12:29:45+09:00",
        "inclusion_date": "2025-07-01T03:33:05.501046+00:00"
      },
      "id": "e25feb9c4719217b9aa4a597260188eba970dd45cade109560d2d40a8d6cb0f4"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "ineq_6_3_30",
        "commit": "04b2b281044042b8ed618a6f28a027fb295a168d",
        "lean_version": "v4.22.0-rc2"
      },
      "location": {
        "path": "Carleson/Antichain/Basic.lean",
        "start_line": 379,
        "start_column": 4,
        "end_line": 379,
        "end_column": 9
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Set (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \ud835\udd04\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\ng : X \u2192 \u2102\nhg : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nha : 4 \u2264 a\nhf1 : f = F.indicator 1 * f\nhq0 : 0 < nnq X\nh1q' : 1 \u2264 2 * nnq X / (nnq X + 1)\nhqq' : 2 * nnq X / (nnq X + 1) \u2264 nnq X\nhq'_inv : (2 * nnq X / (nnq X + 1) - 1)\u207b\u00b9 \u2264 3 * (nnq X - 1)\u207b\u00b9\n\u22a2 (MB volume \ud835\udd04 \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) fun x => \u2016f x\u2016) \u2264\n    maximalFunction volume \ud835\udd04 \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n      (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) fun x =>\n      \u2016f x\u2016 * (dens\u2082 \ud835\udd04).toReal ^ ((2 * \u2191(nnq X) / (\u2191(nnq X) + 1))\u207b\u00b9 - 2\u207b\u00b9)",
        "url": "https://github.com/fpvandoorn/carleson/blob/04b2b281044042b8ed618a6f28a027fb295a168d/Carleson/Antichain/Basic.lean#L379"
      },
      "metadata": {
        "blame_email_hash": "44a80a4a9c95",
        "blame_date": "2025-06-04T11:19:38+02:00",
        "inclusion_date": "2025-07-12T23:01:54.898186+00:00"
      },
      "id": "40aab5f2e8da72d6d8f32d06aef1a1d44578e400ff122b035d4c179a649b3a97"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-distribHaarChar-harder-results",
        "commit": "b2cbce8e4933bae37a3a22712e17cf6467d25edd",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "FLT/HaarMeasure/DistribHaarChar/LessBasic.lean",
        "start_line": 48,
        "start_column": 2,
        "end_line": 48,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9\u00b2 : TopologicalSpace R\ninst\u271d\u00b9\u00b9 : LocallyCompactSpace R\ninst\u271d\u00b9\u2070 : CommRing R\ninst\u271d\u2079 : IsTopologicalRing R\ninst\u271d\u2078 : MeasurableSpace R\ninst\u271d\u2077 : BorelSpace R\nS : Type u_2\ninst\u271d\u2076 : TopologicalSpace S\ninst\u271d\u2075 : LocallyCompactSpace S\ninst\u271d\u2074 : CommRing S\ninst\u271d\u00b3 : IsTopologicalRing S\ninst\u271d\u00b2 : MeasurableSpace S\ninst\u271d\u00b9 : BorelSpace S\ninst\u271d : SecondCountableTopologyEither R S\nr : R\u02e3\ns : S\u02e3\n\u22a2 (distribHaarChar (R \u00d7 S)) (MulEquiv.prodUnits.symm (r, s)) = (distribHaarChar R) r * (distribHaarChar S) s",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b2cbce8e4933bae37a3a22712e17cf6467d25edd/FLT/HaarMeasure/DistribHaarChar/LessBasic.lean#L48"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-04-14T15:27:33+01:00",
        "inclusion_date": "2025-04-14T23:58:47.451190+00:00"
      },
      "id": "009491d4d2ba3d50fda0bed62f549b9a80519cc7f21744b5aedfa1c50be971fc"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 128,
        "start_column": 2,
        "end_line": 128,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : Fintype \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\n\u22a2 \u2203 H x, \u2200 (a : \u03b1), averageDegree G / 2 \u2264 \u2191(H.degree a)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L128"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "0aecd8513d95a3c39227c935c1102befbd938dec0b9c8f84ce14971e67bf005d"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "2e77be9cea338c0508399688c5b87a0b6c0f1f45",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 2589,
        "start_column": 81,
        "end_line": 2589,
        "end_column": 86
      },
      "debug_info": {
        "goal": "T \u03c3\u2081 : \u211d\nholoOn : HolomorphicOn (deriv riemannZeta / riemannZeta) (Icc \u03c3\u2081 2 \u00d7\u2102 Icc (-T) T \\ {1})\n\u22a2 ContinuousOn (fun t => -deriv riemannZeta (\u2191\u03c3\u2081 + \u2191t * I) / riemannZeta (\u2191\u03c3\u2081 + \u2191t * I)) (Icc (-T) T)",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/2e77be9cea338c0508399688c5b87a0b6c0f1f45/PrimeNumberTheoremAnd/MediumPNT.lean#L2589"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-06-27T13:50:08-04:00",
        "inclusion_date": "2025-07-04T03:04:53.755747+00:00"
      },
      "id": "eb1ab2ad2113b2db25814c0d370cf27357886230f31d4721dbccb08d0912f1d0"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "definition-of-Cohen-Macaulay",
        "commit": "1ba8d5c4204315ecdf30f2549c09a350380ffbb2",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/RingTheory/Regular/Ischebeck.lean",
        "start_line": 97,
        "start_column": 95,
        "end_line": 97,
        "end_column": 100
      },
      "debug_info": {
        "goal": "R : Type u\ninst\u271d\u2074 : CommRing R\ninst\u271d\u00b3 : Small.{v, u} R\ninst\u271d\u00b2 : IsNoetherianRing R\nN M : ModuleCat R\ninst\u271d\u00b9 : Module.Finite R \u2191N\ninst\u271d : Module.Finite R \u2191M\ni : \u2115\n\u22a2 Module.Finite R (Ext N M i)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/1ba8d5c4204315ecdf30f2549c09a350380ffbb2/Mathlib/RingTheory/Regular/Ischebeck.lean#L97"
      },
      "metadata": {
        "blame_email_hash": "0aaeb3f219e2",
        "blame_date": "2025-05-23T12:46:36+08:00",
        "inclusion_date": "2025-06-17T03:15:58.577480+00:00"
      },
      "id": "d2d732f98f7f3bd347fabe817c77b4b176915c96fd6cb0a1f2a208afa4a03c34"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
        "start_line": 113,
        "start_column": 2,
        "end_line": 113,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\nhB : \u2119 B = 0\n\u22a2 \u2119(A|B) = 0",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L113"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "fb467e8a702c20860b6ab5281b83e6c6694b2764003c2bd702f1823787f01990"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean",
        "start_line": 266,
        "start_column": 46,
        "end_line": 266,
        "end_column": 51
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Fintype L\ninst\u271d\u2076 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2075 : Field \ud835\udd3dq\ninst\u271d\u2074 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u00b3 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b2 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u00b9 : NeZero \u03d1\ninst\u271d : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\ni_val : \u2115\nhi_dvd : \u03d1 \u2223 i_val\nh_bound : i_val + \u03d1 \u2264 \u2113\nf_i :\n  Binius.BinaryBasefold.OracleFunction L inst\u271d\u2078 inst\u271d\u2077 inst\u271d\u2076 \ud835\udd3dq inst\u271d\u2075 inst\u271d\u2074 h_Fq_char_prime h_Fq_card_gt_1 inst\u271d\u00b3 r\n    inst\u271d\u00b2 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8i_val, \u22ef\u27e9\nf_i_plus_\u03d1 :\n  Binius.BinaryBasefold.OracleFunction L inst\u271d\u2078 inst\u271d\u2077 inst\u271d\u2076 \ud835\udd3dq inst\u271d\u2075 inst\u271d\u2074 h_Fq_char_prime h_Fq_card_gt_1 inst\u271d\u00b3 r\n    inst\u271d\u00b2 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8i_val + \u03d1, \u22ef\u27e9\nchallenges : Fin \u03d1 \u2192 L\nh_fw_dist_lt :\n  2 *\n      \u2191(Binius.BinaryBasefold.fiberwiseDistance L inst\u271d\u2078 inst\u271d\u2077 inst\u271d\u2076 \ud835\udd3dq inst\u271d\u2075 inst\u271d\u2074 h_Fq_char_prime h_Fq_card_gt_1\n          inst\u271d\u00b3 r inst\u271d\u00b2 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8i_val, \u22ef\u27e9 \u03d1 inst\u271d\u00b9 h_bound f_i) <\n    \u2191(Binius.BinaryBasefold.BBF_CodeDistance \u2113 \ud835\udce1 \u27e8i_val + \u03d1, \u22ef\u27e9)\nh_dist_next_lt : failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)\nh_dist_curr_lt : failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation) :=\n  Binius.BinaryBasefold.fiberwise_dist_lt_imp_dist_lt L inst\u271d\u2078 inst\u271d\u2077 inst\u271d\u2076 \ud835\udd3dq inst\u271d\u2075 inst\u271d\u2074 h_Fq_char_prime\n    h_Fq_card_gt_1 inst\u271d\u00b3 r inst\u271d\u00b2 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 \u03d1 inst\u271d\u00b9 inst\u271d h_\u2113_add_R_rate \u27e8i_val, \u22ef\u27e9 h_bound f_i h_fw_dist_lt\nf_bar_i : Binius.BinaryBasefold.OracleFunction L inst\u271d\u2078 inst\u271d\u2077 inst\u271d\u2076 \ud835\udd3dq inst\u271d\u2075 inst\u271d\u2074 h_Fq_char_prime h_Fq_card_gt_1\n  inst\u271d\u00b3 r inst\u271d\u00b2 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191\u27e8i_val, \u22ef\u27e9, \u22ef\u27e9 :=\n  Binius.BinaryBasefold.uniqueClosestCodeword L inst\u271d\u2078 inst\u271d\u2077 inst\u271d\u2076 \ud835\udd3dq inst\u271d\u2075 inst\u271d\u2074 h_Fq_char_prime h_Fq_card_gt_1\n    inst\u271d\u00b3 r inst\u271d\u00b2 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8i_val, \u22ef\u27e9 f_i h_dist_curr_lt\n\u22a2 i_val + \u03d1 < \u2113 + 1",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean#L266"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "7557b2d5965b9aa3ca6d9b0b9fa3cfeb1ddb1068d3c507d5f8a4633c363aee89"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "EMwave",
        "commit": "1a485b181fd479295c2fb42f33cf1c2537bd8f08",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PhysLean/Electromagnetism/Wave.lean",
        "start_line": 212,
        "start_column": 2,
        "end_line": 212,
        "end_column": 7
      },
      "debug_info": {
        "goal": "OM : OpticalMedium\nt : Time\nx : Space\n_p\u271d : ENNReal\ns : WithLp _p\u271d (Fin 3 \u2192 \u211d)\nE : ElectricField\nB : MagneticField\n\u22a2 \u221a(OM.\u03bc \u2022 OM.\u03b5)\u207b\u00b9 \u2022 B t x =\n    (WithLp.equiv 2 (Fin 3 \u2192 \u211d)).symm\n      ((crossProduct ((WithLp.equiv _p\u271d (Fin 3 \u2192 \u211d)) s)) ((WithLp.equiv 2 (Fin 3 \u2192 \u211d)) (E t x)))",
        "url": "https://github.com/HEPLean/PhysLean/blob/1a485b181fd479295c2fb42f33cf1c2537bd8f08/PhysLean/Electromagnetism/Wave.lean#L212"
      },
      "metadata": {
        "blame_email_hash": "95cd4b9b9759",
        "blame_date": "2025-05-11T15:58:00+01:00",
        "inclusion_date": "2025-05-11T23:32:56.403083+00:00"
      },
      "id": "6b6eba850caddc1f1c4115e76da72fe13cc0dedc9e47bcdbbaa861d65fd3d767"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 87,
        "start_column": 23,
        "end_line": 87,
        "end_column": 28
      },
      "debug_info": {
        "goal": "x y z : \u211d\nh\u2080 : x \u2260 0\nh\u2081 : 2 * x = 5 * y\nh\u2082 : 7 * y = 10 * z\n\u22a2 z / x = 7 / 25",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L87"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "a4eb804f5f1df69b978fc8edb4dbe8efd06f96cd3a8945d99dbe326262398663"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_03.lean",
        "start_line": 36,
        "start_column": 2,
        "end_line": 36,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k n : \u2115\nh : n \u2265 2 * k\n\u22a2 \u2203 p > k, Nat.Prime p \u2227 p \u2223 n.choose k",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_03.lean#L36"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2023-07-11T14:23:06+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "6224ba430a40197d5782501ced577fd19d778a09b10e61fb647984790f59c211"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/5SolutionsAndDecompositions.lean",
        "start_line": 166,
        "start_column": 2,
        "end_line": 166,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : Type u_2\ninst\u271d\u00b9 : Fintype n\ninst\u271d : DecidableEq n\nA : Matrix n n \u211d\nhA : A.IsHermitian\np : \u2115\nthis : (A ^ p).IsHermitian\n\u22a2 (A ^ p).trace = \u2211 i, hA.eigenvalues i ^ p",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/5SolutionsAndDecompositions.lean#L166"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2023-10-11T15:16:39+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "e64a4d95c250fabc2f6c25eb54135463679d9c9b668de1b6669fbf4971c5c74e"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 5 - 5, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "65579631a3df714f74b29fb7ec81c7d5c51d1f77f089f4bfaa1fe3b58c0447f1"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "R0-interpolant",
        "commit": "27899b297f54acabdd717207c8c34c4c86525664",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Foundation/Modal/MaximalConsistentSet.lean",
        "start_line": 194,
        "start_column": 4,
        "end_line": 194,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case inr\n\u03b1 : Type u_1\nS : Type u_2\ninst\u271d\u00b3 : Entailment (Formula \u03b1) S\n\ud835\udce2 : S\ninst\u271d\u00b2 : DecidableEq \u03b1\nT : FormulaSet \u03b1\ninst\u271d\u00b9 : Entailment.Cl \ud835\udce2\n\u03c6 : Formula \u03b1\ninst\u271d : Necessitation \ud835\udce2\nT_consis : @LO.Modal.FormulaSet.Consistent \u03b1 S inst\u271d\u00b3 \ud835\udce2 T\nh : \u223c\u25a1\u03c6 \u2208 T\nh\u0393 : \u2191{\u223c\u03c6} \u2286 {\u223c\u03c6}\n\u22a2 \u2191{\u223c\u03c6} *\u22ac[\ud835\udce2] \u22a5",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/27899b297f54acabdd717207c8c34c4c86525664/Foundation/Modal/MaximalConsistentSet.lean#L194"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-12T12:29:45+09:00",
        "inclusion_date": "2025-07-01T03:33:05.501046+00:00"
      },
      "id": "55e592a9725ea25d2dfebbc4c920bcbf6fad061b36b8b95aaf81d1dbcaa939f0"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "ineq_6_3_30",
        "commit": "04b2b281044042b8ed618a6f28a027fb295a168d",
        "lean_version": "v4.22.0-rc2"
      },
      "location": {
        "path": "Carleson/Antichain/Basic.lean",
        "start_line": 385,
        "start_column": 4,
        "end_line": 385,
        "end_column": 9
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Set (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \ud835\udd04\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\ng : X \u2192 \u2102\nhg : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nha : 4 \u2264 a\nhf1 : f = F.indicator 1 * f\nhq0 : 0 < nnq X\nh1q' : 1 \u2264 2 * nnq X / (nnq X + 1)\nhqq' : 2 * nnq X / (nnq X + 1) \u2264 nnq X\nhq'_inv : (2 * nnq X / (nnq X + 1) - 1)\u207b\u00b9 \u2264 3 * (nnq X - 1)\u207b\u00b9\nhMB_le :\n  (MB volume \ud835\udd04 \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) fun x => \u2016f x\u2016) \u2264\n    maximalFunction volume \ud835\udd04 \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n      (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) fun x =>\n      \u2016f x\u2016 * (dens\u2082 \ud835\udd04).toReal ^ ((2 * \u2191(nnq X) / (\u2191(nnq X) + 1))\u207b\u00b9 - 2\u207b\u00b9)\n\u22a2 eLpNorm (fun x => \u2191\u2191(MB volume \ud835\udd04 \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) f x).toNNReal) 2 volume \u2264\n    eLpNorm\n        (fun x =>\n          \u2191\u2191(maximalFunction volume \ud835\udd04 \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n                  (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) f x).toNNReal)\n        2 volume *\n      dens\u2082 \ud835\udd04",
        "url": "https://github.com/fpvandoorn/carleson/blob/04b2b281044042b8ed618a6f28a027fb295a168d/Carleson/Antichain/Basic.lean#L385"
      },
      "metadata": {
        "blame_email_hash": "44a80a4a9c95",
        "blame_date": "2025-06-04T11:19:38+02:00",
        "inclusion_date": "2025-07-12T23:01:54.898186+00:00"
      },
      "id": "f1328a5854b399a5caf20f000155f5f9eb94da8b16e03ea79d861aec9d852781"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-adele-refactor",
        "commit": "c5f85a01641c0135f6e95906e74b59461497f5cf",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "FLT/NumberField/AdeleRing.lean",
        "start_line": 170,
        "start_column": 4,
        "end_line": 170,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case h.refine_1.ht\nintegralAdeles : Set (FiniteAdeleRing (\ud835\udcde \u211a) \u211a) :=\n  {f |\n    \u2200 (v : IsDedekindDomain.HeightOneSpectrum (\ud835\udcde \u211a)),\n      f v \u2208 IsDedekindDomain.HeightOneSpectrum.adicCompletionIntegers \u211a v}\n\u22a2 IsOpen integralAdeles",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/c5f85a01641c0135f6e95906e74b59461497f5cf/FLT/NumberField/AdeleRing.lean#L170"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-04-06T18:09:43+01:00",
        "inclusion_date": "2025-04-14T23:44:51.413177+00:00"
      },
      "id": "7ff98dbd552c3feaca88b99da397b1db5fd47b3a853e70778b49ce125fcec19d"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "99a77d19845fb8083456331fd1256bf35a48f60c",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 145,
        "start_column": 2,
        "end_line": 145,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : Fintype \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\n\u22a2 (\u2203 \ud835\udc9c,\n      (\u2200 (p q : (a : \u03b1) \u00d7 G.Path a a), (\u2191p.snd).edges.Disjoint (\u2191q.snd).edges) \u2227\n        \u2200 (e : Sym2 \u03b1), \u2203 p \u2208 \ud835\udc9c, e \u2208 (\u2191p.snd).edges) \u2194\n    \u2200 (a : \u03b1), Even (G.degree a)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/99a77d19845fb8083456331fd1256bf35a48f60c/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L145"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-09-08T22:03:06.847248+00:00"
      },
      "id": "d7953a910215be5bec26362f81ddcd5a90cae89d3475f771d64b6f20452d4f38"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "542a73dde1103e9681a905980679679a767cce8f",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 2709,
        "start_column": 10,
        "end_line": 2709,
        "end_column": 15
      },
      "debug_info": {
        "goal": "case hf.hf.hf.hg.hcont\nSmoothingF : \u211d \u2192 \u211d\n\u03b5 : \u211d\n\u03b5_pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\nX : \u211d\nx\u271d : 3 < X\nT : \u211d\nT_pos : 3 < T\n\u03c3\u2081 \u03c3\u2082 : \u211d\n\u03c3\u2082_pos : 0 < \u03c3\u2082\n\u03c3\u2081_lt_one : \u03c3\u2081 < 1\n\u03c3\u2082_lt_\u03c3\u2081 : \u03c3\u2082 < \u03c3\u2081\nholoOn : HolomorphicOn (deriv riemannZeta / riemannZeta) (Icc \u03c3\u2081 2 \u00d7\u2102 Icc (-T) T \\ {1})\nholoOn2 : HolomorphicOn (SmoothedChebyshevIntegrand SmoothingF \u03b5 X) (Icc \u03c3\u2082 2 \u00d7\u2102 Icc (-3) 3 \\ {1})\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\ndiff_SmoothingF : ContDiff \u211d 1 SmoothingF\nz : \u2102 := \u2191\u03c3\u2082 - 3 * I\nw : \u2102 := \u2191\u03c3\u2081 + 3 * I\n\u03c3\u2081_pos : 0 < \u03c3\u2081\nsub : z.Rectangle w \u2286 Icc \u03c3\u2082 2 \u00d7\u2102 Icc (-3) 3 \\ {1}\nzero_over_box : RectangleIntegral (SmoothedChebyshevIntegrand SmoothingF \u03b5 X) z w = 0\nt : \u211d\nt_mem : t \u2208 Icc (-T) T\n\u22a2 ContinuousAt (fun x => MellinTransform (fun x => \u2191(Smooth1 SmoothingF \u03b5 x)) (\u2191\u03c3\u2081 + \u2191x * I)) t",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/542a73dde1103e9681a905980679679a767cce8f/PrimeNumberTheoremAnd/MediumPNT.lean#L2709"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-06-27T13:50:08-04:00",
        "inclusion_date": "2025-07-03T03:04:39.160667+00:00"
      },
      "id": "bd55977089c92e8908f9bcb6f933767c714e0f2db7e64b07fb69269f27861938"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "50d1283ac830e0464671949a4ee23f70eda09242",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7order.lean",
        "start_line": 226,
        "start_column": 6,
        "end_line": 226,
        "end_column": 11
      },
      "debug_info": {
        "goal": "z\u2080 : \u2102\nf : \u2102 \u2192 \u2102\nhf\u271d : AnalyticAt \u2102 f z\u2080\nhzero : f z\u2080 = 0\nr : \u211d\nhB : 0 < r \u2227 AnalyticOnNhd \u2102 f (Metric.ball z\u2080 r)\n\u03b5 : \u211d\nh\u03b5 : \u03b5 > 0\nhball : \u2200 y \u2208 Metric.ball z\u2080 \u03b5, deriv f y = 0\nhf : DifferentiableOn \u2102 f (Metric.ball z\u2080 r)\nhg : DifferentiableOn \u2102 (fun x => 0) (Metric.ball z\u2080 r)\nx : \u2102\nthis : dist x z\u2080 < \u03b5 \u2192 deriv f x = 0\n\u22a2 dist x z\u2080 < r \u2192 deriv f x = 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/50d1283ac830e0464671949a4ee23f70eda09242/Mathlib/NumberTheory/h7order.lean#L226"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-05-20T18:06:07+02:00",
        "inclusion_date": "2025-05-21T03:02:42.449798+00:00"
      },
      "id": "d44e30639fc612ebb0a96ca1bceb7c6574aa34ed58820e8783c1d1c543442b00"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
        "start_line": 126,
        "start_column": 2,
        "end_line": 126,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\nhA : \u2119 A \u2260 0\nhB : \u2119 B \u2260 0\n\u22a2 \u2119(A|B) = \u2119 A * \u2119(B|A) / \u2119 B",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L126"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "b9b6d794bf0fd543ef37805109dacd50932254d635086815acf843d35d79ff06"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean",
        "start_line": 330,
        "start_column": 58,
        "end_line": 330,
        "end_column": 63
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Fintype L\ninst\u271d\u2076 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2075 : Field \ud835\udd3dq\ninst\u271d\u2074 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u00b3 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b2 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u00b9 : NeZero \u03d1\ninst\u271d : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\ni_round : Fin (\u2113 + 1)\nk : \u2115\nhk_dvd : \u03d1 \u2223 k\n\u22a2 k < \u2113 + 1",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean#L330"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "58464f7f8e2945824b19560ef4506a26f8c6143207585ad49ec251aa58a1c5a7"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "EMwave",
        "commit": "1a485b181fd479295c2fb42f33cf1c2537bd8f08",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PhysLean/Electromagnetism/Wave.lean",
        "start_line": 217,
        "start_column": 2,
        "end_line": 217,
        "end_column": 7
      },
      "debug_info": {
        "goal": "OM : OpticalMedium\nt : Time\nx : Space\n_p\u271d : ENNReal\ns : WithLp _p\u271d (Fin 3 \u2192 \u211d)\nE : ElectricField\nB : MagneticField\n\u22a2 \u221a(OM.\u03bc \u2022 OM.\u03b5)\u207b\u00b9 \u2022 E t x =\n    (WithLp.equiv 2 (Fin 3 \u2192 \u211d)).symm\n      ((crossProduct ((WithLp.equiv _p\u271d (Fin 3 \u2192 \u211d)) s)) ((WithLp.equiv 2 (Fin 3 \u2192 \u211d)) (B t x)))",
        "url": "https://github.com/HEPLean/PhysLean/blob/1a485b181fd479295c2fb42f33cf1c2537bd8f08/PhysLean/Electromagnetism/Wave.lean#L217"
      },
      "metadata": {
        "blame_email_hash": "95cd4b9b9759",
        "blame_date": "2025-05-11T15:58:00+01:00",
        "inclusion_date": "2025-05-11T23:32:56.403083+00:00"
      },
      "id": "b4b84951b233c073f2979b62b63ff4f573acab44aa89beed1becaa52ff8ffa8f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 92,
        "start_column": 18,
        "end_line": 92,
        "end_column": 23
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : 2 + 1 / (1 + 1 / (2 + 2 / (3 + x))) = 144 / 53\n\u22a2 x = 3 / 4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L92"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "bcd0c2fd54d0fe6d7e2a6e5f2eea90eb4d69837cd2956fd02d5328069f047298"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_03.lean",
        "start_line": 96,
        "start_column": 45,
        "end_line": 96,
        "end_column": 50
      },
      "debug_info": {
        "goal": "n k p l : \u2115\nh_klen : k \u2264 n\nh_klp : k < p\nhp : Nat.Prime p\nh_pow_div : p ^ l \u2223 n.descFactorial k\nh_1lel : 1 \u2264 l\n\u22a2 \u2203 i \u2264 k - 1, p ^ l \u2223 n - i",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_03.lean#L96"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2023-07-11T14:23:06+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "61cff418f246c536596892609d7a8b7671777cebbf021875865c1c927f3f9f57"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/5SolutionsAndDecompositions.lean",
        "start_line": 170,
        "start_column": 2,
        "end_line": 170,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : Type u_2\ninst\u271d\u00b9 : Fintype n\ninst\u271d : DecidableEq n\nA : Matrix n n \u211d\nc : \u211d\nhA : A.IsHermitian\n\u22a2 \u22ef.eigenvalues = 1 + c \u2022 hA.eigenvalues",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/5SolutionsAndDecompositions.lean#L170"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2023-10-11T15:16:39+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "5b5e4298693bace39905cc0e3fbfcb3cb3fd0f81ae922eeb4b32c0f49d794674"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 6 - 5, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "2427a12149ad60f3da8c4a82c3692bddef73e3da3a708d8e2851103641dd9f7a"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "update-v4.19.0-todo",
        "commit": "18f052e7e0c36d237929ba35c9f4309f5f26709a",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Foundation/Incompleteness/Arith/FixedPoint.lean",
        "start_line": 103,
        "start_column": 46,
        "end_line": 103,
        "end_column": 51
      },
      "debug_info": {
        "goal": "T : Theory \u2112\u2092\u1d63\ninst\u271d : \ud835\udc08\ud835\udeba\u2081 \u2aaf T\n\u03b8 : Semisentence \u2112\u2092\u1d63 1\n\u22a2 T \u22a2!. LO.FirstOrder.Arith.fixpoint \u03b8 \u2b64 \u03b8/[\u231cLO.FirstOrder.Arith.fixpoint \u03b8\u231d]",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/18f052e7e0c36d237929ba35c9f4309f5f26709a/Foundation/Incompleteness/Arith/FixedPoint.lean#L103"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-10T03:41:27+09:00",
        "inclusion_date": "2025-05-09T23:36:15.688372+00:00"
      },
      "id": "3839c90ea77b3cd1895e46714ebd131b931158e42715c83e3c5eb5aa6eb980c8"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "ineq_6_3_30",
        "commit": "04b2b281044042b8ed618a6f28a027fb295a168d",
        "lean_version": "v4.22.0-rc2"
      },
      "location": {
        "path": "Carleson/Antichain/Basic.lean",
        "start_line": 420,
        "start_column": 6,
        "end_line": 420,
        "end_column": 11
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Set (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \ud835\udd04\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\ng : X \u2192 \u2102\nhg : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nha : 4 \u2264 a\nhf1 : f = F.indicator 1 * f\nhq0 : 0 < nnq X\nh1q' : 1 \u2264 2 * nnq X / (nnq X + 1)\nhqq' : 2 * nnq X / (nnq X + 1) \u2264 nnq X\nhq'_inv : (2 * nnq X / (nnq X + 1) - 1)\u207b\u00b9 \u2264 3 * (nnq X - 1)\u207b\u00b9\nhMB_le :\n  (MB volume \ud835\udd04 \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) fun x => \u2016f x\u2016) \u2264\n    maximalFunction volume \ud835\udd04 \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n      (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) fun x =>\n      \u2016f x\u2016 * (dens\u2082 \ud835\udd04).toReal ^ ((2 * \u2191(nnq X) / (\u2191(nnq X) + 1))\u207b\u00b9 - 2\u207b\u00b9)\nhMB_le' :\n  eLpNorm (fun x => \u2191\u2191(MB volume \ud835\udd04 \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) f x).toNNReal) 2 volume \u2264\n    eLpNorm\n        (fun x =>\n          \u2191\u2191(maximalFunction volume \ud835\udd04 \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n                  (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) f x).toNNReal)\n        2 volume *\n      dens\u2082 \ud835\udd04\nh_div_le_div :\n  (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2) / (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2) \u2264\n    2 ^ 2 / (2 * \u2191(nnq X) / (\u2191(nnq X) + 1) - 1)\nhMBp\u2081_le :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume \ud835\udd04 \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n            (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) f x).toReal)\n      2 volume \u2264\n    2 ^ (2 * a + 2) / (2 * \u2191(nnq X) / (\u2191(nnq X) + 1) - 1) * eLpNorm f 2 volume\n\u22a2 \u2191\u2016\u222b (x : X), (starRingEnd \u2102) (g x) * carlesonSum \ud835\udd04 f x\u2016\u208a \u2264 eLpNorm g 2 volume * eLpNorm (carlesonSum \ud835\udd04 f) 2 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/04b2b281044042b8ed618a6f28a027fb295a168d/Carleson/Antichain/Basic.lean#L420"
      },
      "metadata": {
        "blame_email_hash": "44a80a4a9c95",
        "blame_date": "2025-06-04T11:19:38+02:00",
        "inclusion_date": "2025-07-12T23:01:54.898186+00:00"
      },
      "id": "ce4362c2d0f41cd8d3f1a6a24b3090bc3070ea2f7ea993854c093cdf1491ef08"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-rigidification-refactor",
        "commit": "aa6d8c9e1d5f5b404fac024c800062d156669ef0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/QuaternionAlgebra/NumberField.lean",
        "start_line": 213,
        "start_column": 87,
        "end_line": 213,
        "end_column": 92
      },
      "debug_info": {
        "goal": "F : Type u_1\ninst\u271d\u2074 : Field F\ninst\u271d\u00b3 : NumberField F\nD : Type u_2\ninst\u271d\u00b2 : Ring D\ninst\u271d\u00b9 : Algebra F D\ninst\u271d : IsQuaternionAlgebra F D\nS : Finset (HeightOneSpectrum (\ud835\udcde F))\n\u22a2 Module.Finite (FiniteAdeleRing (\ud835\udcde F) F) (D \u2297[F] FiniteAdeleRing (\ud835\udcde F) F)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/aa6d8c9e1d5f5b404fac024c800062d156669ef0/FLT/QuaternionAlgebra/NumberField.lean#L213"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-04-04T17:21:54+01:00",
        "inclusion_date": "2025-04-05T01:25:01.623280+00:00"
      },
      "id": "77d883852a3a57f13c9c67e2b2b4a11a04b867d157857bff82e2313ea837a85f"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "99a77d19845fb8083456331fd1256bf35a48f60c",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 160,
        "start_column": 2,
        "end_line": 160,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : Fintype \u03b1\ninst\u271d : DecidableEq \u03b1\nn : \u2115\n\u22a2 (\u2203 G x k, G.IsRegularOfDegree k \u2227 G.cliqueNum = n) \u2194 n \u2264 card \u03b1 / 2 \u2228 n = card \u03b1",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/99a77d19845fb8083456331fd1256bf35a48f60c/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L160"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-09-08T22:03:06.847248+00:00"
      },
      "id": "478e69d908c773e257e6e8c547cd494a42f598565e7b9d2f3bda2b9447eb2612"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "faabe6281bf4c0ffe761835e61488b9e0d69c6cd",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 6453,
        "start_column": 43,
        "end_line": 6453,
        "end_column": 48
      },
      "debug_info": {
        "goal": "c : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\nX\u2080 : \u211d := sorry\nX : \u211d\nX_ge_X\u2080 : X \u2265 X\u2080\nX_gt_3 : 3 < X\n\u03b5 : \u211d := sorry\n\u03b5_pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\n\u03bd : \u211d \u2192 \u211d\nContDiff\u03bd : ContDiff \u211d (\u2191\u22a4) \u03bd\n\u03bd_nonneg' : \u2200 (x : \u211d), 0 \u2264 \u03bd x\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\n\u03bd_massOne' : \u222b (x : \u211d) in Ici 0, \u03bd x / x = 1\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\n\u03c8_\u03b5_of_X : \u2102 := SmoothedChebyshev \u03bd \u03b5 X\nC_unsmoothing : \u211d\nC_unsmoothing_pos : C_unsmoothing > 0\nhC : \u2016\u2191(ChebyshevPsi X) - \u03c8_\u03b5_of_X\u2016 \u2264 C_unsmoothing * X * \u03b5 * Real.log X\nT : \u211d := sorry\nT_gt_3 : 3 < T\nA : \u211d := sorry\nA_in_Ioo : A \u2208 Ioo 0 (1 / 2)\n\u03c3\u2081 : \u211d := 1 - A / Real.log T ^ 9\n\u03c3\u2082 : \u211d := sorry\n\u22a2 \u2016\u03c8_\u03b5_of_X - MellinTransform (fun x => \u2191(Smooth1 \u03bd \u03b5 x)) 1 * \u2191X\u2016 \u2264\n    \u2016I\u2081 \u03bd \u03b5 T X\u2016 + \u2016I\u2082 \u03bd \u03b5 X T \u03c3\u2081\u2016 + \u2016I\u2083 \u03bd \u03b5 X T \u03c3\u2081\u2016 + \u2016I\u2084 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 + \u2016I\u2085 \u03bd \u03b5 X \u03c3\u2082\u2016 + \u2016I\u2086 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 +\n          \u2016I\u2087 \u03bd \u03b5 T X \u03c3\u2081\u2016 +\n        \u2016I\u2088 \u03bd \u03b5 X T \u03c3\u2081\u2016 +\n      \u2016I\u2089 \u03bd \u03b5 X T\u2016",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/faabe6281bf4c0ffe761835e61488b9e0d69c6cd/PrimeNumberTheoremAnd/MediumPNT.lean#L6453"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-06-27T13:01:00-04:00",
        "inclusion_date": "2025-07-11T23:19:26.707212+00:00"
      },
      "id": "48742cf43b0d8ba1e34e1b17bd7bcdc02e836f3bc052bee3e4031e8eb58c8cdb"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "50d1283ac830e0464671949a4ee23f70eda09242",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7order.lean",
        "start_line": 233,
        "start_column": 6,
        "end_line": 233,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case mp.intro.intro.intro.refine_3\nz\u2080 : \u2102\nf : \u2102 \u2192 \u2102\nhf\u271d : AnalyticAt \u2102 f z\u2080\nhzero : f z\u2080 = 0\nr : \u211d\nhB : 0 < r \u2227 AnalyticOnNhd \u2102 f (Metric.ball z\u2080 r)\n\u03b5 : \u211d\nh\u03b5 : \u03b5 > 0\nhball : \u2200 y \u2208 Metric.ball z\u2080 \u03b5, deriv f y = 0\nhf : DifferentiableOn \u2102 f (Metric.ball z\u2080 r)\nhg : DifferentiableOn \u2102 (fun x => 0) (Metric.ball z\u2080 r)\nhf' : EqOn (deriv f) (deriv fun x => 0) (Metric.ball z\u2080 r)\nhx : z\u2080 \u2208 Metric.ball z\u2080 r\nthis : f z\u2080 = 0 \u2192 EqOn f (fun x => 0) (Metric.ball z\u2080 r)\n\u22a2 \u2203 \u03b5 > 0, \u2200 y \u2208 Metric.ball z\u2080 \u03b5, f y = 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/50d1283ac830e0464671949a4ee23f70eda09242/Mathlib/NumberTheory/h7order.lean#L233"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-05-20T18:06:07+02:00",
        "inclusion_date": "2025-05-21T03:02:42.449798+00:00"
      },
      "id": "22e7e7a93cacc2a6f40aeb1b9a55bcb05d2780ba0308e643c1d8b8dbf6a19c16"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
        "start_line": 136,
        "start_column": 2,
        "end_line": 136,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\n\u22a2 \u2119(A|B) = \u2119 A * \u2119(B|A) / \u2119 B",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L136"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "62759d0fbdfa04ae04a63e63ec6fd0e75081cac92966d39e10e50fa9921fb367"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean",
        "start_line": 338,
        "start_column": 28,
        "end_line": 338,
        "end_column": 33
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Fintype L\ninst\u271d\u2076 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2075 : Field \ud835\udd3dq\ninst\u271d\u2074 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u00b3 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b2 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u00b9 : NeZero \u03d1\ninst\u271d : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\ni_round : Fin (\u2113 + 1)\nprover_oracles :\n  (k : \u2115) \u2192\n    \u03d1 \u2223 k \u2192\n      Binius.BinaryBasefold.OracleFunction L inst\u271d\u2078 inst\u271d\u2077 inst\u271d\u2076 \ud835\udd3dq inst\u271d\u2075 inst\u271d\u2074 h_Fq_char_prime h_Fq_card_gt_1 inst\u271d\u00b3\n        r inst\u271d\u00b2 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8k, \u22ef\u27e9\nchallenges : (k : \u2115) \u2192 \u03d1 \u2223 k \u2192 Fin \u03d1 \u2192 L\nk : \u2115\nj : \u2115 := \u22ef\nh_completed : j + \u03d1 < \u2191i_round\n\u22a2 \u03d1 \u2223 j",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean#L338"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "a5f4ff6295e28409e77411d000c14d474fcb8b089fe54e4ce7d331b7062b7f90"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
        "commit": "2dbc9fa07763e1cc9ab295138ccd44accf9836df",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
        "start_line": 104,
        "start_column": 2,
        "end_line": 104,
        "end_column": 7
      },
      "debug_info": {
        "goal": "d : \u2115\n\u22a2 \u2191(restricted d) = connectedComponent 1",
        "url": "https://github.com/HEPLean/PhysLean/blob/2dbc9fa07763e1cc9ab295138ccd44accf9836df/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L104"
      },
      "metadata": {
        "blame_email_hash": "f5ab4f28bed3",
        "blame_date": "2025-05-05T23:32:38+10:00",
        "inclusion_date": "2025-05-05T23:34:56.673364+00:00"
      },
      "id": "d423a3a69947e84ef4b30c8cce205a385382b038d2985eddc62508a96c43620b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 95,
        "start_column": 47,
        "end_line": 95,
        "end_column": 52
      },
      "debug_info": {
        "goal": "\u22a2 1 * 3 * 5 * 7 * 9 * 11 * 13 % 10 = 5",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L95"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "e09ce7f2251b9a5651ffa3b3e1add5f5eae9cdfe560138be9d160771e2e3a981"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_03.lean",
        "start_line": 149,
        "start_column": 7,
        "end_line": 149,
        "end_column": 12
      },
      "debug_info": {
        "goal": "case inl\nl m n : \u2115\nh_2lel : 2 \u2264 l\nk : \u2115\nh_4lek : 4 \u2264 k\nh_klen4 : k \u2264 n - 4\nh : 2 * k \u2264 n\nh_klen : k \u2264 n\nh_1lel : 1 \u2264 l\nH : n.choose k = m ^ l\nh\u2081 : \u2203 p, Nat.Prime p \u2227 p ^ l \u2264 n \u2227 k ^ l < p ^ l \u2227 k ^ 2 \u2264 k ^ l\nh\u271d : l = 2\n\u22a2 False",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_03.lean#L149"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2023-07-11T14:23:06+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "3f6662aef1cc6548c9e36b449d8954fe81c64f12f1c947c451e123a16ce1b450"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/5SolutionsAndDecompositions.lean",
        "start_line": 174,
        "start_column": 2,
        "end_line": 174,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : Type u_2\ninst\u271d\u00b9 : Fintype n\ninst\u271d : DecidableEq n\nA : Matrix n n \u211d\nhA : A.IsHermitian\nc : \u211d\n\u22a2 \u22ef.eigenvalues = hA.eigenvalues - Function.const n c",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/5SolutionsAndDecompositions.lean#L174"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2023-10-11T15:16:39+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "99b131c6e511493ea0fdbf7cbc121a278d02a3a10497f212f7ba7a7f3a9fa452"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 7 - 5, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "4529f7c0345c3f1f556463a98a873bc2d898e214f552395d901fe00962abd86c"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "bounded-depth",
        "commit": "2efcba7c9d835e9969977f8470ca9640e1f7cbd7",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Propositional/Kripke/AxiomBoundDepth.lean",
        "start_line": 186,
        "start_column": 6,
        "end_line": 186,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case succ.inr\nF : Frame\nn : \u2115\nih :\n  \u2200 {l : List F.World} (hl\u2081 : l.length = n + 2),\n    List.Chain' (fun x1 x2 => x1 \u227a x2) l \u2192\n      Satisfies { toFrame := F, Val := cascadeVal l (n + 1) \u22ef } (l.head \u22ef) (Axioms.BoundDepth' n) \u2192 \u00acl.Nodup\nl : List F.World\nhl\u2081 : l.length = n + 1 + 2\nhl\u2082 : List.Chain' (fun x1 x2 => x1 \u227a x2) l\nh : l.head \u22ef \u22a7 atom (n + 1) \u279d Axioms.BoundDepth' n\n\u22a2 \u00acl.tail.Nodup",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/2efcba7c9d835e9969977f8470ca9640e1f7cbd7/Foundation/Propositional/Kripke/AxiomBoundDepth.lean#L186"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-08T18:22:14+09:00",
        "inclusion_date": "2025-05-08T23:32:25.978477+00:00"
      },
      "id": "93ee070cc7ad655cf36227ba769be9d6f633c6786af00b0c283357f921d35a7f"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "ineq_6_3_30",
        "commit": "04b2b281044042b8ed618a6f28a027fb295a168d",
        "lean_version": "v4.22.0-rc2"
      },
      "location": {
        "path": "Carleson/Antichain/Basic.lean",
        "start_line": 428,
        "start_column": 6,
        "end_line": 428,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case bc\nX : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Set (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \ud835\udd04\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\ng : X \u2192 \u2102\nhg : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nha : 4 \u2264 a\nhf1 : f = F.indicator 1 * f\nhq0 : 0 < nnq X\nh1q' : 1 \u2264 2 * nnq X / (nnq X + 1)\nhqq' : 2 * nnq X / (nnq X + 1) \u2264 nnq X\nhq'_inv : (2 * nnq X / (nnq X + 1) - 1)\u207b\u00b9 \u2264 3 * (nnq X - 1)\u207b\u00b9\nhMB_le :\n  (MB volume \ud835\udd04 \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) fun x => \u2016f x\u2016) \u2264\n    maximalFunction volume \ud835\udd04 \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n      (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) fun x =>\n      \u2016f x\u2016 * (dens\u2082 \ud835\udd04).toReal ^ ((2 * \u2191(nnq X) / (\u2191(nnq X) + 1))\u207b\u00b9 - 2\u207b\u00b9)\nhMB_le' :\n  eLpNorm (fun x => \u2191\u2191(MB volume \ud835\udd04 \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) f x).toNNReal) 2 volume \u2264\n    eLpNorm\n        (fun x =>\n          \u2191\u2191(maximalFunction volume \ud835\udd04 \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n                  (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) f x).toNNReal)\n        2 volume *\n      dens\u2082 \ud835\udd04\nh_div_le_div :\n  (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2) / (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2) \u2264\n    2 ^ 2 / (2 * \u2191(nnq X) / (\u2191(nnq X) + 1) - 1)\nhMBp\u2081_le :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume \ud835\udd04 \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n            (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) f x).toReal)\n      2 volume \u2264\n    2 ^ (2 * a + 2) / (2 * \u2191(nnq X) / (\u2191(nnq X) + 1) - 1) * eLpNorm f 2 volume\nh2 : 2 ^ (107 * a ^ 3) = \u2191\u20162 ^ (107 * a ^ 3)\u2016\u208a\n\u22a2 eLpNorm (carlesonSum \ud835\udd04 f) 2 volume \u2264\n    eLpNorm (2 ^ (107 * a ^ 3) \u2022 fun x => \u2191\u2191(MB volume \ud835\udd04 \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) f x).toNNReal) 2 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/04b2b281044042b8ed618a6f28a027fb295a168d/Carleson/Antichain/Basic.lean#L428"
      },
      "metadata": {
        "blame_email_hash": "44a80a4a9c95",
        "blame_date": "2025-06-04T11:19:38+02:00",
        "inclusion_date": "2025-07-12T23:01:54.898186+00:00"
      },
      "id": "b7cb242ab82bab95714045d0e14736695511caf361e7046584cf614da00af988"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "464ae0dba10c7aa3460d147aa375eaa865f2f552",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/QuaternionAlgebra/NumberField.lean",
        "start_line": 66,
        "start_column": 2,
        "end_line": 66,
        "end_column": 7
      },
      "debug_info": {
        "goal": "M : Type u_3\nN : Type u_4\ninst\u271d\u00b3 : Monoid M\ninst\u271d\u00b2 : Monoid N\ninst\u271d\u00b9 : TopologicalSpace M\ninst\u271d : TopologicalSpace N\nf : M \u2192* N\nhf : IsOpenMap \u21d1f\n\u22a2 IsOpenMap fun u => { val := f \u2191u, inv := f \u2191u\u207b\u00b9, val_inv := \u22ef, inv_val := \u22ef }",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/464ae0dba10c7aa3460d147aa375eaa865f2f552/FLT/QuaternionAlgebra/NumberField.lean#L66"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-04-04T09:45:19+01:00",
        "inclusion_date": "2025-04-05T01:35:42.149777+00:00"
      },
      "id": "afd41ed70417ad4135fcbab1dfec134972d96099d85e20347bbe4ba85e6769d5"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 181,
        "start_column": 2,
        "end_line": 181,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : DecidableEq \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\ns : Finset \u03b1\n\u22a2 \u2203 u v,\n    Disjoint u v \u2227\n      u \u222a v = s \u2227 (\u2200 a \u2208 u, Even #{ x // x \u2208 {b \u2208 u | G.Adj a b} }) \u2227 \u2200 a \u2208 v, Even #{ x // x \u2208 {b \u2208 v | G.Adj a b} }",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L181"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "9b32dab5d4cb28f91d6b01b4aa1011a4f891c4c36c835c30743b93a363c49b0a"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "faabe6281bf4c0ffe761835e61488b9e0d69c6cd",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 6455,
        "start_column": 78,
        "end_line": 6455,
        "end_column": 83
      },
      "debug_info": {
        "goal": "c : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\nX\u2080 : \u211d := sorry\nX : \u211d\nX_ge_X\u2080 : X \u2265 X\u2080\nX_gt_3 : 3 < X\n\u03b5 : \u211d := sorry\n\u03b5_pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\n\u03bd : \u211d \u2192 \u211d\nContDiff\u03bd : ContDiff \u211d (\u2191\u22a4) \u03bd\n\u03bd_nonneg' : \u2200 (x : \u211d), 0 \u2264 \u03bd x\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\n\u03bd_massOne' : \u222b (x : \u211d) in Ici 0, \u03bd x / x = 1\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\n\u03c8_\u03b5_of_X : \u2102 := SmoothedChebyshev \u03bd \u03b5 X\nC_unsmoothing : \u211d\nC_unsmoothing_pos : C_unsmoothing > 0\nhC : \u2016\u2191(ChebyshevPsi X) - \u03c8_\u03b5_of_X\u2016 \u2264 C_unsmoothing * X * \u03b5 * Real.log X\nT : \u211d := sorry\nT_gt_3 : 3 < T\nA : \u211d := sorry\nA_in_Ioo : A \u2208 Ioo 0 (1 / 2)\n\u03c3\u2081 : \u211d := 1 - A / Real.log T ^ 9\n\u03c3\u2082 : \u211d := sorry\n\u03c8_\u03b5_diff :\n  \u2016\u03c8_\u03b5_of_X - MellinTransform (fun x => \u2191(Smooth1 \u03bd \u03b5 x)) 1 * \u2191X\u2016 \u2264\n    \u2016I\u2081 \u03bd \u03b5 T X\u2016 + \u2016I\u2082 \u03bd \u03b5 X T \u03c3\u2081\u2016 + \u2016I\u2083 \u03bd \u03b5 X T \u03c3\u2081\u2016 + \u2016I\u2084 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 + \u2016I\u2085 \u03bd \u03b5 X \u03c3\u2082\u2016 + \u2016I\u2086 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 +\n          \u2016I\u2087 \u03bd \u03b5 T X \u03c3\u2081\u2016 +\n        \u2016I\u2088 \u03bd \u03b5 X T \u03c3\u2081\u2016 +\n      \u2016I\u2089 \u03bd \u03b5 X T\u2016\n\u22a2 \u2203 C_main > 0, \u2016MellinTransform (fun x => \u2191(Smooth1 \u03bd \u03b5 x)) 1 * \u2191X - \u2191X\u2016 \u2264 C_main * \u03b5 * X",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/faabe6281bf4c0ffe761835e61488b9e0d69c6cd/PrimeNumberTheoremAnd/MediumPNT.lean#L6455"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-06-27T13:01:00-04:00",
        "inclusion_date": "2025-07-11T23:19:26.707212+00:00"
      },
      "id": "95f1651e81e4714ee665f36357385a9fc31c744d536f52f545998bdde45b9976"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "50d1283ac830e0464671949a4ee23f70eda09242",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7order.lean",
        "start_line": 234,
        "start_column": 6,
        "end_line": 234,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case mp.intro.intro.intro.refine_1\nz\u2080 : \u2102\nf : \u2102 \u2192 \u2102\nhf\u271d : AnalyticAt \u2102 f z\u2080\nhzero : f z\u2080 = 0\nr : \u211d\nhB : 0 < r \u2227 AnalyticOnNhd \u2102 f (Metric.ball z\u2080 r)\n\u03b5 : \u211d\nh\u03b5 : \u03b5 > 0\nhball : \u2200 y \u2208 Metric.ball z\u2080 \u03b5, deriv f y = 0\nhf : DifferentiableOn \u2102 f (Metric.ball z\u2080 r)\nhg : DifferentiableOn \u2102 (fun x => 0) (Metric.ball z\u2080 r)\nhf' : EqOn (deriv f) (deriv fun x => 0) (Metric.ball z\u2080 r)\nhx : z\u2080 \u2208 Metric.ball z\u2080 r\n\u22a2 IsOpen (Metric.ball z\u2080 r)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/50d1283ac830e0464671949a4ee23f70eda09242/Mathlib/NumberTheory/h7order.lean#L234"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-05-20T18:06:07+02:00",
        "inclusion_date": "2025-05-21T03:02:42.449798+00:00"
      },
      "id": "7dc460684b56e3f64f3236cd04a4c00c681f9e0f9bbf0463b3b8202970d54faa"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
        "start_line": 140,
        "start_column": 2,
        "end_line": 140,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\nh : IndepSet B A\nhB : \u2119 B \u2260 0\n\u22a2 \u2119(A|B) = \u2119 A",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L140"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "e71ea4e4994260377362f7ab9f19a72614d1c65d2db29a224809e16a77bf1f14"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean",
        "start_line": 356,
        "start_column": 29,
        "end_line": 356,
        "end_column": 34
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Fintype L\ninst\u271d\u2076 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2075 : Field \ud835\udd3dq\ninst\u271d\u2074 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u00b3 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b2 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u00b9 : NeZero \u03d1\ninst\u271d : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\ni_val : \u2115\nhi_dvd : \u03d1 \u2223 i_val\nh_bound : i_val + \u03d1 \u2264 \u2113\nf_i :\n  Binius.BinaryBasefold.OracleFunction L inst\u271d\u2078 inst\u271d\u2077 inst\u271d\u2076 \ud835\udd3dq inst\u271d\u2075 inst\u271d\u2074 h_Fq_char_prime h_Fq_card_gt_1 inst\u271d\u00b3 r\n    inst\u271d\u00b2 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8i_val, \u22ef\u27e9\nchallenges : Fin \u03d1 \u2192 L\nd_i_plus_\u03d1 : \u2115 := Binius.BinaryBasefold.BBF_CodeDistance \u2113 \ud835\udce1 \u27e8i_val + \u03d1, \u22ef\u27e9\n\u22a2 i_val < \u2113",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean#L356"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "aa6f38a84605099f31e3b1e9d1267204556c82ca616959db58b9e5c5c8006b04"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
        "commit": "188e11d9fb964b2bbd4dce99316d5fc0cfe0c07a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
        "start_line": 80,
        "start_column": 17,
        "end_line": 80,
        "end_column": 22
      },
      "debug_info": {
        "goal": "d : \u2115\n\u22a2 (fun \u039b => (detRep \u039b, orthchroRep \u039b)) 1 = 1",
        "url": "https://github.com/HEPLean/PhysLean/blob/188e11d9fb964b2bbd4dce99316d5fc0cfe0c07a/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L80"
      },
      "metadata": {
        "blame_email_hash": "f5ab4f28bed3",
        "blame_date": "2025-05-05T23:32:38+10:00",
        "inclusion_date": "2025-05-07T00:12:19.853100+00:00"
      },
      "id": "2e2c7c3a1307d45d1001b0ebdb30cb17b1d3baec54560d83082145693fdf443e"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 98,
        "start_column": 106,
        "end_line": 98,
        "end_column": 111
      },
      "debug_info": {
        "goal": "\u22a2 (100 ^ 2 - 7 ^ 2) / (70 ^ 2 - 11 ^ 2) * ((70 - 11) * (70 + 11) / ((100 - 7) * (100 + 7))) = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L98"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "3d0b7b313d79f97bec3cb8e4fcb05c2b4a8ca86ce50f476d7d7562244ca054f3"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_03.lean",
        "start_line": 153,
        "start_column": 8,
        "end_line": 153,
        "end_column": 13
      },
      "debug_info": {
        "goal": "l m n : \u2115\nh_2lel : 2 \u2264 l\nk : \u2115\nh_4lek : 4 \u2264 k\nh_klen4 : k \u2264 n - 4\nh : 2 * k \u2264 n\nh_klen : k \u2264 n\nh_1lel : 1 \u2264 l\nH : n.choose k = m ^ l\nh\u2081 : \u2203 p, Nat.Prime p \u2227 p ^ l \u2264 n \u2227 k ^ l < p ^ l \u2227 k ^ 2 \u2264 k ^ l\nh\u271d : \u00acl = 2\n\u22a2 3 \u2264 l",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_03.lean#L153"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2023-07-11T14:23:06+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "09f0d1ac956a8ab994c5351a9b2cf8404d13c3772e8efe13c8d838e12ce40132"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/5SolutionsAndDecompositions.lean",
        "start_line": 178,
        "start_column": 2,
        "end_line": 178,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : Type u_2\ninst\u271d\u00b9 : Fintype n\ninst\u271d : DecidableEq n\nA : Matrix n n \u211d\nhA : A.IsHermitian\n\u22a2 \u22ef.eigenvalues = hA.eigenvalues\u207b\u00b9",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/5SolutionsAndDecompositions.lean#L178"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2023-10-11T15:16:39+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "b3e591601066fe0175933cf802e742a83ff3289e638de53830d1f9d9dbcf79b3"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 8 - 5, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "d7a8990edf1cb34390db765087d674ed6c9169cb0f80c2ae1e56669dd45e7c7f"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "bounded-depth",
        "commit": "ac2e14a982a125f06c7905a55dabf360bf7691ee",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Propositional/Logic/Sublogic.lean",
        "start_line": 112,
        "start_column": 6,
        "end_line": 112,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case inr.intro\nn : \u2115+\ns : Substitution \u2115\n\u22a2 Hilbert.BD n \u22a2! Axioms.BoundDepth (n + 1)\u27e6s\u27e7",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/ac2e14a982a125f06c7905a55dabf360bf7691ee/Foundation/Propositional/Logic/Sublogic.lean#L112"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-06T11:02:54+09:00",
        "inclusion_date": "2025-05-06T23:18:05.763718+00:00"
      },
      "id": "32ab9cae3b00c6deb4b90041ee38b6d1052a39eee6b354ced2a5310e0169cc16"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "ineq_6_3_30",
        "commit": "04b2b281044042b8ed618a6f28a027fb295a168d",
        "lean_version": "v4.22.0-rc2"
      },
      "location": {
        "path": "Carleson/Antichain/Basic.lean",
        "start_line": 451,
        "start_column": 6,
        "end_line": 451,
        "end_column": 11
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Set (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \ud835\udd04\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\ng : X \u2192 \u2102\nhg : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nha : 4 \u2264 a\nhf1 : f = F.indicator 1 * f\nhq0 : 0 < nnq X\nh1q' : 1 \u2264 2 * nnq X / (nnq X + 1)\nhqq' : 2 * nnq X / (nnq X + 1) \u2264 nnq X\nhq'_inv : (2 * nnq X / (nnq X + 1) - 1)\u207b\u00b9 \u2264 3 * (nnq X - 1)\u207b\u00b9\nhMB_le :\n  (MB volume \ud835\udd04 \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) fun x => \u2016f x\u2016) \u2264\n    maximalFunction volume \ud835\udd04 \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n      (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) fun x =>\n      \u2016f x\u2016 * (dens\u2082 \ud835\udd04).toReal ^ ((2 * \u2191(nnq X) / (\u2191(nnq X) + 1))\u207b\u00b9 - 2\u207b\u00b9)\nhMB_le' :\n  eLpNorm (fun x => \u2191\u2191(MB volume \ud835\udd04 \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) f x).toNNReal) 2 volume \u2264\n    eLpNorm\n        (fun x =>\n          \u2191\u2191(maximalFunction volume \ud835\udd04 \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n                  (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) f x).toNNReal)\n        2 volume *\n      dens\u2082 \ud835\udd04\nh_div_le_div :\n  (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2) / (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2) \u2264\n    2 ^ 2 / (2 * \u2191(nnq X) / (\u2191(nnq X) + 1) - 1)\nhMBp\u2081_le :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume \ud835\udd04 \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n            (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) f x).toReal)\n      2 volume \u2264\n    2 ^ (2 * a + 2) / (2 * \u2191(nnq X) / (\u2191(nnq X) + 1) - 1) * eLpNorm f 2 volume\n\u22a2 eLpNorm (fun x => \u2191\u2191(MB volume \ud835\udd04 \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) f x).toNNReal) 2 volume \u2264\n    2 ^ (2 * a + 2) *\n      (\u2191(2 * nnq X / (nnq X + 1) - 1)\u207b\u00b9 * (dens\u2082 \ud835\udd04 ^ ((2 * \u2191(nnq X) / (\u2191(nnq X) + 1))\u207b\u00b9 - 2\u207b\u00b9) * eLpNorm f 2 volume))",
        "url": "https://github.com/fpvandoorn/carleson/blob/04b2b281044042b8ed618a6f28a027fb295a168d/Carleson/Antichain/Basic.lean#L451"
      },
      "metadata": {
        "blame_email_hash": "44a80a4a9c95",
        "blame_date": "2025-06-04T11:19:38+02:00",
        "inclusion_date": "2025-07-12T23:01:54.898186+00:00"
      },
      "id": "8213f9faf7f62b509e7f28fc604e282c06a364a7b5f87af6304458d47d2595d8"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "464ae0dba10c7aa3460d147aa375eaa865f2f552",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/QuaternionAlgebra/NumberField.lean",
        "start_line": 82,
        "start_column": 2,
        "end_line": 82,
        "end_column": 7
      },
      "debug_info": {
        "goal": "F : Type u_1\ninst\u271d\u2074 : Field F\ninst\u271d\u00b3 : NumberField F\nD : Type u_2\ninst\u271d\u00b2 : Ring D\ninst\u271d\u00b9 : Algebra F D\ninst\u271d : IsQuaternionAlgebra F D\nv : HeightOneSpectrum (\ud835\udcde F)\n\u22a2 IsOpenMap \u21d1(Units.map \u2191(HeightOneSpectrum.adicCompletionIntegers F v).subtype.mapMatrix)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/464ae0dba10c7aa3460d147aa375eaa865f2f552/FLT/QuaternionAlgebra/NumberField.lean#L82"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-04-04T09:45:19+01:00",
        "inclusion_date": "2025-04-05T01:35:42.149777+00:00"
      },
      "id": "be1cf925cb078da15ecb1bd227b47a63c3b7c6aa5cf8e03a733fc38ffd1e4c47"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 197,
        "start_column": 2,
        "end_line": 197,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\n\u03b2 : Type u_3\ninst\u271d : Finite \u03b1\ng : \u03b2 \u21aa \u03b1\nf : \u03b2 \u2192 \u03b1 \u2192 \u03b1\nhf : IsLatin f\n\u22a2 \u2203 f', f' \u2218 \u21d1g = f \u2227 IsLatin f",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L197"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "2a76f7b8970defcfa191b88a9ff249b73e9aa9fdbf6fc6ded13772215f4de3ac"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "faabe6281bf4c0ffe761835e61488b9e0d69c6cd",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 6442,
        "start_column": 25,
        "end_line": 6442,
        "end_column": 30
      },
      "debug_info": {
        "goal": "c : \u211d := \u22ef\ncpos : 0 < c\nC : \u211d := \u22ef\nX\u2080 : \u211d := \u22ef\nX : \u211d\nX_ge_X\u2080 : X \u2265 X\u2080\nX_gt_3 : 3 < X\n\u03b5 : \u211d := \u22ef\n\u03b5_pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\n\u03bd : \u211d \u2192 \u211d\nContDiff\u03bd : ContDiff \u211d (\u2191\u22a4) \u03bd\n\u03bd_nonneg' : \u2200 (x : \u211d), 0 \u2264 \u03bd x\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\n\u03bd_massOne' : \u222b (x : \u211d) in Ici 0, \u03bd x / x = 1\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\n\u03c8_\u03b5_of_X : \u2102 := \u22ef\nC_unsmoothing : \u211d\nC_unsmoothing_pos : C_unsmoothing > 0\nhC : \u2016\u2191(ChebyshevPsi X) - \u03c8_\u03b5_of_X\u2016 \u2264 C_unsmoothing * X * \u03b5 * Real.log X\nT : \u211d := \u22ef\n\u22a2 3 < T",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/faabe6281bf4c0ffe761835e61488b9e0d69c6cd/PrimeNumberTheoremAnd/MediumPNT.lean#L6442"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-06-27T13:01:00-04:00",
        "inclusion_date": "2025-07-11T23:19:26.707212+00:00"
      },
      "id": "bb2df2a76efe03ea2af3d9a85d5b88c19e5748fc19df7040e1d20993069c69dc"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "50d1283ac830e0464671949a4ee23f70eda09242",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7order.lean",
        "start_line": 235,
        "start_column": 6,
        "end_line": 235,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case mp.intro.intro.intro.refine_2\nz\u2080 : \u2102\nf : \u2102 \u2192 \u2102\nhf\u271d : AnalyticAt \u2102 f z\u2080\nhzero : f z\u2080 = 0\nr : \u211d\nhB : 0 < r \u2227 AnalyticOnNhd \u2102 f (Metric.ball z\u2080 r)\n\u03b5 : \u211d\nh\u03b5 : \u03b5 > 0\nhball : \u2200 y \u2208 Metric.ball z\u2080 \u03b5, deriv f y = 0\nhf : DifferentiableOn \u2102 f (Metric.ball z\u2080 r)\nhg : DifferentiableOn \u2102 (fun x => 0) (Metric.ball z\u2080 r)\nhf' : EqOn (deriv f) (deriv fun x => 0) (Metric.ball z\u2080 r)\nhx : z\u2080 \u2208 Metric.ball z\u2080 r\n\u22a2 IsPreconnected (Metric.ball z\u2080 r)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/50d1283ac830e0464671949a4ee23f70eda09242/Mathlib/NumberTheory/h7order.lean#L235"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-05-20T18:06:07+02:00",
        "inclusion_date": "2025-05-21T03:02:42.449798+00:00"
      },
      "id": "561f451859ae2f5dd44f32e75a7e6f02a2d47bc1ff7dd3ea487ceeec01b5584a"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
        "start_line": 71,
        "start_column": 2,
        "end_line": 71,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure volume\nA B : Set \u03a9\nhA : MeasurableSet A\nhB : MeasurableSet B\n\u22a2 IndepSet \u03a9 inst\u271d\u00b9 A B\u1d9c \u2194 IndepSet \u03a9 inst\u271d\u00b9 A B",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Topics/Probability.lean#L71"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "24002d2b62795c50e34bd2a081357b3233541691ddf0da7ef01545fdf552d4c7"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean",
        "start_line": 368,
        "start_column": 34,
        "end_line": 368,
        "end_column": 39
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Fintype L\ninst\u271d\u2076 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2075 : Field \ud835\udd3dq\ninst\u271d\u2074 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u00b3 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b2 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u00b9 : NeZero \u03d1\ninst\u271d : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\ni_val : \u2115\nhi_dvd : \u03d1 \u2223 i_val\nh_bound : i_val + \u03d1 \u2264 \u2113\nf_i :\n  Binius.BinaryBasefold.OracleFunction L inst\u271d\u2078 inst\u271d\u2077 inst\u271d\u2076 \ud835\udd3dq inst\u271d\u2075 inst\u271d\u2074 h_Fq_char_prime h_Fq_card_gt_1 inst\u271d\u00b3 r\n    inst\u271d\u00b2 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8i_val, \u22ef\u27e9\nchallenges : Fin \u03d1 \u2192 L\nd_i_plus_\u03d1 : \u2115 := Binius.BinaryBasefold.BBF_CodeDistance \u2113 \ud835\udce1 \u27e8i_val + \u03d1, \u22ef\u27e9\ni : Fin \u2113 := \u27e8i_val, \u22ef\u27e9\nh_is_close :\n  2 *\n      \u2191(Binius.BinaryBasefold.fiberwiseDistance L inst\u271d\u2078 inst\u271d\u2077 inst\u271d\u2076 \ud835\udd3dq inst\u271d\u2075 inst\u271d\u2074 h_Fq_char_prime h_Fq_card_gt_1\n          inst\u271d\u00b3 r inst\u271d\u00b2 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate i \u03d1 inst\u271d\u00b9 h_bound f_i) <\n    \u2191d_i_plus_\u03d1\nh_dist_curr_lt : failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation) :=\n  Binius.BinaryBasefold.fiberwise_dist_lt_imp_dist_lt L inst\u271d\u2078 inst\u271d\u2077 inst\u271d\u2076 \ud835\udd3dq inst\u271d\u2075 inst\u271d\u2074 h_Fq_char_prime\n    h_Fq_card_gt_1 inst\u271d\u00b3 r inst\u271d\u00b2 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 \u03d1 inst\u271d\u00b9 inst\u271d h_\u2113_add_R_rate i h_bound f_i h_is_close\nf_bar_i : Binius.BinaryBasefold.OracleFunction L inst\u271d\u2078 inst\u271d\u2077 inst\u271d\u2076 \ud835\udd3dq inst\u271d\u2075 inst\u271d\u2074 h_Fq_char_prime h_Fq_card_gt_1\n  inst\u271d\u00b3 r inst\u271d\u00b2 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191\u27e8\u2191i, \u22ef\u27e9, \u22ef\u27e9 :=\n  Binius.BinaryBasefold.uniqueClosestCodeword L inst\u271d\u2078 inst\u271d\u2077 inst\u271d\u2076 \ud835\udd3dq inst\u271d\u2075 inst\u271d\u2074 h_Fq_char_prime h_Fq_card_gt_1\n    inst\u271d\u00b3 r inst\u271d\u00b2 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8\u2191i, \u22ef\u27e9 f_i h_dist_curr_lt\n\u22a2 \u2191i < \u2113 - \u03d1 + 1",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean#L368"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "6b8de144915a9704f7248dc9e29373c33d785c45d9bae017fc7b9b0287b2c044"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
        "commit": "188e11d9fb964b2bbd4dce99316d5fc0cfe0c07a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
        "start_line": 81,
        "start_column": 17,
        "end_line": 81,
        "end_column": 22
      },
      "debug_info": {
        "goal": "d : \u2115\n\u22a2 \u2200 (x y : \u2191(\ud835\udcdb d)),\n    { toFun := fun \u039b => (detRep \u039b, orthchroRep \u039b), map_one' := \u22ef }.toFun (x * y) =\n      { toFun := fun \u039b => (detRep \u039b, orthchroRep \u039b), map_one' := \u22ef }.toFun x *\n        { toFun := fun \u039b => (detRep \u039b, orthchroRep \u039b), map_one' := \u22ef }.toFun y",
        "url": "https://github.com/HEPLean/PhysLean/blob/188e11d9fb964b2bbd4dce99316d5fc0cfe0c07a/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L81"
      },
      "metadata": {
        "blame_email_hash": "f5ab4f28bed3",
        "blame_date": "2025-05-05T23:32:38+10:00",
        "inclusion_date": "2025-05-07T00:12:19.853100+00:00"
      },
      "id": "7588f7276d887c00324384518933fec8207272f9c7a208947a556e5a958539d6"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 103,
        "start_column": 28,
        "end_line": 103,
        "end_column": 33
      },
      "debug_info": {
        "goal": "a b : \u211d\nh\u2080 : a ^ 2 + b ^ 2 = 1\n\u22a2 a * b + |a - b| \u2264 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L103"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "210290947ff87627217a3d7cd833fb46e7a501a56a73abc9ca31a4460bb451b1"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_03.lean",
        "start_line": 156,
        "start_column": 8,
        "end_line": 156,
        "end_column": 13
      },
      "debug_info": {
        "goal": "l m n : \u2115\nh_2lel : 2 \u2264 l\nk : \u2115\nh_4lek : 4 \u2264 k\nh_klen4 : k \u2264 n - 4\nh : 2 * k \u2264 n\nh_klen : k \u2264 n\nh_1lel : 1 \u2264 l\nH : n.choose k = m ^ l\nh\u2081 : \u2203 p, Nat.Prime p \u2227 p ^ l \u2264 n \u2227 k ^ l < p ^ l \u2227 k ^ 2 \u2264 k ^ l\nh\u271d : \u00acl = 2\nh_3lel : 3 \u2264 l\n\u22a2 n < k ^ 3",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_03.lean#L156"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2023-07-11T14:23:06+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "ab01658d6506179677f2e73c0b24f20586d458cb32128240585c805e575c8c2a"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/4ComplexMatrices.lean",
        "start_line": 124,
        "start_column": 2,
        "end_line": 124,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m : Type u_1\ninst\u271d\u00b9 : Fintype m\ninst\u271d : DecidableEq m\nA B : Matrix m m \u211d\nt : \u211d\nh : IsUnit (A + t \u2022 B)\n\u22a2 (A.map Complex.ofReal + B.map fun x => x \u2022 I)\u207b\u00b9 =\n    (1 - t \u2022 I) \u2022 ((A + t \u2022 B).map Complex.ofReal + (B - t \u2022 A).map fun x => x \u2022 I)\u207b\u00b9",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/4ComplexMatrices.lean#L124"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2023-10-11T15:16:39+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "ba949c27e3c90910908d1bd720d2ca2853580d62a0abba5af98e1a5bc95a5d4d"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 1 - 6, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "1a07994d64e82e9137330d5b7a85de2d429bcda8225ba5398c0a8f612125d507"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "bounded-depth",
        "commit": "ac2e14a982a125f06c7905a55dabf360bf7691ee",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Propositional/Logic/Sublogic.lean",
        "start_line": 141,
        "start_column": 8,
        "end_line": 141,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case h.left\nn : \u2115+\nF : Frame := Frame.mk (Fin (\u2191n + 1)) fun x y => x \u2264 y\nl : List F.World\nhl\u2081 : l.length = \u2191n + 1 + 1\nhl\u2082 : List.Chain' F.Rel l\n\u22a2 \u2203 i j, \u00aci = j \u2227 l[\u2191i] = l[\u2191j]",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/ac2e14a982a125f06c7905a55dabf360bf7691ee/Foundation/Propositional/Logic/Sublogic.lean#L141"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-06T11:02:54+09:00",
        "inclusion_date": "2025-05-06T23:18:05.763718+00:00"
      },
      "id": "06f031db647e6454d5ad21f8ff1c9c191763ccf2a652124af63262963881d5d8"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "ineq_6_3_30",
        "commit": "04b2b281044042b8ed618a6f28a027fb295a168d",
        "lean_version": "v4.22.0-rc2"
      },
      "location": {
        "path": "Carleson/Antichain/Basic.lean",
        "start_line": 410,
        "start_column": 8,
        "end_line": 410,
        "end_column": 13
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Set (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \ud835\udd04\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\ng : X \u2192 \u2102\nhg : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nha : 4 \u2264 a\nhf1 : f = F.indicator 1 * f\nhq0 : 0 < nnq X\nh1q' : 1 \u2264 2 * nnq X / (nnq X + 1)\nhqq' : 2 * nnq X / (nnq X + 1) \u2264 nnq X\nhq'_inv : (2 * nnq X / (nnq X + 1) - 1)\u207b\u00b9 \u2264 3 * (nnq X - 1)\u207b\u00b9\nhMB_le :\n  (MB volume \ud835\udd04 \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) fun x => \u2016f x\u2016) \u2264\n    maximalFunction volume \ud835\udd04 \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n      (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) fun x =>\n      \u2016f x\u2016 * (dens\u2082 \ud835\udd04).toReal ^ ((2 * \u2191(nnq X) / (\u2191(nnq X) + 1))\u207b\u00b9 - 2\u207b\u00b9)\nhMB_le' :\n  eLpNorm (fun x => \u2191\u2191(MB volume \ud835\udd04 \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) f x).toNNReal) 2 volume \u2264\n    eLpNorm\n        (fun x =>\n          \u2191\u2191(maximalFunction volume \ud835\udd04 \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n                  (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) f x).toNNReal)\n        2 volume *\n      dens\u2082 \ud835\udd04\nh_div_le_div :\n  (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2) / (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2) \u2264\n    2 ^ 2 / (2 * \u2191(nnq X) / (\u2191(nnq X) + 1) - 1)\n\u22a2 eLpNorm\n      (fun x =>\n        (maximalFunction volume \ud835\udd04 \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n            (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) f x).toReal)\n      2 volume \u2264\n    2 ^ (2 * a) * (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2) / (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2) *\n      eLpNorm f 2 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/04b2b281044042b8ed618a6f28a027fb295a168d/Carleson/Antichain/Basic.lean#L410"
      },
      "metadata": {
        "blame_email_hash": "44a80a4a9c95",
        "blame_date": "2025-06-04T11:19:38+02:00",
        "inclusion_date": "2025-07-12T23:01:54.898186+00:00"
      },
      "id": "0b3d0dc9c8b64aa331f446b64f6a60c56ecf8b84ce7d527c393f6df3ad3880f2"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/NumberField/Completion.lean",
        "start_line": 92,
        "start_column": 2,
        "end_line": 92,
        "end_column": 7
      },
      "debug_info": {
        "goal": "K : Type u_1\nL : Type u_2\ninst\u271d\u00b3 : Field K\ninst\u271d\u00b2 : Field L\ninst\u271d\u00b9 : Algebra K L\nv : InfinitePlace K\ninst\u271d : NumberField L\n\u22a2 Module.finrank v.Completion ((w : ExtensionPlace L v) \u2192 (\u2191w).Completion) =\n    Module.finrank v.Completion (L \u2297[K] v.Completion)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/NumberField/Completion.lean#L92"
      },
      "metadata": {
        "blame_email_hash": "82b95686a14c",
        "blame_date": "2025-03-27T09:14:59+00:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "782b95147e01ec113f6da3ea5d044879f88d4007fb0204c9c9292fb3fce89924"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 214,
        "start_column": 2,
        "end_line": 214,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 \u2203 r, (\u2200 (A : Finset \u2115), \u2191A.card \u2264 #\u2191(Rel.image r \u2191A)) \u2227 \u2200 (f : \u2115 \u2192 \u2115), Injective f \u2192 \u2203 n, \u00acr n (f n)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L214"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "cc184c9b5d49cb6bd85611b690f265e6aa231d9a088cf9156737b6c2c641ba21"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "faabe6281bf4c0ffe761835e61488b9e0d69c6cd",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 6445,
        "start_column": 39,
        "end_line": 6445,
        "end_column": 44
      },
      "debug_info": {
        "goal": "c : \u211d := \u22ef\ncpos : 0 < c\nC : \u211d := \u22ef\nX\u2080 : \u211d := \u22ef\nX : \u211d\nX_ge_X\u2080 : X \u2265 X\u2080\nX_gt_3 : 3 < X\n\u03b5 : \u211d := \u22ef\n\u03b5_pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\n\u03bd : \u211d \u2192 \u211d\nContDiff\u03bd : ContDiff \u211d (\u2191\u22a4) \u03bd\n\u03bd_nonneg' : \u2200 (x : \u211d), 0 \u2264 \u03bd x\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\n\u03bd_massOne' : \u222b (x : \u211d) in Ici 0, \u03bd x / x = 1\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\n\u03c8_\u03b5_of_X : \u2102 := \u22ef\nC_unsmoothing : \u211d\nC_unsmoothing_pos : C_unsmoothing > 0\nhC : \u2016\u2191(ChebyshevPsi X) - \u03c8_\u03b5_of_X\u2016 \u2264 C_unsmoothing * X * \u03b5 * Real.log X\nT : \u211d := \u22ef\nT_gt_3 : 3 < T\nA : \u211d := \u22ef\n\u22a2 A \u2208 Ioo 0 (1 / 2)",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/faabe6281bf4c0ffe761835e61488b9e0d69c6cd/PrimeNumberTheoremAnd/MediumPNT.lean#L6445"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-06-27T13:01:00-04:00",
        "inclusion_date": "2025-07-11T23:19:26.707212+00:00"
      },
      "id": "1b86f2d794670e5675b6bac44a8f6ced838ff335ed2ef170aec19d059d66b614"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "50d1283ac830e0464671949a4ee23f70eda09242",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7order.lean",
        "start_line": 236,
        "start_column": 4,
        "end_line": 236,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case mpr\nz\u2080 : \u2102\nf : \u2102 \u2192 \u2102\nhf : AnalyticAt \u2102 f z\u2080\nhzero : f z\u2080 = 0\n\u22a2 (\u2203 \u03b5 > 0, \u2200 y \u2208 Metric.ball z\u2080 \u03b5, f y = 0) \u2192 \u2203 \u03b5 > 0, \u2200 y \u2208 Metric.ball z\u2080 \u03b5, deriv f y = 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/50d1283ac830e0464671949a4ee23f70eda09242/Mathlib/NumberTheory/h7order.lean#L236"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-05-20T17:20:40+02:00",
        "inclusion_date": "2025-05-21T03:02:42.449798+00:00"
      },
      "id": "4c95688dd08ac4cd35cc42c46e1e128d3ff524e2bf5136639605e8d36547dd26"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
        "start_line": 84,
        "start_column": 2,
        "end_line": 84,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure volume\nA : Set \u03a9\nh : IndepSet \u03a9 inst\u271d\u00b9 A A\n\u22a2 volume A = 0 \u2228 volume A = 1",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Topics/Probability.lean#L84"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "d1a3c4beed999e3d725755a771186629e9febca5418e0f5708cdc8ce332b5878"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean",
        "start_line": 384,
        "start_column": 34,
        "end_line": 384,
        "end_column": 39
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Fintype L\ninst\u271d\u2076 : DecidableEq L\n\ud835\udd3dq : Type\ninst\u271d\u2075 : Field \ud835\udd3dq\ninst\u271d\u2074 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u00b3 : Algebra \ud835\udd3dq L\nr : \u2115\ninst\u271d\u00b2 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u00b9 : NeZero \u03d1\ninst\u271d : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\ni_val : \u2115\nhi_dvd : \u03d1 \u2223 i_val\nh_bound : i_val + \u03d1 \u2264 \u2113\nf_i :\n  Binius.BinaryBasefold.OracleFunction L inst\u271d\u2078 inst\u271d\u2077 inst\u271d\u2076 \ud835\udd3dq inst\u271d\u2075 inst\u271d\u2074 h_Fq_char_prime h_Fq_card_gt_1 inst\u271d\u00b3 r\n    inst\u271d\u00b2 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate \u27e8i_val, \u22ef\u27e9\nchallenges : Fin \u03d1 \u2192 L\nd_i_plus_\u03d1 : \u2115 := Binius.BinaryBasefold.BBF_CodeDistance \u2113 \ud835\udce1 \u27e8i_val + \u03d1, \u22ef\u27e9\ni : Fin \u2113 := \u27e8i_val, \u22ef\u27e9\nh_is_close :\n  \u00ac2 *\n        \u2191(Binius.BinaryBasefold.fiberwiseDistance L inst\u271d\u2078 inst\u271d\u2077 inst\u271d\u2076 \ud835\udd3dq inst\u271d\u2075 inst\u271d\u2074 h_Fq_char_prime h_Fq_card_gt_1\n            inst\u271d\u00b3 r inst\u271d\u00b2 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 h_\u2113_add_R_rate i \u03d1 inst\u271d\u00b9 h_bound f_i) <\n      \u2191d_i_plus_\u03d1\n\u22a2 \u2191i < \u2113 - \u03d1 + 1",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/BinaryBasefold/Prelude.lean#L384"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "dc0fdb2cb89eeee03d53dad10e3864b3b963942ac69670e1105f9d8c73dc09a4"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
        "commit": "188e11d9fb964b2bbd4dce99316d5fc0cfe0c07a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
        "start_line": 82,
        "start_column": 25,
        "end_line": 82,
        "end_column": 30
      },
      "debug_info": {
        "goal": "d : \u2115\n\u22a2 Continuous (\u2191{ toFun := fun \u039b => (detRep \u039b, orthchroRep \u039b), map_one' := \u22ef, map_mul' := \u22ef }).toFun",
        "url": "https://github.com/HEPLean/PhysLean/blob/188e11d9fb964b2bbd4dce99316d5fc0cfe0c07a/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L82"
      },
      "metadata": {
        "blame_email_hash": "f5ab4f28bed3",
        "blame_date": "2025-05-05T23:32:38+10:00",
        "inclusion_date": "2025-05-07T00:12:19.853100+00:00"
      },
      "id": "eacaeefde0ba52f9a86c1f4e6eb3c99784af7c56f4374c44456593c1ebca59b3"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 109,
        "start_column": 29,
        "end_line": 109,
        "end_column": 34
      },
      "debug_info": {
        "goal": "f : \u2115 \u2192 \u2115\nh\u2080 : \u2200 (n : \u2115), 0 < f n\nh\u2081 : \u2200 (n : \u2115), 0 < n \u2192 f (f n) < f (n + 1)\n\u22a2 \u2200 (n : \u2115), 0 < n \u2192 f n = n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L109"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "62a22fba059c847a5c9f5125a27e9d26e484ca6c9c5ea4ea24c4a835a6ec24c3"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_03.lean",
        "start_line": 158,
        "start_column": 6,
        "end_line": 158,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case inr\nl m n : \u2115\nh_2lel : 2 \u2264 l\nk : \u2115\nh_4lek : 4 \u2264 k\nh_klen4 : k \u2264 n - 4\nh : 2 * k \u2264 n\nh_klen : k \u2264 n\nh_1lel : 1 \u2264 l\nH : n.choose k = m ^ l\nh\u2081 : \u2203 p, Nat.Prime p \u2227 p ^ l \u2264 n \u2227 k ^ l < p ^ l \u2227 k ^ 2 \u2264 k ^ l\nh\u271d : \u00acl = 2\nh_3lel : 3 \u2264 l\nh\u2084 : n < k ^ 3\n\u22a2 False",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_03.lean#L158"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2023-07-11T14:23:06+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "d5b6e9ffba158d0db11b7a0bf410b01619885cf21a1c6fd5b2f1a91db381cd95"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/4ComplexMatrices.lean",
        "start_line": 130,
        "start_column": 2,
        "end_line": 130,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m : Type u_1\ninst\u271d\u00b9 : Fintype m\ninst\u271d : DecidableEq m\nA B : Matrix m m \u211d\nt : \u211d\nh : IsUnit (A + t \u2022 B)\n\u22a2 (1 - t \u2022 I) \u2022 ((A + t \u2022 B).map Complex.ofReal + (B - t \u2022 A).map fun x => x \u2022 I)\u207b\u00b9 =\n    (1 - t \u2022 I) \u2022\n      ((A + t \u2022 B + (B - t \u2022 A) * (A + t \u2022 B)\u207b\u00b9 * (B - t \u2022 A))\u207b\u00b9.map Complex.ofReal -\n          ((A + t \u2022 B + (B - t \u2022 A) * (A + t \u2022 B)\u207b\u00b9 * (B - t \u2022 A))\u207b\u00b9 * (B - t \u2022 A) * (A + t \u2022 B)).map fun x => x \u2022 I)\u207b\u00b9",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/4ComplexMatrices.lean#L130"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2023-10-11T15:16:39+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "83a9762c1d90a949f6db8dde222718956325c5e73b605877b8ae6a6b59d7f668"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 2 - 6, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "01c3062f95ce457ac1390ec28f6ecbfc092c0a8bb90767852c79fb72457f0ad2"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "bounded-depth",
        "commit": "ac2e14a982a125f06c7905a55dabf360bf7691ee",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Propositional/Logic/Sublogic.lean",
        "start_line": 148,
        "start_column": 10,
        "end_line": 148,
        "end_column": 15
      },
      "debug_info": {
        "goal": "case h.refine_2\nn : \u2115+\nF : Frame := Frame.mk (Fin (\u2191n + 1)) fun x y => x \u2264 y\n\u22a2 List.Chain' F.Rel (List.finRange (\u2191n + 1))",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/ac2e14a982a125f06c7905a55dabf360bf7691ee/Foundation/Propositional/Logic/Sublogic.lean#L148"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-06T11:02:54+09:00",
        "inclusion_date": "2025-05-06T23:18:05.763718+00:00"
      },
      "id": "60c2b21e5c770b0ea99a15e42f32f56e248d88734698bd3bed7e7b28d827ba0d"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "39d3ea7ba366660f6776a025cc67e05a84903bc8",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/ToMathlib/RealInterpolation/Minkowski.lean",
        "start_line": 345,
        "start_column": 2,
        "end_line": 345,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nE\u2081 : Type u_5\nm : MeasurableSpace \u03b1\n\u03bc : Measure \u03b1\ng : \u03b1 \u2192 E\u2081\ninst\u271d\u00b3 : MeasurableSpace E\u2081\ninst\u271d\u00b2 : NormedAddCommGroup E\u2081\ninst\u271d\u00b9 : BorelSpace E\u2081\ninst\u271d : SigmaFinite \u03bc\nhg : AEMeasurable g \u03bc\ntc : ToneCouple\nthis : AEMeasurable ENNReal.ofReal volume\n\u22a2 AEMeasurable (fun a => tc.ton (ENNReal.ofReal a.1)) ((volume.restrict (Ioi 0)).prod \u03bc)",
        "url": "https://github.com/fpvandoorn/carleson/blob/39d3ea7ba366660f6776a025cc67e05a84903bc8/Carleson/ToMathlib/RealInterpolation/Minkowski.lean#L345"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-06-03T16:50:08+02:00",
        "inclusion_date": "2025-06-22T04:26:50.468296+00:00"
      },
      "id": "cd27e3c747b846f2b2264739e2e3822239b778f8aa4f91503979bda5cbf4c78e"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/NumberField/Completion/Infinite.lean",
        "start_line": 91,
        "start_column": 2,
        "end_line": 91,
        "end_column": 7
      },
      "debug_info": {
        "goal": "K : Type u_1\nL : Type u_2\ninst\u271d\u00b3 : Field K\ninst\u271d\u00b2 : Field L\ninst\u271d\u00b9 : Algebra K L\nv : InfinitePlace K\ninst\u271d : NumberField L\n\u22a2 Module.finrank v.Completion ((w : ExtensionPlace L v) \u2192 (\u2191w).Completion) =\n    Module.finrank v.Completion (TensorProduct K L v.Completion)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/NumberField/Completion/Infinite.lean#L91"
      },
      "metadata": {
        "blame_email_hash": "82b95686a14c",
        "blame_date": "2025-03-27T09:14:59+00:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "af772635bb0f94f5cb3b585f687e03a4a53b2bc8dd1fff11f1052bf25d03a140"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "cd307b92aeb4256b7a50fcebe1a51d2dc94f1675",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 219,
        "start_column": 2,
        "end_line": 219,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\n\u03b2 : Type u_3\ninst\u271d\u00b3 : DecidableEq \u03b2\ninst\u271d\u00b2 : Countable \u03b1\ninst\u271d\u00b9 : Countable \u03b2\nr : \u03b1 \u2192 \u03b2 \u2192 Prop\ninst\u271d : (a : \u03b1) \u2192 Fintype \u2191(Rel.image r {a})\nhr : \u2200 (A : Finset \u03b1), A.card \u2264 card \u2191(Rel.image r \u2191A)\n\u22a2 \u2203 f, Injective f \u2227 \u2200 (a : \u03b1), r a (f a)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/cd307b92aeb4256b7a50fcebe1a51d2dc94f1675/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L219"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-07-01T05:41:11.977554+00:00"
      },
      "id": "cbf7c33d75c632db7082078aa6ec3eb20a99e5ba895d59050d7148f4fc678d06"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "51c6063c647276f7c01e848976e6721033829c90",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 6457,
        "start_column": 78,
        "end_line": 6457,
        "end_column": 83
      },
      "debug_info": {
        "goal": "c : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\nX\u2080 : \u211d := sorry\nX : \u211d\nX_ge_X\u2080 : X \u2265 X\u2080\nX_gt_3 : 3 < X\n\u03b5 : \u211d := sorry\n\u03b5_pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\n\u03b5_X : 2 < X * \u03b5\n\u03bd : \u211d \u2192 \u211d\nContDiff\u03bd : ContDiff \u211d (\u2191\u22a4) \u03bd\n\u03bd_nonneg' : \u2200 (x : \u211d), 0 \u2264 \u03bd x\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\n\u03bd_massOne' : \u222b (x : \u211d) in Ici 0, \u03bd x / x = 1\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\n\u03c8_\u03b5_of_X : \u2102 := SmoothedChebyshev \u03bd \u03b5 X\nC_unsmoothing : \u211d\nC_unsmoothing_pos : C_unsmoothing > 0\n\u03c8_\u03c8_\u03b5_diff : \u2016\u2191(ChebyshevPsi X) - \u03c8_\u03b5_of_X\u2016 \u2264 C_unsmoothing * X * \u03b5 * Real.log X\nT : \u211d := sorry\nT_gt_3 : 3 < T\nA : \u211d\nA_in_Ioc : A \u2208 Ioc 0 (1 / 2)\nholo1 :\n  HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (Icc (1 - A / Real.log T ^ 9) 2 \u00d7\u2102 Icc (-T) T \\ {1})\n\u03c3\u2081 : \u211d := 1 - A / Real.log T ^ 9\n\u03c3\u2081pos : 0 < \u03c3\u2081\n\u03c3\u2081_lt_one : \u03c3\u2081 < 1\n\u03c3\u2082' : \u211d\n\u03c3\u2082'_lt_one : \u03c3\u2082' < 1\nholo2' : HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (uIcc \u03c3\u2082' 2 \u00d7\u2102 uIcc (-3) 3 \\ {1})\n\u03c3\u2082 : \u211d := max \u03c3\u2082' (1 / 2)\n\u03c3\u2082_pos : 0 < \u03c3\u2082\n\u03c3\u2082_lt_one : \u03c3\u2082 < 1\nholo2 : HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (Icc \u03c3\u2082 2 \u00d7\u2102 Icc (-3) 3 \\ {1})\n\u03c3\u2082_lt_\u03c3\u2081 : \u03c3\u2082 < \u03c3\u2081\nholo2a : HolomorphicOn (SmoothedChebyshevIntegrand \u03bd \u03b5 X) (Icc \u03c3\u2082 2 \u00d7\u2102 Icc (-3) 3 \\ {1})\n\u03c8_\u03b5_diff :\n  \u2016\u03c8_\u03b5_of_X - MellinTransform (fun x => \u2191(Smooth1 \u03bd \u03b5 x)) 1 * \u2191X\u2016 \u2264\n    \u2016I\u2081 \u03bd \u03b5 X T\u2016 + \u2016I\u2082 \u03bd \u03b5 T X \u03c3\u2081\u2016 + \u2016I\u2083 \u03bd \u03b5 T X \u03c3\u2081\u2016 + \u2016I\u2084 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 + \u2016I\u2085 \u03bd \u03b5 X \u03c3\u2082\u2016 + \u2016I\u2086 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 +\n          \u2016I\u2087 \u03bd \u03b5 T X \u03c3\u2081\u2016 +\n        \u2016I\u2088 \u03bd \u03b5 T X \u03c3\u2081\u2016 +\n      \u2016I\u2089 \u03bd \u03b5 X T\u2016\n\u22a2 \u2203 C_main > 0, \u2016MellinTransform (fun x => \u2191(Smooth1 \u03bd \u03b5 x)) 1 * \u2191X - \u2191X\u2016 \u2264 C_main * \u03b5 * X",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/51c6063c647276f7c01e848976e6721033829c90/PrimeNumberTheoremAnd/MediumPNT.lean#L6457"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-06-27T13:01:00-04:00",
        "inclusion_date": "2025-07-13T23:20:18.124737+00:00"
      },
      "id": "763feeed72357413fd4d597a19b2048e964ce1447be91d47dc56e67190176471"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "50d1283ac830e0464671949a4ee23f70eda09242",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7order.lean",
        "start_line": 256,
        "start_column": 4,
        "end_line": 256,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case succ.mpr\nz\u2080 : \u2102\nn : \u2115\nIH :\n  \u2200 (f : \u2102 \u2192 \u2102) (hf : AnalyticAt \u2102 f z\u2080), hf.order \u2260 \u22a4 \u2192 ((\u2200 k < n, \u22ef.order = 0) \u2227 deriv^[n] f z\u2080 \u2260 0 \u2194 hf.order = \u2191n)\nf : \u2102 \u2192 \u2102\nhf : AnalyticAt \u2102 f z\u2080\nhfin : hf.order \u2260 \u22a4\n\u22a2 hf.order = \u2191(n + 1) \u2192 (\u2200 k < n + 1, \u22ef.order = 0) \u2227 deriv^[n + 1] f z\u2080 \u2260 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/50d1283ac830e0464671949a4ee23f70eda09242/Mathlib/NumberTheory/h7order.lean#L256"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-05-20T17:20:40+02:00",
        "inclusion_date": "2025-05-21T03:02:42.449798+00:00"
      },
      "id": "f8a06dd3ac6c4ea2426700113405d68f1d172eaddae2e7ee2e77ef3f8015a4b0"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
        "start_line": 105,
        "start_column": 2,
        "end_line": 105,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure volume\nA B : Set \u03a9\nhA : volume A = 0\n\u22a2 condProb \u03a9 inst\u271d\u00b9 A B = 0",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Topics/Probability.lean#L105"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "3bf293e03f3566cbcf072a694f879c4be81a7f7a6ca6e9a48d9ba6d577f451a0"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/Data/Nat/Bitwise.lean",
        "start_line": 1232,
        "start_column": 36,
        "end_line": 1232,
        "end_column": 41
      },
      "debug_info": {
        "goal": "n m : \u2115\nlow : Fin (2 ^ n)\nhigh : Fin (2 ^ m)\n\u22a2 \u2191high <<< n ||| \u2191low < 2 ^ (m + n)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/Data/Nat/Bitwise.lean#L1232"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "d0a1a8e3b710dcda379719f5f481dae736a2cc200771a6f532bd996353140fba"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
        "commit": "188e11d9fb964b2bbd4dce99316d5fc0cfe0c07a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
        "start_line": 84,
        "start_column": 71,
        "end_line": 84,
        "end_column": 76
      },
      "debug_info": {
        "goal": "d : \u2115\n\u22a2 Continuous \u21d1lorentzMap",
        "url": "https://github.com/HEPLean/PhysLean/blob/188e11d9fb964b2bbd4dce99316d5fc0cfe0c07a/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L84"
      },
      "metadata": {
        "blame_email_hash": "f5ab4f28bed3",
        "blame_date": "2025-05-05T23:32:38+10:00",
        "inclusion_date": "2025-05-07T00:12:19.853100+00:00"
      },
      "id": "ba38f1089e4eccedd5cb3b7b5edaf43689aee7bb6429cc4bf5cdc3fcffca50b1"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 115,
        "start_column": 37,
        "end_line": 115,
        "end_column": 42
      },
      "debug_info": {
        "goal": "a b : \u211d\nh\u2080 : a = -1\nh\u2081 : b = 5\n\u22a2 -a - b ^ 2 + 3 * (a * b) = -39",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L115"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "2b7da3ab6776f0ed14d99d9f7970fa2043d1b4e0da5a0334e6ac88a3d9017fb9"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_03.lean",
        "start_line": 173,
        "start_column": 6,
        "end_line": 173,
        "end_column": 11
      },
      "debug_info": {
        "goal": "k l m n : \u2115\nh_2lel : 2 \u2264 l\nh_4lek : 4 \u2264 k\nh_klen4 : k \u2264 n - 4\nh_wlog : \u2200 (k' : \u2115), 4 \u2264 k' \u2192 k' \u2264 n - 4 \u2192 2 * k' \u2264 n \u2192 n.choose k' \u2260 m ^ l\nh : n < 2 * k\nh_klen : k \u2264 n\nk' : \u2115 := n - k\nh_k'_def : k' = n - k\n\u22a2 2 * k' \u2264 n",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_03.lean#L173"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2023-07-11T14:23:06+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "50e8190714479321b343fb276364d7a710df30799d1bc7ac51a96ed12b365034"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/4ComplexMatrices.lean",
        "start_line": 136,
        "start_column": 2,
        "end_line": 136,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m : Type u_1\ninst\u271d\u00b9 : Fintype m\ninst\u271d : DecidableEq m\nA B : Matrix m m \u211d\nt : \u211d\nh : IsUnit (A + t \u2022 B)\n\u22a2 (1 - t \u2022 I) \u2022\n      ((A + t \u2022 B + (B - t \u2022 A) * (A + t \u2022 B)\u207b\u00b9 * (B - t \u2022 A))\u207b\u00b9.map Complex.ofReal -\n          ((A + t \u2022 B + (B - t \u2022 A) * (A + t \u2022 B)\u207b\u00b9 * (B - t \u2022 A))\u207b\u00b9 * (B - t \u2022 A) * (A + t \u2022 B)).map fun x =>\n            x \u2022 I)\u207b\u00b9 =\n    (1 - t \u2022 I) \u2022\n      ((A + t \u2022 B + (B - t \u2022 A) * (A + t \u2022 B)\u207b\u00b9 * (B - t \u2022 A))\u207b\u00b9.map Complex.ofReal *\n        (1 - ((B - t \u2022 A) * (A + t \u2022 B)\u207b\u00b9).map fun x => x \u2022 I))",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/4ComplexMatrices.lean#L136"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2023-10-11T15:16:39+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "9b2c7083757c9ea68bd0b5d045091f1343fd5cbaaf3e40bf78b42aa72160721d"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 3 - 6, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "5ab24a647c77aa1c7b351b5e62316e68ae5358c3b0806b7297a4d0389b979001"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "bounded-depth",
        "commit": "ac2e14a982a125f06c7905a55dabf360bf7691ee",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Propositional/Logic/Sublogic.lean",
        "start_line": 151,
        "start_column": 10,
        "end_line": 151,
        "end_column": 15
      },
      "debug_info": {
        "goal": "case h.refine_3\nn : \u2115+\nF : Frame := Frame.mk (Fin (\u2191n + 1)) fun x y => x \u2264 y\ni j : Fin (List.finRange (\u2191n + 1)).length\n\u22a2 (List.finRange (\u2191n + 1))[\u2191i] = (List.finRange (\u2191n + 1))[\u2191j] \u2192 i = j",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/ac2e14a982a125f06c7905a55dabf360bf7691ee/Foundation/Propositional/Logic/Sublogic.lean#L151"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-06T11:02:54+09:00",
        "inclusion_date": "2025-05-06T23:18:05.763718+00:00"
      },
      "id": "3a936b2cfa4336e003fd3abee05891ee74647fe88a5f9dc03ea96c966a53a355"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "39d3ea7ba366660f6776a025cc67e05a84903bc8",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/ToMathlib/RealInterpolation/Minkowski.lean",
        "start_line": 353,
        "start_column": 2,
        "end_line": 353,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nE\u2081 : Type u_5\nm : MeasurableSpace \u03b1\n\u03bc : Measure \u03b1\ng : \u03b1 \u2192 E\u2081\ninst\u271d\u00b3 : MeasurableSpace E\u2081\ninst\u271d\u00b2 : NormedAddCommGroup E\u2081\ninst\u271d\u00b9 : BorelSpace E\u2081\ninst\u271d : SigmaFinite \u03bc\nhg : AEMeasurable g \u03bc\ntc : ToneCouple\n\u22a2 AEMeasurable (fun x => tc.ton (ENNReal.ofReal x.1)) ((volume.restrict (Ioi 0)).prod \u03bc)",
        "url": "https://github.com/fpvandoorn/carleson/blob/39d3ea7ba366660f6776a025cc67e05a84903bc8/Carleson/ToMathlib/RealInterpolation/Minkowski.lean#L353"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-06-03T16:50:08+02:00",
        "inclusion_date": "2025-06-22T04:26:50.468296+00:00"
      },
      "id": "f01f3fe5f6827e466be24e0eb0b1938b798bd8d0d6db146979d3555dbcfdc3bf"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/AutomorphicForm/QuaternionAlgebra/FiniteDimensional.lean",
        "start_line": 20,
        "start_column": 2,
        "end_line": 20,
        "end_column": 7
      },
      "debug_info": {
        "goal": "F : Type u_1\ninst\u271d\u2076 : Field F\ninst\u271d\u2075 : NumberField F\ninst\u271d\u2074 : IsTotallyReal F\nD : Type u_2\ninst\u271d\u00b3 : Ring D\ninst\u271d\u00b2 : Algebra F D\ninst\u271d\u00b9 : IsQuaternionAlgebra F D\nK : Type u_3\ninst\u271d : Field K\nU : Subgroup (D \u2297[F] FiniteAdeleRing (\ud835\udcde F) F)\u02e3\n\u22a2 FiniteDimensional K (WeightTwoAutomorphicFormOfLevel U K)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicForm/QuaternionAlgebra/FiniteDimensional.lean#L20"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-03-15T18:40:46+00:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "2f4c6b7472cd6724b1396e8d3fa00a413e50315f0cf763f1fa9a103e24e2af18"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "cd307b92aeb4256b7a50fcebe1a51d2dc94f1675",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 224,
        "start_column": 2,
        "end_line": 224,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\n\u03b2 : Type u_3\ninst\u271d\u00b9 : DecidableEq \u03b2\nr : \u03b1 \u2192 \u03b2 \u2192 Prop\ninst\u271d : (a : \u03b1) \u2192 Fintype \u2191(Rel.image r {a})\nhr : \u2200 (A : Finset \u03b1), A.card \u2264 card \u2191(Rel.image r \u2191A)\n\u22a2 \u2203 f, Injective f \u2227 \u2200 (a : \u03b1), r a (f a)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/cd307b92aeb4256b7a50fcebe1a51d2dc94f1675/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L224"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-07-01T05:41:11.977554+00:00"
      },
      "id": "085bb0f64c7102b156d5bb1882a5392e816cec076e3e9a68cb5a3bd29f49f97c"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "51c6063c647276f7c01e848976e6721033829c90",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 6411,
        "start_column": 25,
        "end_line": 6411,
        "end_column": 30
      },
      "debug_info": {
        "goal": "c : \u211d := \u22ef\ncpos : 0 < c\nC : \u211d := \u22ef\nX\u2080 : \u211d := \u22ef\nX : \u211d\nX_ge_X\u2080 : X \u2265 X\u2080\nX_gt_3 : 3 < X\n\u03b5 : \u211d := \u22ef\n\u03b5_pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\n\u03b5_X : 2 < X * \u03b5\n\u03bd : \u211d \u2192 \u211d\nContDiff\u03bd : ContDiff \u211d (\u2191\u22a4) \u03bd\n\u03bd_nonneg' : \u2200 (x : \u211d), 0 \u2264 \u03bd x\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\n\u03bd_massOne' : \u222b (x : \u211d) in Ici 0, \u03bd x / x = 1\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\n\u03c8_\u03b5_of_X : \u2102 := \u22ef\nC_unsmoothing : \u211d\nC_unsmoothing_pos : C_unsmoothing > 0\n\u03c8_\u03c8_\u03b5_diff : \u2016\u2191(ChebyshevPsi X) - \u03c8_\u03b5_of_X\u2016 \u2264 C_unsmoothing * X * \u03b5 * Real.log X\nT : \u211d := \u22ef\n\u22a2 3 < T",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/51c6063c647276f7c01e848976e6721033829c90/PrimeNumberTheoremAnd/MediumPNT.lean#L6411"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-06-27T13:01:00-04:00",
        "inclusion_date": "2025-07-13T23:20:18.124737+00:00"
      },
      "id": "eedcad1940c6d68f4a23959010bddfe4ebc5b21c1174910a92a7f9142a626aa2"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "50d1283ac830e0464671949a4ee23f70eda09242",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7order.lean",
        "start_line": 261,
        "start_column": 74,
        "end_line": 261,
        "end_column": 79
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 \u2200 (f : \u2102 \u2192 \u2102) (z\u2080 : \u2102) (hf : \u2200 (z : \u2102), AnalyticAt \u2102 f z),\n    (\u2200 (z : \u2102), \u22ef.order \u2260 \u22a4) \u2192 (\u2200 k < n, iteratedDeriv k f z\u2080 = 0) \u2192 \u2191n \u2264 \u22ef.order",
        "url": "https://github.com/leanprover-community/mathlib4/blob/50d1283ac830e0464671949a4ee23f70eda09242/Mathlib/NumberTheory/h7order.lean#L261"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-05-20T17:20:40+02:00",
        "inclusion_date": "2025-05-21T03:02:42.449798+00:00"
      },
      "id": "985ae959594b91e38c764b90b9ffcf3b197a9b82ebd775bf6f2b19479c5fa99d"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
        "start_line": 109,
        "start_column": 2,
        "end_line": 109,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure volume\nA B : Set \u03a9\nhB : volume B = 0\n\u22a2 condProb \u03a9 inst\u271d\u00b9 A B = 0",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Topics/Probability.lean#L109"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "37ae7cf214c20cf8f2ec8a1fbeb4724ef1f7d25ec8b94c187ab42499e7d2a01b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/Data/Nat/Bitwise.lean",
        "start_line": 1237,
        "start_column": 2,
        "end_line": 1237,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n m : \u2115\nlow : Fin (2 ^ n)\nhigh : Fin (2 ^ m)\n\u22a2 Nat.getLowBits n \u2191(Nat.joinBits n m low high) = \u2191low",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/Data/Nat/Bitwise.lean#L1237"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "dbaf4dbd5993b68a4fc04bec9b79c4757a64ef8bc2422f5113eefd44e27687b6"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
        "commit": "188e11d9fb964b2bbd4dce99316d5fc0cfe0c07a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
        "start_line": 85,
        "start_column": 66,
        "end_line": 85,
        "end_column": 71
      },
      "debug_info": {
        "goal": "d : \u2115\n\u22a2 IsOpenMap \u21d1lorentzMap",
        "url": "https://github.com/HEPLean/PhysLean/blob/188e11d9fb964b2bbd4dce99316d5fc0cfe0c07a/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L85"
      },
      "metadata": {
        "blame_email_hash": "f5ab4f28bed3",
        "blame_date": "2025-05-05T23:32:38+10:00",
        "inclusion_date": "2025-05-07T00:12:19.853100+00:00"
      },
      "id": "63b3b337abefd97f65282d265245e436fb0187fe1234952457de0f349a784462"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 121,
        "start_column": 35,
        "end_line": 121,
        "end_column": 40
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 0 < n\nh\u2081 : logb 2 (logb 16 \u2191n) = logb 4 (logb 4 \u2191n)\n\u22a2 (digits 10 n).sum = 13",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L121"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "7b64ec4dac3ce56a2e20a4573d1a6f895db4cc9a115acb539b7605604eed8418"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_45.lean",
        "start_line": 58,
        "start_column": 2,
        "end_line": 58,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m n : \u2115\nh_m : m \u2265 2\nh_n : n \u2265 2\n\u22a2 \u2203 N, chapter45.ramsey_property m n N",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_45.lean#L58"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2023-04-09T21:28:27+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "fd5fc62c9ffa2c77601e6a642856a5549daa2b679018a175a96815588fa30755"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/4ComplexMatrices.lean",
        "start_line": 143,
        "start_column": 2,
        "end_line": 143,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m : Type u_1\ninst\u271d\u00b9 : Fintype m\ninst\u271d : DecidableEq m\nA B : Matrix m m \u211d\nt : \u211d\nh : IsUnit (A + t \u2022 B)\n\u22a2 (1 - t \u2022 I) \u2022\n      ((A + t \u2022 B + (B - t \u2022 A) * (A + t \u2022 B)\u207b\u00b9 * (B - t \u2022 A))\u207b\u00b9.map Complex.ofReal *\n        (1 - ((B - t \u2022 A) * (A + t \u2022 B)\u207b\u00b9).map fun x => x \u2022 I)) =\n    (A + t \u2022 B + (B - t \u2022 A) * (A + t \u2022 B)\u207b\u00b9 * (B - t \u2022 A))\u207b\u00b9.map Complex.ofReal *\n      (1 - t \u2022 ((B - t \u2022 A) * (A + t \u2022 B)\u207b\u00b9).map Complex.ofReal -\n        (t \u2022 1 + (B - t \u2022 A) * (A + t \u2022 B)\u207b\u00b9).map fun x => x \u2022 I)",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/4ComplexMatrices.lean#L143"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2023-10-11T15:16:39+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "315e17e3d5fde4d9aa07e4997db8cf6b829e077a286f450674fda1d30c2b2a1a"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 4 - 6, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "6bcd360233d42fc12faf3d0c2d8c7c26a61296d0aa6d6d49305c1c01a0898340"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "bounded-depth",
        "commit": "ac2e14a982a125f06c7905a55dabf360bf7691ee",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Propositional/Logic/Sublogic.lean",
        "start_line": 154,
        "start_column": 2,
        "end_line": 154,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n m : \u2115+\nhnm : n < m\n\u22a2 Logic.BD m \u2282 Logic.BD n",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/ac2e14a982a125f06c7905a55dabf360bf7691ee/Foundation/Propositional/Logic/Sublogic.lean#L154"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-06T11:02:54+09:00",
        "inclusion_date": "2025-05-06T23:18:05.763718+00:00"
      },
      "id": "962afbe4620783b46916014fac5fabbf95072cefa58066a1f204db88fd8288f9"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "39d3ea7ba366660f6776a025cc67e05a84903bc8",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/ToMathlib/RealInterpolation/Minkowski.lean",
        "start_line": 426,
        "start_column": 4,
        "end_line": 426,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case pos\n\u03b1 : Type u_1\nE\u2081 : Type u_5\nm : MeasurableSpace \u03b1\n\u03bc : Measure \u03b1\nf : \u03b1 \u2192 E\u2081\ninst\u271d\u00b2 : MeasurableSpace E\u2081\ninst\u271d\u00b9 : NormedAddCommGroup E\u2081\ninst\u271d : BorelSpace E\u2081\nj : Bool\nh\u03bc : SigmaFinite (\u03bc.restrict (Function.support f))\nhf : AEMeasurable f \u03bc\ntc : ToneCouple\nhj : j = true\n\u22a2 AEMeasurable (fun a => trunc f (tc.ton a.1) a.2) ((volume.restrict (Ioi 0)).prod (\u03bc.restrict (Function.support f)))",
        "url": "https://github.com/fpvandoorn/carleson/blob/39d3ea7ba366660f6776a025cc67e05a84903bc8/Carleson/ToMathlib/RealInterpolation/Minkowski.lean#L426"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-06-03T16:50:08+02:00",
        "inclusion_date": "2025-06-22T04:26:50.468296+00:00"
      },
      "id": "130f29e322afa7f710477f3876fb1dfb97eeccbb3cc86d9a4eda11ac400ee817"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/AutomorphicForm/QuaternionAlgebra/Defs.lean",
        "start_line": 39,
        "start_column": 2,
        "end_line": 39,
        "end_column": 7
      },
      "debug_info": {
        "goal": "F : Type u_1\ninst\u271d\u00b3 : Field F\ninst\u271d\u00b2 : NumberField F\nD : Type u_2\ninst\u271d\u00b9 : Ring D\ninst\u271d : Algebra F D\n\u22a2 (incl\u2082 F D).range \u2264 Subgroup.center (Dfx F D)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicForm/QuaternionAlgebra/Defs.lean#L39"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-03-15T18:40:46+00:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "de75557e0fe14dab1d7baca3364d1230e4b0dd856849bde1b66eef6dbb32d84a"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 247,
        "start_column": 2,
        "end_line": 247,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 \u2203 \u03b5, 0 < \u03b5 \u2227 \u2200 (\u03b1 : Type u_5) [inst : Fintype \u03b1], \u2203 x, \u2200 (f : \u03b1 \u2192 \u211d \u00d7 \u211d), \u03b5 * \u221a\u2191(card \u03b1) \u2264 distortion f",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L247"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "8e26cd54b8be1340d8d563c8684323358197b445960de25fa966dc98367ab182"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "e99e6f7b4a57098ded666cd0ed64aae7078440a3",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 7388,
        "start_column": 78,
        "end_line": 7388,
        "end_column": 83
      },
      "debug_info": {
        "goal": "\u03bd : \u211d \u2192 \u211d\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\nc_close : \u211d\nc_close_pos : c_close > 0\nA C_bnd : \u211d\nC_bnd_pos : 0 < C_bnd\nA_in_Ioc : A \u2208 Ioc 0 (1 / 2)\nzeta_bnd : LogDerivZetaHasBound A C_bnd\n\u03c3\u2082' : \u211d\n\u03c3\u2082 : \u211d := max \u03c3\u2082' (1 / 2)\n\u03c3\u2082_pos : 0 < \u03c3\u2082\n\u03c3\u2082_lt_one : \u03c3\u2082 < 1\nholo2 : HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (Icc \u03c3\u2082 2 \u00d7\u2102 Icc (-3) 3 \\ {1})\nc\u2081 : \u211d\nc\u2081pos : c\u2081 > 0\nhc\u2081 : \u2200 (\u03b5 : \u211d), 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2081 \u03bd \u03b5 X T\u2016 \u2264 c\u2081 * X * Real.log X / (\u03b5 * T)\nc\u2082 : \u211d\nc\u2082pos : 0 < c\u2082\nhc\u2082 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2082 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2082 * X / (\u03b5 * T)\nc\u2083 : \u211d\nc\u2083pos : 0 < c\u2083\nhc\u2083 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2083 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2083 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2085 : \u211d\nc\u2085pos : 0 < c\u2085\nhc\u2085 : \u2200 (X : \u211d), 3 < X \u2192 \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2016I\u2085 \u03bd \u03b5 X \u03c3\u2082\u2016 \u2264 c\u2085 * X ^ \u03c3\u2082 / \u03b5\nc\u2087 : \u211d\nc\u2087pos : 0 < c\u2087\nhc\u2087 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2087 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2087 * X * X ^ (-A / Real.log T ^ 9) / \u03b5\nc\u2088 : \u211d\nc\u2088pos : 0 < c\u2088\nhc\u2088 :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 {\u03b5 : \u211d},\n        0 < \u03b5 \u2192\n          \u03b5 < 1 \u2192\n            \u2200 {T : \u211d},\n              3 < T \u2192\n                let \u03c3\u2081 := 1 - A / Real.log T ^ 9;\n                \u2016I\u2088 \u03bd \u03b5 T X \u03c3\u2081\u2016 \u2264 c\u2088 * X / (\u03b5 * T)\nc\u2089 : \u211d\nc\u2089pos : c\u2089 > 0\nhc\u2089 : \u2200 {\u03b5 : \u211d}, 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 \u2200 (X : \u211d), 3 < X \u2192 \u2200 {T : \u211d}, 3 < T \u2192 \u2016I\u2089 \u03bd \u03b5 X T\u2016 \u2264 c\u2089 * X * Real.log X / (\u03b5 * T)\nc : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\n\u03b5x : \u211d \u2192 \u211d := fun x => Real.exp (-c * Real.log x ^ (1 / 10))\nTx : \u211d \u2192 \u211d := fun x => Real.exp (2 * c * Real.log x ^ (1 / 10))\neventually_\u03b5x_lt_one : \u2200\u1da0 (x : \u211d) in atTop, \u03b5x x < 1\neventually_2_lt : \u2200\u1da0 (x : \u211d) in atTop, 2 < x * \u03b5x x\neventually_T_gt_3 : \u2200\u1da0 (x : \u211d) in atTop, 3 < Tx x\neventually_\u03c3\u2082_lt_\u03c3\u2081 : \u2200\u1da0 (x : \u211d) in atTop, \u03c3\u2082 < 1 - A / Real.log (Tx x) ^ 9\nX : \u211d\nX_gt_3 : 3 < X\n\u03b5_lt_one : \u03b5x X < 1\n\u03b5_X : 2 < X * \u03b5x X\nT_gt_3 : 3 < Tx X\n\u03c3\u2082_lt_\u03c3\u2081 : \u03c3\u2082 < 1 - A / Real.log (Tx X) ^ 9\n\u03b5 : \u211d := \u03b5x X\n\u03b5_pos : 0 < \u03b5\nh_close : \u2016SmoothedChebyshev \u03bd \u03b5 X - \u2191(ChebyshevPsi X)\u2016 \u2264 c_close * \u03b5 * X * Real.log X\n\u03c8_\u03b5_of_X : \u2102 := SmoothedChebyshev \u03bd \u03b5 X\nT : \u211d := Tx X\nholo1 :\n  HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (Icc (1 - A / Real.log T ^ 9) 2 \u00d7\u2102 Icc (-T) T \\ {1})\n\u03c3\u2081 : \u211d := 1 - A / Real.log T ^ 9\n\u03c3\u2081pos : 0 < \u03c3\u2081\n\u03c3\u2081_lt_one : \u03c3\u2081 < 1\nholo2a : HolomorphicOn (SmoothedChebyshevIntegrand \u03bd \u03b5 X) (Icc \u03c3\u2082 2 \u00d7\u2102 Icc (-3) 3 \\ {1})\n\u03c8_\u03b5_diff :\n  \u2016\u03c8_\u03b5_of_X - MellinTransform (fun x => \u2191(Smooth1 \u03bd \u03b5 x)) 1 * \u2191X\u2016 \u2264\n    \u2016I\u2081 \u03bd \u03b5 X T\u2016 + \u2016I\u2082 \u03bd \u03b5 T X \u03c3\u2081\u2016 + \u2016I\u2083 \u03bd \u03b5 T X \u03c3\u2081\u2016 + \u2016I\u2084 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 + \u2016I\u2085 \u03bd \u03b5 X \u03c3\u2082\u2016 + \u2016I\u2086 \u03bd \u03b5 X \u03c3\u2081 \u03c3\u2082\u2016 +\n          \u2016I\u2087 \u03bd \u03b5 T X \u03c3\u2081\u2016 +\n        \u2016I\u2088 \u03bd \u03b5 T X \u03c3\u2081\u2016 +\n      \u2016I\u2089 \u03bd \u03b5 X T\u2016\n\u22a2 \u2203 C_main > 0, \u2016MellinTransform (fun x => \u2191(Smooth1 \u03bd \u03b5 x)) 1 * \u2191X - \u2191X\u2016 \u2264 C_main * \u03b5 * X",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/e99e6f7b4a57098ded666cd0ed64aae7078440a3/PrimeNumberTheoremAnd/MediumPNT.lean#L7388"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-06-27T13:01:00-04:00",
        "inclusion_date": "2025-07-21T23:21:07.188403+00:00"
      },
      "id": "8b6440865812dcba1b86b95e5d554f1547400f58b4ee471585911ae7fcac9c03"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "terminalCat",
        "commit": "a2f04a3f90bf6a62c9b984897f5eb40a46b5f735",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/AlgebraicTopology/SimplicialSet/HoFunctorPreservesBinaryProducts.lean",
        "start_line": 200,
        "start_column": 60,
        "end_line": 200,
        "end_column": 65
      },
      "debug_info": {
        "goal": "\u22a2 HasBinaryProducts CategoryTheory.QCat",
        "url": "https://github.com/leanprover-community/mathlib4/blob/a2f04a3f90bf6a62c9b984897f5eb40a46b5f735/Mathlib/AlgebraicTopology/SimplicialSet/HoFunctorPreservesBinaryProducts.lean#L200"
      },
      "metadata": {
        "blame_email_hash": "eaaeec08515d",
        "blame_date": "2025-05-19T17:00:43-04:00",
        "inclusion_date": "2025-06-05T03:12:28.661777+00:00"
      },
      "id": "4be08c681c60f7aa4301b843f469992c204d51662626b20a832f19e527b3df9b"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
        "start_line": 124,
        "start_column": 2,
        "end_line": 124,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case neg\n\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure volume\nA B : Set \u03a9\nhB : volume B \u2260 0\nh : \u00acvolume A = 0\n\u22a2 condProb \u03a9 inst\u271d\u00b9 A B = volume A * condProb \u03a9 inst\u271d\u00b9 B A / volume B",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Topics/Probability.lean#L124"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "10c811823af9611726a09ac83f03fbbf14e23cc9c0df398031bff47f604592b7"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/Data/Nat/Bitwise.lean",
        "start_line": 1242,
        "start_column": 2,
        "end_line": 1242,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n m : \u2115\nlow : Fin (2 ^ n)\nhigh : Fin (2 ^ m)\n\u22a2 Nat.getHighBits_no_shl n \u2191(Nat.joinBits n m low high) = \u2191high",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/Data/Nat/Bitwise.lean#L1242"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "7e89668ab471bb41930960ec463b0f24ff95b21c435639069d615c6ff6aacd50"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
        "commit": "188e11d9fb964b2bbd4dce99316d5fc0cfe0c07a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
        "start_line": 86,
        "start_column": 80,
        "end_line": 86,
        "end_column": 85
      },
      "debug_info": {
        "goal": "d : \u2115\n\u22a2 Function.Injective \u21d1lorentzMap",
        "url": "https://github.com/HEPLean/PhysLean/blob/188e11d9fb964b2bbd4dce99316d5fc0cfe0c07a/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L86"
      },
      "metadata": {
        "blame_email_hash": "f5ab4f28bed3",
        "blame_date": "2025-05-05T23:32:38+10:00",
        "inclusion_date": "2025-05-07T00:12:19.853100+00:00"
      },
      "id": "84f747345ff9a2c15db777b73471ed2f6d11d37688aa65264676fe17e7844973"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 129,
        "start_column": 34,
        "end_line": 129,
        "end_column": 39
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : 0 \u2264 1 + 2 * x\nh\u2081 : (1 - \u221a(1 + 2 * x)) ^ 2 \u2260 0\nh\u2082 : 4 * x ^ 2 / (1 - \u221a(1 + 2 * x)) ^ 2 < 2 * x + 9\nh\u2083 : x \u2260 0\n\u22a2 -(1 / 2) \u2264 x \u2227 x < 45 / 8",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L129"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "ffb642d7a5c53256e256f63d205925b23249e9479cfb9ed0cd38efeeec1102e7"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_08.lean",
        "start_line": 48,
        "start_column": 2,
        "end_line": 48,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u211d\n\u22a2 book.irrational.Irrational x \u2194 \u2200 (a b : \u2124), x \u2260 \u2191a / \u2191b",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_08.lean#L48"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2023-04-09T12:38:37+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "aefe3ae1c8f73ea49715321401c44a80e4ada00bfb0f7a95d25bedefea09a612"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/4ComplexMatrices.lean",
        "start_line": 150,
        "start_column": 2,
        "end_line": 150,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m : Type u_1\ninst\u271d\u00b9 : Fintype m\ninst\u271d : DecidableEq m\nA B : Matrix m m \u211d\nt : \u211d\nh : IsUnit (A + t \u2022 B)\n\u22a2 ((A + t \u2022 B + (B - t \u2022 A) * (A + t \u2022 B)\u207b\u00b9 * (B - t \u2022 A))\u207b\u00b9.map Complex.ofReal *\n        (1 - t \u2022 ((B - t \u2022 A) * (A + t \u2022 B)\u207b\u00b9).map Complex.ofReal) -\n      (A + t \u2022 B + (B - t \u2022 A) * (A + t \u2022 B)\u207b\u00b9 * (B - t \u2022 A))\u207b\u00b9.map Complex.ofReal *\n        (t \u2022 1 + (B - t \u2022 A) * (A + t \u2022 B)\u207b\u00b9).map fun x => x \u2022 I) =\n    ((A + t \u2022 B + (B - t \u2022 A) * (A + t \u2022 B)\u207b\u00b9 * (B - t \u2022 A))\u207b\u00b9 * (1 - t \u2022 ((B - t \u2022 A) * (A + t \u2022 B)\u207b\u00b9))).map\n        Complex.ofReal -\n      ((A + t \u2022 B + (B - t \u2022 A) * (A + t \u2022 B)\u207b\u00b9 * (B - t \u2022 A))\u207b\u00b9 * (t \u2022 1 + (B - t \u2022 A) * (A + t \u2022 B)\u207b\u00b9)).map fun x =>\n        x \u2022 I",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/4ComplexMatrices.lean#L150"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2023-10-11T15:16:39+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "41ad2809b1e9c40e0013d692e154939864a55a47c316b499a2218ab74b7e4db3"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 5 - 6, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "06d66619040c0abd3e5408da51e157a7bd6e5e11c58c6eb2cffa071630ba544c"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "bounded-depth",
        "commit": "ac2e14a982a125f06c7905a55dabf360bf7691ee",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Propositional/Kripke/AxiomBoundDepth.lean",
        "start_line": 111,
        "start_column": 96,
        "end_line": 111,
        "end_column": 101
      },
      "debug_info": {
        "goal": "F : Frame\nn : \u2115+\n\u22a2 F \u22a7 Axioms.BoundDepth n \u2192 F.IsDepthLt \u2191n",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/ac2e14a982a125f06c7905a55dabf360bf7691ee/Foundation/Propositional/Kripke/AxiomBoundDepth.lean#L111"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-06T11:02:54+09:00",
        "inclusion_date": "2025-05-06T23:18:05.763718+00:00"
      },
      "id": "1c66a8b4b34c4cb1bef31d893890ec68b9ea6b7bd30c23b786dd8c18989ba48e"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "39d3ea7ba366660f6776a025cc67e05a84903bc8",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/ToMathlib/RealInterpolation/Minkowski.lean",
        "start_line": 428,
        "start_column": 4,
        "end_line": 428,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case neg\n\u03b1 : Type u_1\nE\u2081 : Type u_5\nm : MeasurableSpace \u03b1\n\u03bc : Measure \u03b1\nf : \u03b1 \u2192 E\u2081\ninst\u271d\u00b2 : MeasurableSpace E\u2081\ninst\u271d\u00b9 : NormedAddCommGroup E\u2081\ninst\u271d : BorelSpace E\u2081\nj : Bool\nh\u03bc : SigmaFinite (\u03bc.restrict (Function.support f))\nhf : AEMeasurable f \u03bc\ntc : ToneCouple\nhj : \u00acj = true\n\u22a2 AEMeasurable (fun a => (f - trunc f (tc.ton a.1)) a.2)\n    ((volume.restrict (Ioi 0)).prod (\u03bc.restrict (Function.support f)))",
        "url": "https://github.com/fpvandoorn/carleson/blob/39d3ea7ba366660f6776a025cc67e05a84903bc8/Carleson/ToMathlib/RealInterpolation/Minkowski.lean#L428"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-06-03T16:50:08+02:00",
        "inclusion_date": "2025-06-22T04:26:50.468296+00:00"
      },
      "id": "15532fea02bc7c85a837fb557cfcf083a87fbffaf8e398097662e73b4494749e"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-CI-fix",
        "commit": "ff1b6f6928d9860b559edca6707887c0b6b70eff",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FLT/AutomorphicForm/QuaternionAlgebra/Defs.lean",
        "start_line": 188,
        "start_column": 2,
        "end_line": 188,
        "end_column": 7
      },
      "debug_info": {
        "goal": "G : Type u_4\ninst\u271d\u00b2 : Group G\ninst\u271d\u00b9 : TopologicalSpace G\ninst\u271d : IsTopologicalGroup G\nU : Subgroup G\nhU : IsOpen \u2191U\ng : ConjAct G\n\u22a2 IsOpen \u2191(g \u2022 U)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/ff1b6f6928d9860b559edca6707887c0b6b70eff/FLT/AutomorphicForm/QuaternionAlgebra/Defs.lean#L188"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-03-15T18:40:46+00:00",
        "inclusion_date": "2025-09-08T17:50:19.403061+00:00"
      },
      "id": "fe39023c1336c4ee40b71c198ffd0dd847ea12bd69e9b02032882fd86409b1b5"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 252,
        "start_column": 2,
        "end_line": 252,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 \u2203 \u03b5, 0 < \u03b5 \u2227 \u2200 (\u03b1 : Type u_5) [inst : Fintype \u03b1], \u2203 x, \u2200 (f : \u03b1 \u2192 \u211d \u00d7 \u211d), \u03b5 * \u2191(card \u03b1) \u2264 distortion f",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L252"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "8b867f6b08c33bef9844ac470761aa75a51758590ce5d5645a0dc7c8663125c3"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "faabe6281bf4c0ffe761835e61488b9e0d69c6cd",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 6437,
        "start_column": 4,
        "end_line": 6437,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case intro.intro\nc : \u211d := sorry\ncpos : 0 < c\nC\u271d : \u211d := sorry\nX\u2080 : \u211d := sorry\nX : \u211d\nX_ge_X\u2080 : X \u2265 X\u2080\nX_gt_3 : 3 < X\n\u03b5 : \u211d := sorry\n\u03b5_pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\n\u03bd : \u211d \u2192 \u211d\nContDiff\u03bd : ContDiff \u211d (\u2191\u22a4) \u03bd\n\u03bd_nonneg' : \u2200 (x : \u211d), 0 \u2264 \u03bd x\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\n\u03bd_massOne' : \u222b (x : \u211d) in Ici 0, \u03bd x / x = 1\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u03bd_massOne : \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1\n\u03c8_\u03b5_of_X : \u2102 := SmoothedChebyshev \u03bd \u03b5 X\nC : \u211d\nCpos : C > 0\nhC :\n  \u2200 (X : \u211d),\n    3 < X \u2192\n      \u2200 (\u03b5 : \u211d), 0 < \u03b5 \u2192 \u03b5 < 1 \u2192 2 < X * \u03b5 \u2192 \u2016SmoothedChebyshev \u03bd \u03b5 X - \u2191(ChebyshevPsi X)\u2016 \u2264 C * \u03b5 * X * Real.log X\nthis : \u2016SmoothedChebyshev \u03bd \u03b5 X - \u2191(ChebyshevPsi X)\u2016 \u2264 C * \u03b5 * X * Real.log X\n\u22a2 \u2016\u2191(ChebyshevPsi X) - \u03c8_\u03b5_of_X\u2016 \u2264 C * X * \u03b5 * Real.log X",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/faabe6281bf4c0ffe761835e61488b9e0d69c6cd/PrimeNumberTheoremAnd/MediumPNT.lean#L6437"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-06-26T23:37:24-04:00",
        "inclusion_date": "2025-07-11T23:19:26.707212+00:00"
      },
      "id": "9a825db0468bbef7d15c65510d9e1a9acccec0469fac7f9d65e6ef00cd65ff80"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "terminalCat",
        "commit": "a2f04a3f90bf6a62c9b984897f5eb40a46b5f735",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/AlgebraicTopology/SimplicialSet/HoFunctorPreservesBinaryProducts.lean",
        "start_line": 205,
        "start_column": 93,
        "end_line": 205,
        "end_column": 98
      },
      "debug_info": {
        "goal": "\u22a2 PreservesLimitsOfShape (Discrete WalkingPair) (ObjectProperty.\u03b9 Quasicategory)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/a2f04a3f90bf6a62c9b984897f5eb40a46b5f735/Mathlib/AlgebraicTopology/SimplicialSet/HoFunctorPreservesBinaryProducts.lean#L205"
      },
      "metadata": {
        "blame_email_hash": "eaaeec08515d",
        "blame_date": "2025-05-19T17:00:43-04:00",
        "inclusion_date": "2025-06-05T03:12:28.661777+00:00"
      },
      "id": "7ff546031cb8295badab3f23ff7872e7f9b3bab984f94c7e6ccae19b8d2ab7af"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
        "start_line": 133,
        "start_column": 2,
        "end_line": 133,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure volume\nA B : Set \u03a9\n\u22a2 condProb \u03a9 inst\u271d\u00b9 A B = volume A * condProb \u03a9 inst\u271d\u00b9 B A / volume B",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Topics/Probability.lean#L133"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "6c3c9afc7e40870ed7b2ebd410f079c50e1d6ad12866457f761716efe6548e77"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/Data/Nat/Bitwise.lean",
        "start_line": 1248,
        "start_column": 2,
        "end_line": 1248,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n m k : \u2115\nlow : Fin (2 ^ n)\nhigh : Fin (2 ^ m)\n\u22a2 Nat.getBit k \u2191(Nat.joinBits n m low high) = if k < n then Nat.getBit k \u2191low else Nat.getBit (k - n) \u2191high",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/Data/Nat/Bitwise.lean#L1248"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "b2d6c3baaa9acd5e7831083f10f5f62138c4734ae86ecef903917ee499f524f8"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
        "commit": "188e11d9fb964b2bbd4dce99316d5fc0cfe0c07a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
        "start_line": 87,
        "start_column": 75,
        "end_line": 87,
        "end_column": 80
      },
      "debug_info": {
        "goal": "d : \u2115\n\u22a2 lorentzMap.ker = restricted d",
        "url": "https://github.com/HEPLean/PhysLean/blob/188e11d9fb964b2bbd4dce99316d5fc0cfe0c07a/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L87"
      },
      "metadata": {
        "blame_email_hash": "f5ab4f28bed3",
        "blame_date": "2025-05-05T23:32:38+10:00",
        "inclusion_date": "2025-05-07T00:12:19.853100+00:00"
      },
      "id": "0e61819fc7bf07b91c0ff07e6ae7ff8187e051d6f5677b92b59b32dc0d86d0b1"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 138,
        "start_column": 22,
        "end_line": 138,
        "end_column": 27
      },
      "debug_info": {
        "goal": "x y : \u2124\n\u22a2 x ^ 5 \u2260 y ^ 2 + 4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L138"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "3a150e318bb829e23fcf8fd79959a1be89c184356d8752bcdabc98b5bfe6533f"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_08.lean",
        "start_line": 57,
        "start_column": 2,
        "end_line": 57,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u211d\n\u22a2 HasSum (fun n => x ^ n / \u2191n.factorial) (exp x)",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_08.lean#L57"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2023-04-09T12:38:37+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "4431a897d94a9ddff2deded815b1feab05f9da3717f359fd11d3d76e09ba5fbc"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/1Basic.lean",
        "start_line": 149,
        "start_column": 2,
        "end_line": 149,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b9 : Fintype n\ninst\u271d : DecidableEq n\nA : Matrix n n \u211d\n\u22a2 (fun \u03b5 => (1 + \u03b5 \u2022 A).det) =\u1da0[Filter.atBot] fun \u03b5 =>\n    1 + A.det + \u2191\u03b5 * A.trace + 1 / 2 * \u2191\u03b5 ^ 2 * A.trace ^ 2 - 1 / 2 * \u2191\u03b5 ^ 2 * (A ^ 2).trace",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/1Basic.lean#L149"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2023-10-11T15:16:39+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "6af48d576c8d6d6ed2094fe8c36784824e98a5125e756b118bd63f8bf58e5c8b"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 6 - 6, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "4bf8077509e327eb5012ef8948108574f7bbad3b09202cba62caf8881df2eb43"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "bounded-depth",
        "commit": "2efcba7c9d835e9969977f8470ca9640e1f7cbd7",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Propositional/Kripke/AxiomBoundDepth.lean",
        "start_line": 239,
        "start_column": 6,
        "end_line": 239,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case h.right\nS : Type u_1\ninst\u271d\u00b2 : Entailment (Formula \u2115) S\n\ud835\udce2 : S\ninst\u271d\u00b9 : Consistent \ud835\udce2\ninst\u271d : Entailment.Int \ud835\udce2\nl : List (canonicalFrame \ud835\udce2).World\nhl\u2082 : l.head? = some (canonicalFrame \ud835\udce2).default\nhl\u2083 : List.Chain' (fun x1 x2 => x1 \u227a x2) l\nh : \ud835\udce2 \u22a2! Axioms.BoundDepth' 0\nhl\u2081 : l.length = 2\ni\u2080 : Fin l.length := \u27e80, \u22ef\u27e9\ni\u2081 : Fin l.length := \u27e81, \u22ef\u27e9\nx\u2080 x\u2081 : (canonicalFrame \ud835\udce2).World\n\u22a2 x\u2080 = x\u2081",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/2efcba7c9d835e9969977f8470ca9640e1f7cbd7/Foundation/Propositional/Kripke/AxiomBoundDepth.lean#L239"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-06T11:02:54+09:00",
        "inclusion_date": "2025-05-08T23:32:25.978477+00:00"
      },
      "id": "d6679858d78e498f6fd0c05f190da089763d996859a3368f1e6ebfb1a952cbe3"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "39d3ea7ba366660f6776a025cc67e05a84903bc8",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/ToMathlib/RealInterpolation/Minkowski.lean",
        "start_line": 447,
        "start_column": 4,
        "end_line": 447,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case hf\n\u03b1 : Type u_1\nE\u2081 : Type u_5\nm : MeasurableSpace \u03b1\n\u03bc : Measure \u03b1\nf : \u03b1 \u2192 E\u2081\nq q\u2080 p\u2080 : \u211d\ninst\u271d\u00b2 : MeasurableSpace E\u2081\ninst\u271d\u00b9 : NormedAddCommGroup E\u2081\ninst\u271d : BorelSpace E\u2081\nj : Bool\nh\u03bc : SigmaFinite (\u03bc.restrict (Function.support f))\nhp\u2080 : 0 < p\u2080\nhp\u2080q\u2080 : p\u2080 \u2264 q\u2080\nhf : AEMeasurable f \u03bc\ntc : ToneCouple\n\u22a2 AEMeasurable\n    (fun a => ENNReal.ofReal (a.1 ^ (q - q\u2080 - 1)) ^ (p\u2080\u207b\u00b9 * q\u2080)\u207b\u00b9 * \u2016trnc j f (tc.ton (ENNReal.ofReal a.1)) a.2\u2016\u2091 ^ p\u2080)\n    ((volume.restrict (Ioi 0)).prod (\u03bc.restrict (Function.support f)))",
        "url": "https://github.com/fpvandoorn/carleson/blob/39d3ea7ba366660f6776a025cc67e05a84903bc8/Carleson/ToMathlib/RealInterpolation/Minkowski.lean#L447"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-06-03T16:50:08+02:00",
        "inclusion_date": "2025-06-22T04:26:50.468296+00:00"
      },
      "id": "967daef7e00ac20cdaf844553cb4f9fb3dda9d07b6b878277af3fdb92219bc0b"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-hardly-ramified",
        "commit": "60be88a841fa232b563ea16600befe5efbfb3d07",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FLT/AutomorphicForm/QuaternionAlgebra/FiniteDimensional.lean",
        "start_line": 29,
        "start_column": 2,
        "end_line": 29,
        "end_column": 7
      },
      "debug_info": {
        "goal": "F : Type u_1\ninst\u271d\u2076 : Field F\ninst\u271d\u2075 : NumberField F\ninst\u271d\u2074 : IsTotallyReal F\nD : Type u_2\ninst\u271d\u00b3 : Ring D\ninst\u271d\u00b2 : Algebra F D\ninst\u271d\u00b9 : IsQuaternionAlgebra F D\nK : Type u_3\ninst\u271d : Field K\nU : Subgroup (TensorProduct F D (FiniteAdeleRing (RingOfIntegers F) F))\u02e3\n\u22a2 FiniteDimensional K (WeightTwoAutomorphicFormOfLevel U K)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/60be88a841fa232b563ea16600befe5efbfb3d07/FLT/AutomorphicForm/QuaternionAlgebra/FiniteDimensional.lean#L29"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-03-15T18:40:46+00:00",
        "inclusion_date": "2025-09-18T04:05:26.332171+00:00"
      },
      "id": "b0974da57e139b1934108830dce5cab2133a4024a3d311a7120726703a8fca75"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 132,
        "start_column": 11,
        "end_line": 132,
        "end_column": 16
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\na : \u03b1\n\u22a2 Measure.map (fun \u03c9 => a \u2208 X \u03c9 \u2229 Y \u03c9) \u03bc = (PMF.bernoulli' (p * q) \u22ef).toMeasure",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L132"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "532f84982618eda07d712d8400024a254e9e844c3d41a1de312c949aefc0ee38"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "6b52c82f8784f4e2fe0c2401f667bed9c5802b30",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 4940,
        "start_column": 4,
        "end_line": 4940,
        "end_column": 9
      },
      "debug_info": {
        "goal": "c : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\nX\u2080 : \u211d := sorry\nX : \u211d\nX_ge_X\u2080 : X \u2265 X\u2080\nX_gt_3 : 3 < X\n\u03b5 : \u211d := sorry\n\u03b5_pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\n\u03bd : \u211d \u2192 \u211d\nContDiff\u03bd : ContDiff \u211d (\u2191\u22a4) \u03bd\n\u03bd_nonneg' : \u2200 (x : \u211d), 0 \u2264 \u03bd x\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\n\u03bd_massOne' : \u222b (x : \u211d) in Ici 0, \u03bd x / x = 1\n\u22a2 ContDiff \u211d 1 \u03bd",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/6b52c82f8784f4e2fe0c2401f667bed9c5802b30/PrimeNumberTheoremAnd/MediumPNT.lean#L4940"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-06-26T22:42:57-04:00",
        "inclusion_date": "2025-07-07T03:01:48.571972+00:00"
      },
      "id": "15461c9ce257b8d767e85b647a4d2f037c9868720f12fecabe6a7fbbea0de9f8"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f6e31f7f5d5931abc9523a1f52cda482f7354b60",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7order.lean",
        "start_line": 103,
        "start_column": 2,
        "end_line": 103,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 {U : Set \u2102} {f g : \u2102 \u2192 \u2102}, IsOpen U \u2192 (\u2200 z \u2208 U, f z = g z) \u2192 \u2200 z \u2208 U, deriv f z = deriv g z",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f6e31f7f5d5931abc9523a1f52cda482f7354b60/Mathlib/NumberTheory/h7order.lean#L103"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-05-19T16:40:15+02:00",
        "inclusion_date": "2025-05-20T03:02:23.995399+00:00"
      },
      "id": "e0b947c12ed8acc279489ec302d483e3eac7795a1c6f5f5a59800da1232217db"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
        "start_line": 136,
        "start_column": 2,
        "end_line": 136,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure volume\nA B : Set \u03a9\nh : IndepSet \u03a9 inst\u271d\u00b9 B A\nhB : volume B \u2260 0\n\u22a2 condProb \u03a9 inst\u271d\u00b9 A B = volume A",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Topics/Probability.lean#L136"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "de15c085679d51c062101898669c478f03a6854f300b4bfabb5a897e491e29fc"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/AdditiveNTT/AdditiveNTT.lean",
        "start_line": 2332,
        "start_column": 4,
        "end_line": 2332,
        "end_column": 9
      },
      "debug_info": {
        "goal": "r : \u2115\ninst\u271d\u2076 : NeZero r\nL : Type u\ninst\u271d\u2075 : Field L\ninst\u271d\u2074 : Fintype L\ninst\u271d\u00b3 : DecidableEq L\n\ud835\udd3dq : Type u\ninst\u271d\u00b2 : Field \ud835\udd3dq\ninst\u271d\u00b9 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d : Algebra \ud835\udd3dq L\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 R_rate : \u2115\nh_\u2113_add_R_rate : \u2113 + R_rate < r\ni : Fin r\nh_i : \u2191i < \u2113 + R_rate\nx :\n  \u21a5(@AdditiveNTT.sDomain r inst\u271d\u2076 L inst\u271d\u2075 inst\u271d\u2074 inst\u271d\u00b3 \ud835\udd3dq inst\u271d\u00b2 inst\u271d\u00b9 h_Fq_char_prime h_Fq_card_gt_1 inst\u271d \u03b2\n      h\u03b2_lin_indep \u2113 R_rate h_\u2113_add_R_rate i)\n\u22a2 @AdditiveNTT.finToSDomain r inst\u271d\u2076 L inst\u271d\u2075 inst\u271d\u2074 inst\u271d\u00b3 \ud835\udd3dq inst\u271d\u00b2 inst\u271d\u00b9 h_Fq_char_prime h_Fq_card_gt_1 inst\u271d \u03b2\n      h\u03b2_lin_indep \u2113 R_rate h_\u2113_add_R_rate i h_i\n      (@AdditiveNTT.sDomainToFin r inst\u271d\u2076 L inst\u271d\u2075 inst\u271d\u2074 inst\u271d\u00b3 \ud835\udd3dq inst\u271d\u00b2 inst\u271d\u00b9 h_Fq_char_prime h_Fq_card_gt_1 inst\u271d \u03b2\n        h\u03b2_lin_indep \u2113 R_rate h_\u2113_add_R_rate i h_i x) =\n    x",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/Data/FieldTheory/AdditiveNTT/AdditiveNTT.lean#L2332"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "a89567b09414e17ea5cdf2a31030c67ef169f162eae91e7587088b95b2a9ce7b"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
        "commit": "188e11d9fb964b2bbd4dce99316d5fc0cfe0c07a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
        "start_line": 88,
        "start_column": 91,
        "end_line": 88,
        "end_column": 96
      },
      "debug_info": {
        "goal": "d : \u2115\n\u22a2 IsConnected {(1, 1)}",
        "url": "https://github.com/HEPLean/PhysLean/blob/188e11d9fb964b2bbd4dce99316d5fc0cfe0c07a/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L88"
      },
      "metadata": {
        "blame_email_hash": "f5ab4f28bed3",
        "blame_date": "2025-05-05T23:32:38+10:00",
        "inclusion_date": "2025-05-07T00:12:19.853100+00:00"
      },
      "id": "649a47c8c592041dd67f4ee19107645c8b47c7b1034062e9657945b607cb7d73"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 145,
        "start_column": 24,
        "end_line": 145,
        "end_column": 29
      },
      "debug_info": {
        "goal": "a b c : \u211d\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c\nh\u2081 : 9 * b = 20 * c\nh\u2082 : 7 * a = 4 * b\n\u22a2 63 * a = 80 * c",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L145"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "e351d4da7076a3cd7d5ed0fc3e91c9627c59a4c3a9f3bda034fb721c24865324"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_08.lean",
        "start_line": 76,
        "start_column": 2,
        "end_line": 76,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nh_n : n \u2260 0\n\u22a2 \u00ac2 ^ n \u2223 n.factorial \u2227 (2 ^ (n - 1) \u2223 n.factorial \u2194 \u2203 m, n = 2 ^ m)",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_08.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2023-04-09T12:38:37+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "e8dc7e5413dd0ea6e1f039238aff04e01ed36c06ea9c04d0402f9caa3c6f4d10"
    },
    {
      "repo": {
        "remote": "https://github.com/eric-wieser/lean-matrix-cookbook",
        "branch": "master",
        "commit": "5682ac96f54bd119bd92b053962433c6940b6385",
        "lean_version": "v4.22.0-rc4"
      },
      "location": {
        "path": "MatrixCookbook/1Basic.lean",
        "start_line": 159,
        "start_column": 2,
        "end_line": 159,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_2\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\ninst\u271d\u00b9 : DecidableEq n\ninst\u271d : Field R\nA : Matrix n n R\n\u22a2 let \u03b5 := PowerSeries.X;\n  let A := A.map \u21d1(PowerSeries.C R);\n  PowerSeries.trunc 2 (1 + \u03b5 \u2022 A).det =\n    PowerSeries.trunc 2 (1 + A.det + \u03b5 \u2022 A.trace + (1 / 2) \u2022 \u03b5 ^ 2 * A.trace ^ 2 - (1 / 2) \u2022 \u03b5 ^ 2 * (A ^ 2).trace)",
        "url": "https://github.com/eric-wieser/lean-matrix-cookbook/blob/5682ac96f54bd119bd92b053962433c6940b6385/MatrixCookbook/1Basic.lean#L159"
      },
      "metadata": {
        "blame_email_hash": "897b33679110",
        "blame_date": "2023-10-11T15:16:39+00:00",
        "inclusion_date": "2025-09-17T03:16:16.716963+00:00"
      },
      "id": "c0fa07df2d8961f717eb78a3b3b0292072a91a392e0673b67c74f3bcb08dd5d0"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 7 - 6, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "b4468593cce701f5d63754982acd49cf7f5f1b8b74c3b19873ea73ac6ff2162d"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "bounded-depth",
        "commit": "2efcba7c9d835e9969977f8470ca9640e1f7cbd7",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Propositional/Kripke/AxiomBoundDepth.lean",
        "start_line": 254,
        "start_column": 4,
        "end_line": 254,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case intro.intro.succ\nS : Type u_1\ninst\u271d\u00b2 : Entailment (Formula \u2115) S\n\ud835\udce2 : S\ninst\u271d\u00b9 : Consistent \ud835\udce2\ninst\u271d : Entailment.Int \ud835\udce2\nl : List (canonicalFrame \ud835\udce2).World\nhl\u2082 : l.head? = some (canonicalFrame \ud835\udce2).default\nhl\u2083 : List.Chain' (fun x1 x2 => x1 \u227a x2) l\nn : \u2115\nih : \ud835\udce2 \u22a2! Axioms.BoundDepth' n \u2192 l.length = n + 2 \u2192 \u2203 i j, i \u2260 j \u2227 l.get i = l.get j\nh : \ud835\udce2 \u22a2! Axioms.BoundDepth' (n + 1)\nhl\u2081 : l.length = n + 1 + 2\n\u22a2 \u2203 i j, i \u2260 j \u2227 l.get i = l.get j",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/2efcba7c9d835e9969977f8470ca9640e1f7cbd7/Foundation/Propositional/Kripke/AxiomBoundDepth.lean#L254"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-06T11:02:54+09:00",
        "inclusion_date": "2025-05-08T23:32:25.978477+00:00"
      },
      "id": "78b4eb6f22e818cbed8cc07f70961934dbb6ea9405cac71e812c798ab70f80dd"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "39d3ea7ba366660f6776a025cc67e05a84903bc8",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/ToMathlib/RealInterpolation/Minkowski.lean",
        "start_line": 549,
        "start_column": 10,
        "end_line": 549,
        "end_column": 15
      },
      "debug_info": {
        "goal": "case e_a.e_a.e_a.h\u03b2\n\u03b1 : Type u_1\nE\u2081 : Type u_5\nm : MeasurableSpace \u03b1\n\u03bc : Measure \u03b1\nf : \u03b1 \u2192 E\u2081\np\u2080 q\u2080 q : \u211d\nspf : ScaledPowerFunction\nj : Bool\ninst\u271d\u00b2 : MeasurableSpace E\u2081\ninst\u271d\u00b9 : NormedAddCommGroup E\u2081\ninst\u271d : BorelSpace E\u2081\nhp\u2080 : 0 < p\u2080\nhq\u2080 : 0 < q\u2080\nhp\u2080q\u2080 : p\u2080 \u2264 q\u2080\nhf : AEMeasurable f \u03bc\nhf\u2082 : SigmaFinite (\u03bc.restrict (Function.support f))\nthis\u271d : 0 < spf.d\ntc : ToneCouple := spf_to_tc spf\nhpowers : if (j ^^ tc.mon) = true then q\u2080 < q else q < q\u2080\nis_p\u2080pos : \u00acENNReal.ofReal p\u2080 = 0\nis_p\u2080top : \u00acENNReal.ofReal p\u2080 = \u22a4\nx : \u03b1\nhfx : x \u2208 Function.support f\nthis : 0 < \u2016f x\u2016\u2091\n\u22a2 0 < tc.inv \u2016f x\u2016\u2091",
        "url": "https://github.com/fpvandoorn/carleson/blob/39d3ea7ba366660f6776a025cc67e05a84903bc8/Carleson/ToMathlib/RealInterpolation/Minkowski.lean#L549"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-06-03T16:50:08+02:00",
        "inclusion_date": "2025-06-22T04:26:50.468296+00:00"
      },
      "id": "0b151ec3bfdf355e149b571e614b26a89d01ce925c910592607c5377163db9b5"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-CI-fix",
        "commit": "ff1b6f6928d9860b559edca6707887c0b6b70eff",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FLT/AutomorphicForm/QuaternionAlgebra/Defs.lean",
        "start_line": 78,
        "start_column": 2,
        "end_line": 78,
        "end_column": 7
      },
      "debug_info": {
        "goal": "F : Type u_1\ninst\u271d\u2074 : Field F\ninst\u271d\u00b3 : NumberField F\nD : Type u_2\ninst\u271d\u00b2 : Ring D\ninst\u271d\u00b9 : Algebra F D\ninst\u271d : FiniteDimensional F D\n\u22a2 MonoidHom.range (@TotallyDefiniteQuaternionAlgebra.incl\u2082 F inst\u271d\u2074 inst\u271d\u00b3 D inst\u271d\u00b2 inst\u271d\u00b9) \u2264\n    Subgroup.center (@TotallyDefiniteQuaternionAlgebra.Dfx F inst\u271d\u2074 inst\u271d\u00b3 D inst\u271d\u00b2 inst\u271d\u00b9)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/ff1b6f6928d9860b559edca6707887c0b6b70eff/FLT/AutomorphicForm/QuaternionAlgebra/Defs.lean#L78"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-03-15T18:40:46+00:00",
        "inclusion_date": "2025-09-08T17:50:19.403061+00:00"
      },
      "id": "64df03447021f8d34ca37204478c026beeb874a19370b23bcc0db06501dc5496"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BollobasContainment.lean",
        "start_line": 31,
        "start_column": 2,
        "end_line": 31,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\n\u03a9 : Type u_3\ninst\u271d\u2074 : Fintype \u03b2\nG : \u2115 \u2192 \u03a9 \u2192 SimpleGraph \u03b1\nH : SimpleGraph \u03b2\ninst\u271d\u00b3 : Fintype \u2191H.edgeSet\ninst\u271d\u00b2 : (n : \u2115) \u2192 (\u03c9 : \u03a9) \u2192 DecidableRel (G n \u03c9).Adj\ninst\u271d\u00b9 : MeasurableSpace \u03a9\n\u03bc : Measure \u03a9\ninst\u271d : IsProbabilityMeasure \u03bc\np : \u2115 \u2192 \u211d\u22650\nhp : (fun n => \u2191(p n)) =o[atTop] fun n => \u2191n ^ (-\u2191H.maxEdgeSubdensity\u207b\u00b9)\n\u22a2 Tendsto (fun n => \u03bc {\u03c9 | H \u2291 G n \u03c9}) atTop (\ud835\udcdd 0)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BollobasContainment.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "f91cda7e4cffbd3704db63e56f69d9308223c66e0e6a13fac8e83defeaa77450"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "6b52c82f8784f4e2fe0c2401f667bed9c5802b30",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 4945,
        "start_column": 4,
        "end_line": 4945,
        "end_column": 9
      },
      "debug_info": {
        "goal": "c : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\nX\u2080 : \u211d := sorry\nX : \u211d\nX_ge_X\u2080 : X \u2265 X\u2080\nX_gt_3 : 3 < X\n\u03b5 : \u211d := sorry\n\u03b5_pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\n\u03bd : \u211d \u2192 \u211d\nContDiff\u03bd : ContDiff \u211d (\u2191\u22a4) \u03bd\n\u03bd_nonneg' : \u2200 (x : \u211d), 0 \u2264 \u03bd x\n\u03bd_supp : support \u03bd \u2286 Icc (1 / 2) 2\n\u03bd_massOne' : \u222b (x : \u211d) in Ici 0, \u03bd x / x = 1\nContDiff1\u03bd : ContDiff \u211d 1 \u03bd\n\u03bd_nonneg : \u2200 x > 0, 0 \u2264 \u03bd x\n\u22a2 \u222b (x : \u211d) in Ioi 0, \u03bd x / x = 1",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/6b52c82f8784f4e2fe0c2401f667bed9c5802b30/PrimeNumberTheoremAnd/MediumPNT.lean#L4945"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-06-26T22:42:57-04:00",
        "inclusion_date": "2025-07-07T03:01:48.571972+00:00"
      },
      "id": "6f8532c651a1175506e3f92d7bdfc0bf2b0b544e9587541f64eded80b7ce07f4"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f6e31f7f5d5931abc9523a1f52cda482f7354b60",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7order.lean",
        "start_line": 165,
        "start_column": 78,
        "end_line": 165,
        "end_column": 83
      },
      "debug_info": {
        "goal": "f : \u2102 \u2192 \u2102\nz\u2080 : \u2102\nhf : AnalyticAt \u2102 f z\u2080\nhfdev : AnalyticAt \u2102 (deriv f) z\u2080\nn : \u2115\nhn : n > 0\ng : \u2102 \u2192 \u2102\nhg : AnalyticAt \u2102 g z\u2080\nhgneq0 : g z\u2080 \u2260 0\nUg : Set \u2102\nhU : Ug \u2208 nhds z\u2080\nhUf : \u2200 z \u2208 Ug, f z = (z - z\u2080) ^ n \u2022 g z\nUr : Set \u2102\nhgN : Ur \u2208 nhds z\u2080 \u2227 AnalyticOnNhd \u2102 g Ur\nz : \u2102\nHz : z \u2208 Ug \u2229 Ur\nHderiv : deriv (fun z => (z - z\u2080) ^ n \u2022 g z) z = (z - z\u2080) ^ (n - 1) * (\u2191n * g z + (z - z\u2080) * deriv g z)\n\u22a2 f =\u1da0[nhds z] fun z => (fun z => (z - z\u2080) ^ n \u2022 g z) z",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f6e31f7f5d5931abc9523a1f52cda482f7354b60/Mathlib/NumberTheory/h7order.lean#L165"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-05-19T16:40:15+02:00",
        "inclusion_date": "2025-05-20T03:02:23.995399+00:00"
      },
      "id": "597623ba506d57d10dfe1d64704a31f8b2720654abf11c23c0a975d8263c582e"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Shorter.lean",
        "start_line": 44,
        "start_column": 2,
        "end_line": 44,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\n\u22a2 (a + b) * (a - b) = a ^ 2 - b ^ 2",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Shorter.lean#L44"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "6be119b80fb85680528d6704b31b7c449161083535840fc591cee60758895a7c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/AdditiveNTT/AdditiveNTT.lean",
        "start_line": 2336,
        "start_column": 4,
        "end_line": 2336,
        "end_column": 9
      },
      "debug_info": {
        "goal": "r : \u2115\ninst\u271d\u2076 : NeZero r\nL : Type u\ninst\u271d\u2075 : Field L\ninst\u271d\u2074 : Fintype L\ninst\u271d\u00b3 : DecidableEq L\n\ud835\udd3dq : Type u\ninst\u271d\u00b2 : Field \ud835\udd3dq\ninst\u271d\u00b9 : Fintype \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d : Algebra \ud835\udd3dq L\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 R_rate : \u2115\nh_\u2113_add_R_rate : \u2113 + R_rate < r\ni : Fin r\nh_i : \u2191i < \u2113 + R_rate\nidx : Fin (2 ^ (\u2113 + R_rate - \u2191i))\n\u22a2 @AdditiveNTT.sDomainToFin r inst\u271d\u2076 L inst\u271d\u2075 inst\u271d\u2074 inst\u271d\u00b3 \ud835\udd3dq inst\u271d\u00b2 inst\u271d\u00b9 h_Fq_char_prime h_Fq_card_gt_1 inst\u271d \u03b2\n      h\u03b2_lin_indep \u2113 R_rate h_\u2113_add_R_rate i h_i\n      (@AdditiveNTT.finToSDomain r inst\u271d\u2076 L inst\u271d\u2075 inst\u271d\u2074 inst\u271d\u00b3 \ud835\udd3dq inst\u271d\u00b2 inst\u271d\u00b9 h_Fq_char_prime h_Fq_card_gt_1 inst\u271d \u03b2\n        h\u03b2_lin_indep \u2113 R_rate h_\u2113_add_R_rate i h_i idx) =\n    idx",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/Data/FieldTheory/AdditiveNTT/AdditiveNTT.lean#L2336"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "f8e377d29db057518610ee91dbc5e5e4d880f5f3947baa662ae3b00ab4f35884"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
        "commit": "188e11d9fb964b2bbd4dce99316d5fc0cfe0c07a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
        "start_line": 89,
        "start_column": 95,
        "end_line": 89,
        "end_column": 100
      },
      "debug_info": {
        "goal": "d : \u2115\n\u22a2 {(1, 1)} \u2286 Set.range \u21d1lorentzMap",
        "url": "https://github.com/HEPLean/PhysLean/blob/188e11d9fb964b2bbd4dce99316d5fc0cfe0c07a/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L89"
      },
      "metadata": {
        "blame_email_hash": "f5ab4f28bed3",
        "blame_date": "2025-05-05T23:32:38+10:00",
        "inclusion_date": "2025-05-07T00:12:19.853100+00:00"
      },
      "id": "afcf669d7652eb3f0a4e213a6395fabebd05ae515cb1d085bf34b61c6c1fa9ed"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 148,
        "start_column": 79,
        "end_line": 148,
        "end_column": 84
      },
      "debug_info": {
        "goal": "\u22a2 cos (Real.pi / 7) - cos (2 * Real.pi / 7) + cos (3 * Real.pi / 7) = 1 / 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L148"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "c8ae38c1a814c24217018d85c46272aaa7eab3bc93418acd76f58fa1a3b7e597"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_08.lean",
        "start_line": 97,
        "start_column": 2,
        "end_line": 97,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nx : \u211d\n\u22a2 \u2203 c, book.irrational.f_aux n x = \u2211 i \u2208 Icc n (2 * n), \u2191(c i) * x ^ i",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_08.lean#L97"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2023-04-09T12:38:37+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "f387f979e8fb4345bfc250e9d9789728574779d4c25afa152fc005c4ba7a89f0"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 8 - 6, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "40b44930609bb1217e1867d4cc6b022ccae06691e77b5eed12bff8771e6babda"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "bounded-depth",
        "commit": "2efcba7c9d835e9969977f8470ca9640e1f7cbd7",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Propositional/Kripke/Hilbert/BD.lean",
        "start_line": 41,
        "start_column": 2,
        "end_line": 41,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115+\n\u22a2 (canonicalFrame (Hilbert.BD n)).IsDepthLt \u2191n",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/2efcba7c9d835e9969977f8470ca9640e1f7cbd7/Foundation/Propositional/Kripke/Hilbert/BD.lean#L41"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-06T09:26:16+09:00",
        "inclusion_date": "2025-05-08T23:32:25.978477+00:00"
      },
      "id": "11c995f3cfb059b8e234f4a2414cb0ae450f65b8aa4f1b1f6d4c986c8b155454"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "39d3ea7ba366660f6776a025cc67e05a84903bc8",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/ToMathlib/RealInterpolation/Minkowski.lean",
        "start_line": 765,
        "start_column": 2,
        "end_line": 765,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case neg\n\u03b1 : Type u_1\n\u03b1' : Type u_2\nm : MeasurableSpace \u03b1\nm' : MeasurableSpace \u03b1'\n\u03b5\u2081 : Type u_9\n\u03b5\u2082 : Type u_10\ninst\u271d\u00b3 : TopologicalSpace \u03b5\u2081\ninst\u271d\u00b2 : TopologicalSpace \u03b5\u2082\n\u03bc : Measure \u03b1\n\u03bd : Measure \u03b1'\nt : ENNReal\ninst\u271d\u00b9 : ContinuousENorm \u03b5\u2081\ninst\u271d : ContinuousENorm \u03b5\u2082\nT : (\u03b1 \u2192 \u03b5\u2081) \u2192 \u03b1' \u2192 \u03b5\u2082\nC\u2080 : NNReal\np q : ENNReal\nf : \u03b1 \u2192 \u03b5\u2081\nhq : 0 < q\nhq' : q < \u22a4\nhf : MemLp f p \u03bc\nh\u2080T : HasWeakType T p q \u03bc \u03bd \u2191C\u2080\nht : 0 < t\nht' : \u00act = \u22a4\nq_pos : 0 < q.toReal\ntq_pos : 0 < t ^ q.toReal\ntq_ne_top : t ^ q.toReal \u2260 \u22a4\nwt_est : \u2200 (i : NNReal), \u2191i * distribution (T f) (\u2191i) \u03bd ^ q.toReal\u207b\u00b9 \u2264 \u2191C\u2080 * eLpNorm f p \u03bc\nwt_est_t : \u2191t.toNNReal * distribution (T f) (\u2191t.toNNReal) \u03bd ^ q.toReal\u207b\u00b9 \u2264 \u2191C\u2080 * eLpNorm f p \u03bc\n\u22a2 distribution (T f) t \u03bd \u2264 \u2191C\u2080 ^ q.toReal * eLpNorm f p \u03bc ^ q.toReal * t ^ (-q.toReal)",
        "url": "https://github.com/fpvandoorn/carleson/blob/39d3ea7ba366660f6776a025cc67e05a84903bc8/Carleson/ToMathlib/RealInterpolation/Minkowski.lean#L765"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-06-03T16:50:08+02:00",
        "inclusion_date": "2025-06-22T04:26:50.468296+00:00"
      },
      "id": "3370a318f502fb701510e76a40581798657aaa3c01088d7a22b6f512ab57d1ae"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/QuaternionAlgebra/NumberField.lean",
        "start_line": 172,
        "start_column": 2,
        "end_line": 172,
        "end_column": 7
      },
      "debug_info": {
        "goal": "F : Type u_1\ninst\u271d\u00b9 : Field F\ninst\u271d : NumberField F\nv : HeightOneSpectrum (\ud835\udcde F)\n\u22a2 IsOpen (localFullLevel v).carrier",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/QuaternionAlgebra/NumberField.lean#L172"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-02-27T16:12:15+00:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "918aec9a99e7efdf6acae4f19f1ff000d0f0099f69f15b8ae1b316e1debcb987"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BollobasContainment.lean",
        "start_line": 37,
        "start_column": 2,
        "end_line": 37,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\n\u03a9 : Type u_3\ninst\u271d\u2074 : Fintype \u03b2\nG : \u2115 \u2192 \u03a9 \u2192 SimpleGraph \u03b1\nH : SimpleGraph \u03b2\ninst\u271d\u00b3 : Fintype \u2191H.edgeSet\ninst\u271d\u00b2 : (n : \u2115) \u2192 (\u03c9 : \u03a9) \u2192 DecidableRel (G n \u03c9).Adj\ninst\u271d\u00b9 : MeasurableSpace \u03a9\n\u03bc : Measure \u03a9\ninst\u271d : IsProbabilityMeasure \u03bc\np : \u2115 \u2192 \u211d\u22650\nhp : (fun n => \u2191n ^ (-\u2191H.maxEdgeSubdensity\u207b\u00b9)) =o[atTop] fun n => \u2191(p n)\n\u22a2 Tendsto (fun n => \u03bc {\u03c9 | H \u2291 G n \u03c9}) atTop (\ud835\udcdd 1)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BollobasContainment.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "38c11c492591e4f1eaa791522219fb7aa5c05d2305da24cc98dd50cebd619d6f"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "51c6063c647276f7c01e848976e6721033829c90",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 6389,
        "start_column": 24,
        "end_line": 6389,
        "end_column": 29
      },
      "debug_info": {
        "goal": "c : \u211d := \u22ef\ncpos : 0 < c\nC : \u211d := \u22ef\nX\u2080 : \u211d := \u22ef\nX : \u211d\nX_ge_X\u2080 : X \u2265 X\u2080\nX_gt_3 : 3 < X\n\u03b5 : \u211d := \u22ef\n\u22a2 0 < \u03b5",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/51c6063c647276f7c01e848976e6721033829c90/PrimeNumberTheoremAnd/MediumPNT.lean#L6389"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-06-26T22:42:57-04:00",
        "inclusion_date": "2025-07-13T23:20:18.124737+00:00"
      },
      "id": "b641abaaf83074143f65af84d402520b6cfd01c768e32fe98f41368bc982bfa8"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f6e31f7f5d5931abc9523a1f52cda482f7354b60",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7order.lean",
        "start_line": 177,
        "start_column": 6,
        "end_line": 177,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case zero\nz\u2080 : \u2102\nn : \u2115\nf : \u2102 \u2192 \u2102\nhf : AnalyticAt \u2102 f z\u2080\nhfdev : AnalyticAt \u2102 (deriv f) z\u2080\nhof : \u2102 \u2192 \u21910 \u2264 hf.order\n\u22a2 hfdev.order = \u2191(n - 0)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f6e31f7f5d5931abc9523a1f52cda482f7354b60/Mathlib/NumberTheory/h7order.lean#L177"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-05-19T16:40:15+02:00",
        "inclusion_date": "2025-05-20T03:02:23.995399+00:00"
      },
      "id": "1fa6c0e4a9ce170b0f18e6d9a5d27db3096dcc02d19bfab695bb31229acf019e"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Shorter.lean",
        "start_line": 63,
        "start_column": 2,
        "end_line": 63,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\nf : \u211d \u2192 \u211d\n\u22a2 f ((a + b) ^ 2 - 2 * a * b) = f (a ^ 2 + b ^ 2)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Shorter.lean#L63"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "35126200847430611dc6f71ea030dad7f9202f35510ae13df3e4377529cb3b96"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/FRIBinius/CoreInteractionPhase.lean",
        "start_line": 222,
        "start_column": 62,
        "end_line": 222,
        "end_column": 67
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u00b9\u2075 : Field L\ninst\u271d\u00b9\u2074 : Fintype L\ninst\u271d\u00b9\u00b3 : DecidableEq L\ninst\u271d\u00b9\u00b2 : Inhabited L\n\ud835\udd3dq : Type\ninst\u271d\u00b9\u00b9 : Field \ud835\udd3dq\ninst\u271d\u00b9\u2070 : Fintype \ud835\udd3dq\ninst\u271d\u2079 : DecidableEq \ud835\udd3dq\ninst\u271d\u2078 : Inhabited \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u2077 : Algebra \ud835\udd3dq L\ninst\u271d\u2076 : FiniteDimensional \ud835\udd3dq L\nr : \u2115\ninst\u271d\u2075 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u2074 : NeZero \u03d1\ninst\u271d\u00b3 : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\n\u2113' n \u03ba : \u2115\ninst\u271d\u00b2 : NeZero \u2113'\ninst\u271d\u00b9 : NeZero n\ninst\u271d : NeZero \u03ba\nh_l : \u2113 = \u2113' + \u03ba\n\u03c3 : Type\ninit : ProbComp \u03c3\nimpl : QueryImpl []\u2092 (StateT \u03c3 ProbComp)\nouterStmtIn : SumcheckStmt \ud835\udd3dq L \u2113 \u2113' \u03ba \u00d7 ((i : Empty) \u2192 OStmt L \ud835\udce1 \u2113' i)\nouterWitIn : Witness \ud835\udd3dq L \u2113 \u2113'\ninOuterRelIn :\n  (outerStmtIn, outerWitIn) \u2208 Binius.FRIBinius.CoreInteractionPhase.inputRelation L inst\u271d\u00b9\u2075 \ud835\udd3dq inst\u271d\u00b9\u00b9 inst\u271d\u2077 \u2113 \ud835\udce1 \u2113' \u03ba\n\u22a2 ((OracleContext.Lens.toContext\n              (Binius.FRIBinius.CoreInteractionPhase.coreInteractionLens L inst\u271d\u00b9\u2075 inst\u271d\u00b9\u2074 inst\u271d\u00b9\u00b3 inst\u271d\u00b9\u00b2 \ud835\udd3dq inst\u271d\u00b9\u00b9\n                inst\u271d\u00b9\u2070 h_Fq_char_prime h_Fq_card_gt_1 inst\u271d\u2077 r inst\u271d\u2075 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 \u03d1 h_\u2113_add_R_rate \u2113' \u03ba inst\u271d\u00b2\n                inst\u271d h_l)).stmt.proj\n        outerStmtIn,\n      (OracleContext.Lens.toContext\n              (Binius.FRIBinius.CoreInteractionPhase.coreInteractionLens L inst\u271d\u00b9\u2075 inst\u271d\u00b9\u2074 inst\u271d\u00b9\u00b3 inst\u271d\u00b9\u00b2 \ud835\udd3dq inst\u271d\u00b9\u00b9\n                inst\u271d\u00b9\u2070 h_Fq_char_prime h_Fq_card_gt_1 inst\u271d\u2077 r inst\u271d\u2075 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 \u03d1 h_\u2113_add_R_rate \u2113' \u03ba inst\u271d\u00b2\n                inst\u271d h_l)).wit.proj\n        (outerStmtIn, outerWitIn)) \u2208\n    rel L \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113' \ud835\udce1 \u03d1\n      (Binius.FRIBinius.CoreInteractionPhase.h_\u2113'_add_R_rate r inst\u271d\u2075 \ud835\udce1 \u2113' \u03ba inst\u271d\u00b2 inst\u271d \u2113 h_\u2113_add_R_rate h_l) 0",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/FRIBinius/CoreInteractionPhase.lean#L222"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "c6331339df2f2dc34a721e40459b2b2bbb209873189ec6a4b0290abf86c3544f"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
        "commit": "b4a420deef68762a68898a4245f54fb1992b6f4c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
        "start_line": 75,
        "start_column": 17,
        "end_line": 75,
        "end_column": 22
      },
      "debug_info": {
        "goal": "d : \u2115\n\u22a2 (detRep 1, orthchroRep 1) = 1",
        "url": "https://github.com/HEPLean/PhysLean/blob/b4a420deef68762a68898a4245f54fb1992b6f4c/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L75"
      },
      "metadata": {
        "blame_email_hash": "f5ab4f28bed3",
        "blame_date": "2025-05-05T23:32:38+10:00",
        "inclusion_date": "2025-05-13T23:18:43.440253+00:00"
      },
      "id": "650ac535039891699611762b1607ed5e85a37f70539ce611cc534d7ae0dc8af2"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 161,
        "start_column": 22,
        "end_line": 161,
        "end_column": 27
      },
      "debug_info": {
        "goal": "a b c : \u2115\nh\u2080 : 1 \u2264 a \u2227 a \u2264 9\nh\u2081 : 1 \u2264 b \u2227 b \u2264 9\nh\u2082 : 1 \u2264 c \u2227 c \u2264 9\nh\u2083 : a \u2260 b\nh\u2084 : a \u2260 c\nh\u2085 : b \u2260 c\nh\u2086 : a + b = c\nh\u2087 : 10 * a + a - b = 2 * c\nh\u2088 : c * b = 10 * a + a + a\n\u22a2 a + b + c = 8",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L161"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "e01a5c4423b10e824f138685c76f31c093fb26a86fc2106bba2ba889113d2c2a"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_05.lean",
        "start_line": 52,
        "start_column": 43,
        "end_line": 52,
        "end_column": 48
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\na : \u2124\nunits_finset : Finset (ZMod p) := univ.erase 0\nimage_finset : Finset (ZMod p) := image (fun x => \u2191a * x) units_finset\n\u22a2 units_finset = image_finset",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_05.lean#L52"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2023-04-09T11:53:00+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "91a5d27b7cd696b2aa0c78b4e5789b37d66902dc3f0cb7e3bef4b1948442ec69"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 1 - 7, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "336042af7186201ff93eb50061a1e0611d5193e6f4262b4461ecd53019934c03"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "Kriesel-Putnam",
        "commit": "490341480f0e44083c37c61c3bcaec14e989e23a",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Propositional/ConsistentTableau.lean",
        "start_line": 397,
        "start_column": 6,
        "end_line": 397,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case mp.a\n\u03b1 : Type u_1\nS : Type u_2\ninst\u271d\u00b3 : Entailment (Formula \u03b1) S\n\ud835\udce2 : S\n\u03c6 : Formula \u03b1\ninst\u271d\u00b2 : Entailment.Int \ud835\udce2\ninst\u271d\u00b9 : DecidableEq \u03b1\ninst\u271d : Encodable \u03b1\n\u0393 : List (Formula \u03b1)\nh : \u0393 \u22a2[\ud835\udce2]! \u03c6\nt : SaturatedConsistentTableau \ud835\udce2\nht : \u2200 \u03c6 \u2208 \u0393, \u03c6 \u2208 (\u2191t).1\n\u22a2 \u2191\u0393.toFinset *\u22a2[\ud835\udce2]! \u03c6",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/490341480f0e44083c37c61c3bcaec14e989e23a/Foundation/Propositional/ConsistentTableau.lean#L397"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-02T14:26:29+09:00",
        "inclusion_date": "2025-05-02T23:27:09.700517+00:00"
      },
      "id": "9c092025afa3606c2ecc64a7b8db4c1602feabaf2d6b57315e35e679963853fb"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "e4c6e71e5795569df9e9bdbfe4b136897784b355",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/ToMathlib/RealInterpolation/InterpolatedExponents.lean",
        "start_line": 26,
        "start_column": 82,
        "end_line": 26,
        "end_column": 87
      },
      "debug_info": {
        "goal": "t : ENNReal\nht : t \u2264 1\n\u22a2 1 - t.toReal = (1 - t).toReal",
        "url": "https://github.com/fpvandoorn/carleson/blob/e4c6e71e5795569df9e9bdbfe4b136897784b355/Carleson/ToMathlib/RealInterpolation/InterpolatedExponents.lean#L26"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-06-03T16:50:08+02:00",
        "inclusion_date": "2025-06-24T03:23:45.994996+00:00"
      },
      "id": "3460321281c6469450b44225c460d42e6aeeca3c418e6f312cdea701f51c2b2f"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/QuaternionAlgebra/NumberField.lean",
        "start_line": 176,
        "start_column": 2,
        "end_line": 176,
        "end_column": 7
      },
      "debug_info": {
        "goal": "F : Type u_1\ninst\u271d\u00b9 : Field F\ninst\u271d : NumberField F\nv : HeightOneSpectrum (\ud835\udcde F)\n\u22a2 IsCompact (localFullLevel v).carrier",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/QuaternionAlgebra/NumberField.lean#L176"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-02-27T16:12:15+00:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "8e2146f4a30a231a6ec61953a7bcc51ec68dd4e083a7dd704cce2ca9124ba2d2"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/PlainCombi/LittlewoodOfford.lean",
        "start_line": 33,
        "start_column": 2,
        "end_line": 33,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case insert.intro.intro.intro.intro.intro\n\u03b9 : Type u_1\nE : Type u_2\ninst\u271d\u00b2 : NormedAddCommGroup E\ninst\u271d\u00b9 : NormedSpace \u211d E\ns\u271d : Finset \u03b9\nf : \u03b9 \u2192 E\nr : \u211d\ninst\u271d : DecidableEq \u03b9\nhr : 0 < r\ni : \u03b9\ns : Finset \u03b9\nhi : i \u2209 s\nhf : \u2200 i_1 \u2208 insert i s, r \u2264 \u2016f i_1\u2016\nP : Finpartition s.powerset\nhP : #P.parts = (#s).choose (#s / 2)\nhs : \u2200 \ud835\udc9c \u2208 P.parts, \u2200 t \u2208 \ud835\udc9c, t \u2286 s\nhPr : \u2200 \ud835\udc9c \u2208 P.parts, (\u2191\ud835\udc9c).Pairwise fun u v => r \u2264 dist (\u2211 i \u2208 u, f i) (\u2211 i \u2208 v, f i)\ng : E \u2192L[\u211d] \u211d\nhg : \u2016g\u2016 = 1\nhgf : g (f i) = \u2191\u2016f i\u2016\nt : Finset (Finset \u03b9) \u2192 Finset \u03b9\nht : \u2200 \ud835\udc9c \u2208 P.parts, t \ud835\udc9c \u2208 \ud835\udc9c \u2227 \u2200 x' \u2208 \ud835\udc9c, g (\u2211 i \u2208 x', f i) \u2264 g (\u2211 i \u2208 t \ud835\udc9c, f i)\n\u22a2 \u2203 P,\n    #P.parts = (#(insert i s)).choose (#(insert i s) / 2) \u2227\n      (\u2200 \ud835\udc9c \u2208 P.parts, \u2200 t \u2208 \ud835\udc9c, t \u2286 insert i s) \u2227\n        \u2200 \ud835\udc9c \u2208 P.parts, (\u2191\ud835\udc9c).Pairwise fun u v => r \u2264 dist (\u2211 i \u2208 u, f i) (\u2211 i \u2208 v, f i)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/PlainCombi/LittlewoodOfford.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "25b2db5be9910c4c534877f6d268145ded7f52147caef0fa9dbe2b1d44b27387"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "51c6063c647276f7c01e848976e6721033829c90",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 6390,
        "start_column": 27,
        "end_line": 6390,
        "end_column": 32
      },
      "debug_info": {
        "goal": "c : \u211d := \u22ef\ncpos : 0 < c\nC : \u211d := \u22ef\nX\u2080 : \u211d := \u22ef\nX : \u211d\nX_ge_X\u2080 : X \u2265 X\u2080\nX_gt_3 : 3 < X\n\u03b5 : \u211d := \u22ef\n\u03b5_pos : 0 < \u03b5\n\u22a2 \u03b5 < 1",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/51c6063c647276f7c01e848976e6721033829c90/PrimeNumberTheoremAnd/MediumPNT.lean#L6390"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-06-26T22:42:57-04:00",
        "inclusion_date": "2025-07-13T23:20:18.124737+00:00"
      },
      "id": "e6ecc9283571f1900152ae70608d8e29c3f71f9a4fc5eaaaaa7a202e20fb9450"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f6e31f7f5d5931abc9523a1f52cda482f7354b60",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7order.lean",
        "start_line": 178,
        "start_column": 6,
        "end_line": 178,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case succ\nz\u2080 : \u2102\nn : \u2115\nf : \u2102 \u2192 \u2102\nhf : AnalyticAt \u2102 f z\u2080\nhfdev : AnalyticAt \u2102 (deriv f) z\u2080\nk : \u2115\nhk : (\u2102 \u2192 \u2191k \u2264 hf.order) \u2192 hfdev.order = \u2191(n - k)\nhof : \u2102 \u2192 \u2191(k + 1) \u2264 hf.order\n\u22a2 hfdev.order = \u2191(n - (k + 1))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f6e31f7f5d5931abc9523a1f52cda482f7354b60/Mathlib/NumberTheory/h7order.lean#L178"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-05-19T16:40:15+02:00",
        "inclusion_date": "2025-05-20T03:02:23.995399+00:00"
      },
      "id": "eaa24477ee1cd8f07753d503eaf9bdd87f4b293011f52204835328100ee38842"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Shorter.lean",
        "start_line": 130,
        "start_column": 2,
        "end_line": 130,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b c : \u211d\nh : a = -b\nh' : b + c = 0\n\u22a2 b * (a - c) = 0",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Shorter.lean#L130"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "5e8c467d2f91e7d9508c2318f53eede1814d9106fbc434937a8689bab79eb06f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/FRIBinius/CoreInteractionPhase.lean",
        "start_line": 224,
        "start_column": 19,
        "end_line": 224,
        "end_column": 24
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u00b9\u2075 : Field L\ninst\u271d\u00b9\u2074 : Fintype L\ninst\u271d\u00b9\u00b3 : DecidableEq L\ninst\u271d\u00b9\u00b2 : Inhabited L\n\ud835\udd3dq : Type\ninst\u271d\u00b9\u00b9 : Field \ud835\udd3dq\ninst\u271d\u00b9\u2070 : Fintype \ud835\udd3dq\ninst\u271d\u2079 : DecidableEq \ud835\udd3dq\ninst\u271d\u2078 : Inhabited \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u2077 : Algebra \ud835\udd3dq L\ninst\u271d\u2076 : FiniteDimensional \ud835\udd3dq L\nr : \u2115\ninst\u271d\u2075 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u2074 : NeZero \u03d1\ninst\u271d\u00b3 : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\n\u2113' n \u03ba : \u2115\ninst\u271d\u00b2 : NeZero \u2113'\ninst\u271d\u00b9 : NeZero n\ninst\u271d : NeZero \u03ba\nh_l : \u2113 = \u2113' + \u03ba\n\u03c3 : Type\ninit : ProbComp \u03c3\nimpl : QueryImpl []\u2092 (StateT \u03c3 ProbComp)\nouterStmtIn : SumcheckStmt \ud835\udd3dq L \u2113 \u2113' \u03ba \u00d7 ((i : Empty) \u2192 OStmt L \ud835\udce1 \u2113' i)\nouterWitIn : Witness \ud835\udd3dq L \u2113 \u2113'\ninnerStmtOut :\n  Stmt L \u2113' (Fin.last \u2113') \u00d7\n    ((i : Fin (toOutCodewordsCount \u2113' \u03d1 (Fin.last \u2113'))) \u2192\n      BinaryBasefold.OStmt L \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113' \ud835\udce1 \u03d1\n        (Binius.FRIBinius.CoreInteractionPhase.h_\u2113'_add_R_rate r inst\u271d\u2075 \ud835\udce1 \u2113' \u03ba inst\u271d\u00b2 inst\u271d \u2113 h_\u2113_add_R_rate h_l)\n        (Fin.last \u2113') i)\ninnerWitOut : Wit L \u2113' (Fin.last \u2113')\ncompat :\n  @Binius.FRIBinius.CoreInteractionPhase.instIsComplete.match_2 L inst\u271d\u00b9\u2075 \ud835\udd3dq inst\u271d\u00b9\u00b9 inst\u271d\u2077 \u2113 \ud835\udce1 \u2113' \u03ba (fun x => Prop)\n    (outerStmtIn, outerWitIn) fun outerStmt outerOstmt outerWit =>\n    @Binius.FRIBinius.CoreInteractionPhase.instIsComplete.match_1 L inst\u271d\u00b9\u2075 inst\u271d\u00b9\u2074 inst\u271d\u00b9\u00b3 \ud835\udd3dq inst\u271d\u00b9\u00b9 inst\u271d\u00b9\u2070\n      h_Fq_char_prime h_Fq_card_gt_1 inst\u271d\u2077 r inst\u271d\u2075 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 \u03d1 h_\u2113_add_R_rate \u2113' \u03ba inst\u271d\u00b2 inst\u271d h_l\n      (fun x => Prop) (innerStmtOut, innerWitOut) fun innerStmt innerOstmt innerWit => sorry\ninOuterRelIn :\n  (outerStmtIn, outerWitIn) \u2208 Binius.FRIBinius.CoreInteractionPhase.inputRelation L inst\u271d\u00b9\u2075 \ud835\udd3dq inst\u271d\u00b9\u00b9 inst\u271d\u2077 \u2113 \ud835\udce1 \u2113' \u03ba\ninInnerRelOut :\n  (innerStmtOut, innerWitOut) \u2208\n    rel L \ud835\udd3dq h_Fq_char_prime h_Fq_card_gt_1 \u03b2 h\u03b2_lin_indep \u2113' \ud835\udce1 \u03d1\n      (Binius.FRIBinius.CoreInteractionPhase.h_\u2113'_add_R_rate r inst\u271d\u2075 \ud835\udce1 \u2113' \u03ba inst\u271d\u00b2 inst\u271d \u2113 h_\u2113_add_R_rate h_l)\n      (Fin.last \u2113')\n\u22a2 ((OracleContext.Lens.toContext\n              (Binius.FRIBinius.CoreInteractionPhase.coreInteractionLens L inst\u271d\u00b9\u2075 inst\u271d\u00b9\u2074 inst\u271d\u00b9\u00b3 inst\u271d\u00b9\u00b2 \ud835\udd3dq inst\u271d\u00b9\u00b9\n                inst\u271d\u00b9\u2070 h_Fq_char_prime h_Fq_card_gt_1 inst\u271d\u2077 r inst\u271d\u2075 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 \u03d1 h_\u2113_add_R_rate \u2113' \u03ba inst\u271d\u00b2\n                inst\u271d h_l)).stmt.lift\n        outerStmtIn innerStmtOut,\n      (OracleContext.Lens.toContext\n              (Binius.FRIBinius.CoreInteractionPhase.coreInteractionLens L inst\u271d\u00b9\u2075 inst\u271d\u00b9\u2074 inst\u271d\u00b9\u00b3 inst\u271d\u00b9\u00b2 \ud835\udd3dq inst\u271d\u00b9\u00b9\n                inst\u271d\u00b9\u2070 h_Fq_char_prime h_Fq_card_gt_1 inst\u271d\u2077 r inst\u271d\u2075 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 \u03d1 h_\u2113_add_R_rate \u2113' \u03ba inst\u271d\u00b2\n                inst\u271d h_l)).wit.lift\n        (outerStmtIn, outerWitIn) (innerStmtOut, innerWitOut)) \u2208\n    Binius.FRIBinius.CoreInteractionPhase.outputRelation L inst\u271d\u00b9\u2075 \ud835\udd3dq inst\u271d\u00b9\u00b9 inst\u271d\u2077 \u2113 \ud835\udce1 \u2113' \u03ba",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/FRIBinius/CoreInteractionPhase.lean#L224"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "8e5e70dad52876ec9c34d0f125dab4f3c9fd3911bceb80cad993f7a18cdbfbf2"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
        "commit": "b4a420deef68762a68898a4245f54fb1992b6f4c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
        "start_line": 76,
        "start_column": 17,
        "end_line": 76,
        "end_column": 22
      },
      "debug_info": {
        "goal": "d : \u2115\n\u22a2 \u2200 (x y : \u2191(LorentzGroup d)),\n    (detRep (x * y), orthchroRep (x * y)) = (detRep x, orthchroRep x) * (detRep y, orthchroRep y)",
        "url": "https://github.com/HEPLean/PhysLean/blob/b4a420deef68762a68898a4245f54fb1992b6f4c/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "f5ab4f28bed3",
        "blame_date": "2025-05-05T23:32:38+10:00",
        "inclusion_date": "2025-05-13T23:18:43.440253+00:00"
      },
      "id": "022053c370c0e74a030bf4a71f656252c855fee8d8d97949bb939c36be855ca5"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 169,
        "start_column": 28,
        "end_line": 169,
        "end_column": 33
      },
      "debug_info": {
        "goal": "a b c d : \u211a\nh\u2080 : 3 * a = b + c + d\nh\u2081 : 4 * b = a + c + d\nh\u2082 : 2 * c = a + b + d\nh\u2083 : 8 * a + 10 * b + 6 * c = 24\n\u22a2 \u2191d.den + d.num = 28",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L169"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "21a3bba292fb49aa21e678283d8593af3e0c8671443930b145dbc30fc783790a"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_05.lean",
        "start_line": 53,
        "start_column": 2,
        "end_line": 53,
        "end_column": 7
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\na : \u2124\nunits_finset : Finset (ZMod p) := univ.erase 0\nimage_finset : Finset (ZMod p) := image (fun x => \u2191a * x) units_finset\nthis : units_finset = image_finset\n\u22a2 \u2191a \u2260 0 \u2192 \u2191a ^ (p - 1) = -1",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_05.lean#L53"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2023-04-09T11:53:00+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "8816868e93fa6948bad595855107abb5eda9a7ca6e3184342286371c76350b4f"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 2 - 7, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "813be212b88bae5d76a30f89dfb76bd84955f9c58f8563c93d0e7734a1b24996"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "Kriesel-Putnam",
        "commit": "490341480f0e44083c37c61c3bcaec14e989e23a",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Propositional/ConsistentTableau.lean",
        "start_line": 402,
        "start_column": 4,
        "end_line": 402,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case mpr\n\u03b1 : Type u_1\nS : Type u_2\ninst\u271d\u00b3 : Entailment (Formula \u03b1) S\n\ud835\udce2 : S\n\u03c6 : Formula \u03b1\ninst\u271d\u00b2 : Entailment.Int \ud835\udce2\ninst\u271d\u00b9 : DecidableEq \u03b1\ninst\u271d : Encodable \u03b1\n\u0393 : List (Formula \u03b1)\nh : \u2200 (t : SaturatedConsistentTableau \ud835\udce2), (\u2200 \u03c6 \u2208 \u0393, \u03c6 \u2208 (\u2191t).1) \u2192 \u03c6 \u2208 (\u2191t).1\n\u22a2 \u0393 \u22a2[\ud835\udce2]! \u03c6",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/490341480f0e44083c37c61c3bcaec14e989e23a/Foundation/Propositional/ConsistentTableau.lean#L402"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-02T14:26:29+09:00",
        "inclusion_date": "2025-05-02T23:27:09.700517+00:00"
      },
      "id": "44ad3ce1ee23ed23487172dd17814fa2c6b3e343a5c0073d57441c2bc097279a"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "e4c6e71e5795569df9e9bdbfe4b136897784b355",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/ToMathlib/RealInterpolation/InterpolatedExponents.lean",
        "start_line": 31,
        "start_column": 61,
        "end_line": 31,
        "end_column": 66
      },
      "debug_info": {
        "goal": "t : ENNReal\nht : t \u2208 Ioo 0 1\n\u22a2 1 - (1 - t) = t",
        "url": "https://github.com/fpvandoorn/carleson/blob/e4c6e71e5795569df9e9bdbfe4b136897784b355/Carleson/ToMathlib/RealInterpolation/InterpolatedExponents.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-06-03T16:50:08+02:00",
        "inclusion_date": "2025-06-24T03:23:45.994996+00:00"
      },
      "id": "163bdaca268ca51ef4dd821d505bd65e0d52a287f88f3017c6ba30453420d499"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/QuaternionAlgebra/NumberField.lean",
        "start_line": 261,
        "start_column": 2,
        "end_line": 261,
        "end_column": 7
      },
      "debug_info": {
        "goal": "F : Type u_1\ninst\u271d\u00b9 : Field F\ninst\u271d : NumberField F\nv : HeightOneSpectrum (\ud835\udcde F)\n\u22a2 IsOpen (localTameLevel v).carrier",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/QuaternionAlgebra/NumberField.lean#L261"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-02-27T16:12:15+00:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "99a782dc181aa18fb17525521ae429273904e3c9e4fb090c48c5041cc34f6c36"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "99a77d19845fb8083456331fd1256bf35a48f60c",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 101,
        "start_column": 2,
        "end_line": 101,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d : Fintype \u03b1\ns : Multiset \u2115\nhs : s.card = card \u03b1\nh\u2080 : 0 \u2209 s\n\u22a2 s.sum = 2 * card \u03b1 - 2 \u2194 \u2203 G x, @GraphTheory.ES1.degreeSequence \u03b1 inst\u271d G x = s",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/99a77d19845fb8083456331fd1256bf35a48f60c/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L101"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-09-08T22:03:06.847248+00:00"
      },
      "id": "99a8bea99d838c6d3eb0817fa5d42e3ece2472b6408d1756d3ec3e1614067e9d"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "542a73dde1103e9681a905980679679a767cce8f",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 2909,
        "start_column": 39,
        "end_line": 2909,
        "end_column": 44
      },
      "debug_info": {
        "goal": "C_final : \u211d\n\u22a2 C_final > 0",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/542a73dde1103e9681a905980679679a767cce8f/PrimeNumberTheoremAnd/MediumPNT.lean#L2909"
      },
      "metadata": {
        "blame_email_hash": "a10ea483da1d",
        "blame_date": "2025-06-26T20:17:14-05:00",
        "inclusion_date": "2025-07-03T03:04:39.160667+00:00"
      },
      "id": "cc496b9b2852437de88fb862405b1b9132394e15d336da9a17600937622e9e88"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "terminalCat",
        "commit": "a2f04a3f90bf6a62c9b984897f5eb40a46b5f735",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/AlgebraicTopology/SimplicialSet/HoFunctorPreservesBinaryProducts.lean",
        "start_line": 109,
        "start_column": 2,
        "end_line": 109,
        "end_column": 7
      },
      "debug_info": {
        "goal": "C D : Type v\ninst\u271d\u00b9 : Category.{v, v} C\ninst\u271d : Category.{v, v} D\n\u22a2 IsIso (prodComparison (nerveFunctor.comp (hoFunctor.comp nerveFunctor)) (Cat.of C) (Cat.of D))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/a2f04a3f90bf6a62c9b984897f5eb40a46b5f735/Mathlib/AlgebraicTopology/SimplicialSet/HoFunctorPreservesBinaryProducts.lean#L109"
      },
      "metadata": {
        "blame_email_hash": "eaaeec08515d",
        "blame_date": "2025-05-18T23:14:02-04:00",
        "inclusion_date": "2025-06-05T03:12:28.661777+00:00"
      },
      "id": "966dbdce90b4e3a5c8e84d5c693f3fe6b1b93e01b5a67e1ea7b614166a41b2ae"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Shorter.lean",
        "start_line": 143,
        "start_column": 2,
        "end_line": 143,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\nh : b \u2264 a\n\u22a2 a + b \u2264 2 * a",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Shorter.lean#L143"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "20c6f8f535d14569d886d3945b27e4523830ecd0e6ed601bbdece0a0d434dd3e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/FRIBinius/CoreInteractionPhase.lean",
        "start_line": 231,
        "start_column": 2,
        "end_line": 231,
        "end_column": 7
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u00b9\u2074 : Field L\ninst\u271d\u00b9\u00b3 : Fintype L\ninst\u271d\u00b9\u00b2 : DecidableEq L\ninst\u271d\u00b9\u00b9 : Inhabited L\n\ud835\udd3dq : Type\ninst\u271d\u00b9\u2070 : Field \ud835\udd3dq\ninst\u271d\u2079 : Fintype \ud835\udd3dq\ninst\u271d\u2078 : DecidableEq \ud835\udd3dq\ninst\u271d\u2077 : Inhabited \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u2076 : Algebra \ud835\udd3dq L\ninst\u271d\u2075 : FiniteDimensional \ud835\udd3dq L\nr : \u2115\ninst\u271d\u2074 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 : \u2115\ninst\u271d\u00b3 : NeZero \u03d1\ninst\u271d\u00b2 : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\n\u2113' \u03ba : \u2115\ninst\u271d\u00b9 : NeZero \u2113'\ninst\u271d : NeZero \u03ba\nh_l : \u2113 = \u2113' + \u03ba\n\u03c3 : Type\ninit : ProbComp \u03c3\nimpl : QueryImpl []\u2092 (StateT \u03c3 ProbComp)\nhInit : neverFails init\n\u22a2 OracleReduction.perfectCompleteness init impl\n    (Binius.FRIBinius.CoreInteractionPhase.inputRelation L inst\u271d\u00b9\u2074 \ud835\udd3dq inst\u271d\u00b9\u2070 inst\u271d\u2076 \u2113 \ud835\udce1 \u2113' \u03ba)\n    (Binius.FRIBinius.CoreInteractionPhase.outputRelation L inst\u271d\u00b9\u2074 \ud835\udd3dq inst\u271d\u00b9\u2070 inst\u271d\u2076 \u2113 \ud835\udce1 \u2113' \u03ba)\n    (Binius.FRIBinius.CoreInteractionPhase.oracleReduction L inst\u271d\u00b9\u2074 inst\u271d\u00b9\u00b3 inst\u271d\u00b9\u00b2 inst\u271d\u00b9\u00b9 \ud835\udd3dq inst\u271d\u00b9\u2070 inst\u271d\u2079\n      h_Fq_char_prime h_Fq_card_gt_1 inst\u271d\u2076 r inst\u271d\u2074 \u03b2 h\u03b2_lin_indep \u2113 \ud835\udce1 \u03d1 h_\u2113_add_R_rate \ud835\udcd1 \u2113' \u03ba inst\u271d\u00b9 inst\u271d h_l)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/FRIBinius/CoreInteractionPhase.lean#L231"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "6c89f761d26ed77a68456a5344ea85dbbf44d5000a630b79563e2ddbe0681699"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
        "commit": "b4a420deef68762a68898a4245f54fb1992b6f4c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
        "start_line": 77,
        "start_column": 25,
        "end_line": 77,
        "end_column": 30
      },
      "debug_info": {
        "goal": "d : \u2115\n\u22a2 Continuous fun \u039b => (detRep \u039b, orthchroRep \u039b)",
        "url": "https://github.com/HEPLean/PhysLean/blob/b4a420deef68762a68898a4245f54fb1992b6f4c/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L77"
      },
      "metadata": {
        "blame_email_hash": "f5ab4f28bed3",
        "blame_date": "2025-05-05T23:32:38+10:00",
        "inclusion_date": "2025-05-13T23:18:43.440253+00:00"
      },
      "id": "69f4ede4c712f7bd8247e7278dc2e2e3b63522028b4a9ef070ef8fb870983b6c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 173,
        "start_column": 26,
        "end_line": 173,
        "end_column": 31
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 12 \u2223 4 ^ (n + 1) + 20",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L173"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "47a6916e23f8e8bb8808665f5f5bf207d38440c5c8ce5df84a8def8abc290ea7"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_05.lean",
        "start_line": 58,
        "start_column": 2,
        "end_line": 58,
        "end_column": 7
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\na : \u2124\n\u22a2 \u2191a \u2260 0 \u2192 \u2191(book.quadratic_reciprocity.legendre_sym p inst\u271d a) = \u2191a ^ ((p - 1) / 2)",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_05.lean#L58"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2023-04-09T11:53:00+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "706ad9ad870401169efce74ff82357ee5d2b7571a6ebd0aeb11586f03f1aed3e"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 3 - 7, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "56a755706dbce627a7857c8f09dbc0d4a458b95b66eb6d5da3730d73bd8e9619"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "Kriesel-Putnam",
        "commit": "490341480f0e44083c37c61c3bcaec14e989e23a",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean",
        "start_line": 109,
        "start_column": 54,
        "end_line": 109,
        "end_column": 59
      },
      "debug_info": {
        "goal": "S : Type u_1\ninst\u271d\u00b3 : Entailment (Formula \u2115) S\n\ud835\udce2 : S\ninst\u271d\u00b2 : Consistent \ud835\udce2\ninst\u271d\u00b9 : Entailment.Int \ud835\udce2\ninst\u271d : HasAxiomKrieselPutnam \ud835\udce2\nx y z : (canonicalFrame \ud835\udce2).World\nRxy : (canonicalFrame \ud835\udce2).Rel x y\nRxz : (canonicalFrame \ud835\udce2).Rel x z\nnRyz : \u00ac(canonicalFrame \ud835\udce2).Rel y z\nnRzy : \u00ac(canonicalFrame \ud835\udce2).Rel z y\nN\u0393yz : Set (Formula \u2115) := (fun x => \u223cx) '' {\u03c6 | \u223c\u03c6 \u2208 (\u2191y).1 \u2229 (\u2191z).1}\n\u0393 \u0394 : List (Formula \u2115)\nhC : \ud835\udce2 \u22a2! \u22c0\u0393 \u279d \u22c1\u0394\n\u0393x \u0393yz : List (Formula \u2115)\ne\u0393yz : List.filter (fun x => decide (x \u2208 N\u0393yz)) \u0393 = \u0393yz\nh\u0393 : \u2200 \u03c6 \u2208 \u0393, \u03c6 \u2208 \u0393x \u2228 \u03c6 \u2208 \u0393yz\n\u0394y : List (Formula \u2115)\ne\u0394y : List.filter (fun x => decide (x \u2208 (\u2191y).2)) \u0394 = \u0394y\n\u0394z : List (Formula \u2115)\ne\u0394z : List.filter (fun x => decide (x \u2208 (\u2191z).2)) \u0394 = \u0394z\nh\u0394 : \u2200 \u03c6 \u2208 \u0394, \u03c6 \u2208 \u0394y \u2228 \u03c6 \u2208 \u0394z\n\u22a2 \ud835\udce2 \u22a2! \u22c0\u0393x \u22cf \u223c\u22c0\u0393yz \u279d \u22c1\u0394y \u22ce \u22c1\u0394z",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/490341480f0e44083c37c61c3bcaec14e989e23a/Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean#L109"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-02T14:26:29+09:00",
        "inclusion_date": "2025-05-02T23:27:09.700517+00:00"
      },
      "id": "28b4efba1ac1d4fb767266aae64bca65b83047effda7f04fd580074e3301b55a"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "e4c6e71e5795569df9e9bdbfe4b136897784b355",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/ToMathlib/RealInterpolation/InterpolatedExponents.lean",
        "start_line": 187,
        "start_column": 2,
        "end_line": 187,
        "end_column": 7
      },
      "debug_info": {
        "goal": "p\u2080 p\u2081 p t : ENNReal\nht : t \u2208 Ioo 0 1\nhp : p\u207b\u00b9 = (1 - t) * p\u2080\u207b\u00b9 + t * p\u2081\u207b\u00b9\n\u22a2 p\u207b\u00b9 = t * p\u2080\u207b\u00b9 + (1 - t) * p\u2081\u207b\u00b9",
        "url": "https://github.com/fpvandoorn/carleson/blob/e4c6e71e5795569df9e9bdbfe4b136897784b355/Carleson/ToMathlib/RealInterpolation/InterpolatedExponents.lean#L187"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-06-03T16:50:08+02:00",
        "inclusion_date": "2025-06-24T03:23:45.994996+00:00"
      },
      "id": "5a9d211582db83d42d5cc67ee11c1c4acfc1b1306d0b3345ece6f443beede12d"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/QuaternionAlgebra/NumberField.lean",
        "start_line": 265,
        "start_column": 2,
        "end_line": 265,
        "end_column": 7
      },
      "debug_info": {
        "goal": "F : Type u_1\ninst\u271d\u00b9 : Field F\ninst\u271d : NumberField F\nv : HeightOneSpectrum (\ud835\udcde F)\n\u22a2 IsCompact (localTameLevel v).carrier",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/QuaternionAlgebra/NumberField.lean#L265"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-02-27T16:12:15+00:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "248b4e4e5486e631159f9cea279a858ad0466f02199900a86296183031358d1f"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "99a77d19845fb8083456331fd1256bf35a48f60c",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 128,
        "start_column": 2,
        "end_line": 128,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : Fintype \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\n\u22a2 \u2203 H x, \u2200 (a : \u03b1), @GraphTheory.ES1.averageDegree \u03b1 inst\u271d\u00b9 G inst\u271d / 2 \u2264 \u2191(H.degree a)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/99a77d19845fb8083456331fd1256bf35a48f60c/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L128"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-09-08T22:03:06.847248+00:00"
      },
      "id": "d4d4d7747d0e4505522c2ccd582cc2ee262ecb50187072eb9b8cff7a89e3d52f"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "542a73dde1103e9681a905980679679a767cce8f",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 2937,
        "start_column": 37,
        "end_line": 2937,
        "end_column": 42
      },
      "debug_info": {
        "goal": "C_final : \u211d\nC_final_pos : C_final > 0\nSmoothing : \u211d \u2192 \u211d\neps : \u211d\neps_pos : 0 < eps\neps_less_one : eps < 1\nX : \u211d\nX_large : 3 < X\nT : \u211d\nT_large : 3 < T\n\u03c3\u2081 : \u211d\nsmoothing_support_hyp : support Smoothing \u2286 Icc (1 / 2) 2\nsmoothing_pos_for_x_pos : \u2200 x > 0, 0 \u2264 Smoothing x\nsmoothing_integrates_to_1 : \u222b (x : \u211d) in Ioi 0, Smoothing x / x = 1\nsmoothing_cont_diff : ContDiff \u211d 1 Smoothing\npts_re : \u211d\npts : \u211d \u2192 \u2102 := fun t => \u2191pts_re + \u2191t * I\npts_re_triv : \u2200 (t : \u211d), (pts t).re = pts_re\n\u22a2 pts_re > 0",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/542a73dde1103e9681a905980679679a767cce8f/PrimeNumberTheoremAnd/MediumPNT.lean#L2937"
      },
      "metadata": {
        "blame_email_hash": "a10ea483da1d",
        "blame_date": "2025-06-26T20:17:14-05:00",
        "inclusion_date": "2025-07-03T03:04:39.160667+00:00"
      },
      "id": "099e61c62071d9f4c33f538bf94478f8437dc9886f6bcea18a139c44e268f92f"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "terminalCat",
        "commit": "a2f04a3f90bf6a62c9b984897f5eb40a46b5f735",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/AlgebraicTopology/SimplicialSet/HoFunctorPreservesBinaryProducts.lean",
        "start_line": 154,
        "start_column": 2,
        "end_line": 154,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : SSet\nm : \u2115\nXcolim : IsColimit (Presheaf.coconeOfRepresentable (ULiftHom.down.op.comp X))\n\u22a2 IsIso (prodComparison hoFunctor X (stdSimplex.obj (SimplexCategory.mk m)))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/a2f04a3f90bf6a62c9b984897f5eb40a46b5f735/Mathlib/AlgebraicTopology/SimplicialSet/HoFunctorPreservesBinaryProducts.lean#L154"
      },
      "metadata": {
        "blame_email_hash": "eaaeec08515d",
        "blame_date": "2025-05-18T19:42:04-04:00",
        "inclusion_date": "2025-06-05T03:12:28.661777+00:00"
      },
      "id": "4668a359f0a53c33f9a25fd4b8b87ab486f18296509b65aba0db40ab224db5f5"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "204163b503591e96357e339158a962ad5d5f4e5d",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Shorter.lean",
        "start_line": 203,
        "start_column": 2,
        "end_line": 203,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u211d \u2192 \u211d\nhf : even_fun f\n\u22a2 f (-5) = f 5",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/204163b503591e96357e339158a962ad5d5f4e5d/GlimpseOfLean/Exercises/Shorter.lean#L203"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-09-18T04:26:21.591374+00:00"
      },
      "id": "9958be63d7879e6bb0a68a02eb5a598953a7c6250bc31f2fa7ded4b2a7483ec3"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "binarybasefold",
        "commit": "b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63",
        "lean_version": "v4.22.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Binius/FRIBinius/CoreInteractionPhase.lean",
        "start_line": 255,
        "start_column": 25,
        "end_line": 255,
        "end_column": 30
      },
      "debug_info": {
        "goal": "L : Type\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Fintype L\ninst\u271d\u00b9\u2074 : DecidableEq L\ninst\u271d\u00b9\u00b3 : Inhabited L\n\ud835\udd3dq : Type\ninst\u271d\u00b9\u00b2 : Field \ud835\udd3dq\ninst\u271d\u00b9\u00b9 : Fintype \ud835\udd3dq\ninst\u271d\u00b9\u2070 : DecidableEq \ud835\udd3dq\ninst\u271d\u2079 : Inhabited \ud835\udd3dq\nh_Fq_char_prime : Fact (Nat.Prime (ringChar \ud835\udd3dq))\nh_Fq_card_gt_1 : Fintype.card \ud835\udd3dq > 1\ninst\u271d\u2078 : Algebra \ud835\udd3dq L\ninst\u271d\u2077 : FiniteDimensional \ud835\udd3dq L\nr : \u2115\ninst\u271d\u2076 : NeZero r\n\u03b2 : Fin r \u2192 L\nh\u03b2_lin_indep : LinearIndependent \ud835\udd3dq \u03b2\n\u2113 \ud835\udce1 \u03d1 \u03b3_repetitions : \u2115\ninst\u271d\u2075 : NeZero \u03d1\ninst\u271d\u2074 : NeZero \u2113\nh_\u2113_add_R_rate : \u2113 + \ud835\udce1 < r\n\ud835\udcd1 : Fin 2 \u21aa L\n\u2113' n \u03ba : \u2115\ninst\u271d\u00b3 : NeZero \u2113'\ninst\u271d\u00b2 : NeZero n\ninst\u271d\u00b9 : NeZero \u03ba\nh_l : \u2113 = \u2113' + \u03ba\n\u03c3 : Type\ninit : ProbComp \u03c3\nimpl : QueryImpl []\u2092 (StateT \u03c3 ProbComp)\ninst\u271d : Inhabited (Binius.FRIBinius.CoreInteractionPhase.BB_Wit L inst\u271d\u00b9\u2076 \u2113' 0)\n\u22a2 failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b6469e852d0fcfe955eebe98b0ccfd01fcd5fe63/ArkLib/ProofSystem/Binius/FRIBinius/CoreInteractionPhase.lean#L255"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-09-10T09:45:31+07:00",
        "inclusion_date": "2025-09-16T04:36:55.183984+00:00"
      },
      "id": "2c77a466f4e52032d72366bd327dd68e2bda586c6d292283aa6f426ebb1db8b2"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
        "commit": "7682e673cea51b17d6e9e759a2a21b2acf3a290a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
        "start_line": 80,
        "start_column": 4,
        "end_line": 80,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case h.mp.intro\nd : \u2115\nx : \u2191(\ud835\udcdb d)\n\u039b_proper : IsProper x\n\u039b_ortho : IsOrthochronous x\n\u22a2 x \u2208 connectedComponent 1",
        "url": "https://github.com/HEPLean/PhysLean/blob/7682e673cea51b17d6e9e759a2a21b2acf3a290a/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L80"
      },
      "metadata": {
        "blame_email_hash": "f5ab4f28bed3",
        "blame_date": "2025-05-04T19:41:34+10:00",
        "inclusion_date": "2025-05-04T23:30:06.471767+00:00"
      },
      "id": "24c4109385c5ed54c959387014aeca592beaae77b81d7a8a239ae47095d0cd66"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24",
        "lean_version": "v4.21.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 182,
        "start_column": 23,
        "end_line": 182,
        "end_column": 28
      },
      "debug_info": {
        "goal": "x : \u211d\na b c : \u2115\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 \u2264 x\nh\u2081 : 2 * x ^ 2 = 4 * x + 9\nh\u2082 : x = (\u2191a + \u221a\u2191b) / \u2191c\nh\u2083 : c = 2\n\u22a2 a + b + c = 26",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/b5c6d30e75ae0e833d52d7a9e756e11ecfa92e24/MiniF2F/Test.lean#L182"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-09-13T05:42:04.635029+00:00"
      },
      "id": "a656fe4a2b8952bb09e145188f0627dd88b7feec6ba7a14ec862272891160a61"
    },
    {
      "repo": {
        "remote": "https://github.com/mo271/FormalBook",
        "branch": "mathlib_bump_v4.22",
        "commit": "1e02cb575dba482869e55b4b54f299ed879999f5",
        "lean_version": "v4.23.0-rc2"
      },
      "location": {
        "path": "FormalBook/Chapter_05.lean",
        "start_line": 62,
        "start_column": 2,
        "end_line": 62,
        "end_column": 7
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\na b : \u2124\n\u22a2 book.quadratic_reciprocity.legendre_sym p inst\u271d (a * b) =\n    book.quadratic_reciprocity.legendre_sym p inst\u271d a * book.quadratic_reciprocity.legendre_sym p inst\u271d b",
        "url": "https://github.com/mo271/FormalBook/blob/1e02cb575dba482869e55b4b54f299ed879999f5/FormalBook/Chapter_05.lean#L62"
      },
      "metadata": {
        "blame_email_hash": "ef3bc37f67e8",
        "blame_date": "2023-04-09T11:53:00+02:00",
        "inclusion_date": "2025-09-08T19:42:28.135560+00:00"
      },
      "id": "af121f2782bef65ccb2c8a6eb062c31c5a399504e1762e959e9060089dd7a68a"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 4 - 7, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "d63a932f6883a1e474c2e910b1167b70bc081b66b002dccdca31e329cd467b62"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "Kriesel-Putnam",
        "commit": "490341480f0e44083c37c61c3bcaec14e989e23a",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean",
        "start_line": 114,
        "start_column": 48,
        "end_line": 114,
        "end_column": 53
      },
      "debug_info": {
        "goal": "S : Type u_1\ninst\u271d\u00b3 : Entailment (Formula \u2115) S\n\ud835\udce2 : S\ninst\u271d\u00b2 : Consistent \ud835\udce2\ninst\u271d\u00b9 : Entailment.Int \ud835\udce2\ninst\u271d : HasAxiomKrieselPutnam \ud835\udce2\nx y z : (canonicalFrame \ud835\udce2).World\nRxy : (canonicalFrame \ud835\udce2).Rel x y\nRxz : (canonicalFrame \ud835\udce2).Rel x z\nnRyz : \u00ac(canonicalFrame \ud835\udce2).Rel y z\nnRzy : \u00ac(canonicalFrame \ud835\udce2).Rel z y\nN\u0393yz : Set (Formula \u2115) := (fun x => \u223cx) '' {\u03c6 | \u223c\u03c6 \u2208 (\u2191y).1 \u2229 (\u2191z).1}\n\u0393 \u0394 \u0393x \u0393yz : List (Formula \u2115)\ne\u0393yz : List.filter (fun x => decide (x \u2208 N\u0393yz)) \u0393 = \u0393yz\nh\u0393 : \u2200 \u03c6 \u2208 \u0393, \u03c6 \u2208 \u0393x \u2228 \u03c6 \u2208 \u0393yz\n\u0394y : List (Formula \u2115)\ne\u0394y : List.filter (fun x => decide (x \u2208 (\u2191y).2)) \u0394 = \u0394y\n\u0394z : List (Formula \u2115)\ne\u0394z : List.filter (fun x => decide (x \u2208 (\u2191z).2)) \u0394 = \u0394z\nh\u0394 : \u2200 \u03c6 \u2208 \u0394, \u03c6 \u2208 \u0394y \u2228 \u03c6 \u2208 \u0394z\n\u03b3x \u03b3yz : Formula \u2115\ne\u03b3yz : \u22c0\u0393yz = \u03b3yz\n\u03b4y : Formula \u2115\ne\u03b4y : \u22c1\u0394y = \u03b4y\n\u03b4z : Formula \u2115\ne\u03b4z : \u22c1\u0394z = \u03b4z\nhC : \ud835\udce2 \u22a2! \u03b3x \u22cf \u223c\u03b3yz \u279d \u03b4y \u22ce \u03b4z\n\u22a2 \ud835\udce2 \u22a2! \u03b3x \u279d \u223c\u03b3yz \u279d \u03b4y \u22ce \u03b4z",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/490341480f0e44083c37c61c3bcaec14e989e23a/Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean#L114"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-02T14:26:29+09:00",
        "inclusion_date": "2025-05-02T23:27:09.700517+00:00"
      },
      "id": "2303383c9bcf589809a17c926a7c6a3db60e74f6a8b9baeb12a8d5c0724f00f8"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "pitmonticone/bump_mathlib",
        "commit": "185d0860e8165bef35f44be42f2655e6f44d2c79",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Carleson/ToMathlib/RealInterpolation/InterpolatedExponents.lean",
        "start_line": 403,
        "start_column": 12,
        "end_line": 403,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case e_a.e_a\np\u2080 q\u2080 p\u2081 q\u2081 t : ENNReal\nht : t \u2208 Ioo 0 1\naux : t.toReal \u2260 0\n\u22a2 q\u2081\u207b\u00b9.toReal * t.toReal - q\u2080\u207b\u00b9.toReal * t.toReal = q\u2081\u207b\u00b9.toReal * t.toReal - q\u2080\u207b\u00b9.toReal + q\u2080\u207b\u00b9.toReal * (1 - t).toReal",
        "url": "https://github.com/fpvandoorn/carleson/blob/185d0860e8165bef35f44be42f2655e6f44d2c79/Carleson/ToMathlib/RealInterpolation/InterpolatedExponents.lean#L403"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-06-03T16:50:08+02:00",
        "inclusion_date": "2025-06-19T03:32:10.988086+00:00"
      },
      "id": "2df877941cd1f283224d08e3cd780275806f981678268169335634c584f30598"
    }
  ]
}